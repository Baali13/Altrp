{"version":3,"sources":["webpack:///./resources/modules/editor/src/sass/dialog-content.scss?fdee","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?8fce","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?c57c","webpack:///./resources/modules/editor/src/sass/state-section.scss?3e6a","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1926","webpack:///./resources/modules/editor/src/sass/dialog-content.scss?66a5","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?3739","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?11f8","webpack:///./resources/modules/editor/src/sass/state-section.scss?14a6","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1863","webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/StateSection.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/js/components/ResponsiveDdFooter.js","webpack:///./resources/modules/editor/src/js/components/DialogTab.js","webpack:///./resources/modules/editor/src/js/components/DialogConditionsTab.js","webpack:///./resources/modules/editor/src/js/components/DialogTriggersTab.js","webpack:///./resources/modules/editor/src/js/components/DialogWindow.js","webpack:///./resources/modules/editor/src/Editor.js"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","push","BaseModule","modules","this","ElementsFactory","object","parent","children","elementsManager","window","element","getElementClass","name","length","child","checkElementExists","parseData","id","settings","setSettings","cssClassStorage","setCSSStorage","dynamicContentSettings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","setChildren","cloneDeep","SaveImportModule","resource","Resource","route","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","then","templateData","setTitle","title","data","JSON","parse","setTemplateData","parsedData","elementsFactory","replaceAll","setName","endLoading","TEMPLATE_UPDATED","err","console","error","getTemplateDataForSave","put","res","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","autoHide","autoHideTimeout","autoHideDuration","widget","ChevronIcon","SettingSection","open","toggle","currentElementName","getCurrentElement","currentTab","getCurrentTab","settingSection","setActiveSection","sectionID","activeSectionID","controllers","controls","onClick","label","controller","ControllerComponent","controllersManager","getController","type","controlId","connect","settingSectionMenu","DynamicContent","models","select","getAll","setState","stopPropagation","value","modelName","dataset","modelname","modelTitle","modeltitle","fieldName","fieldname","fieldTitle","fieldtitle","settingName","params","dynamic","onSelect","closeDynamicContent","setModelsSettings","top","offsetTop","offsetHeight","left","classes","show","join","style","getPositionProps","model","fields","field","data-fieldname","data-fieldtitle","data-modelname","data-modeltitle","dynamicContentState","PanelTabContent","sections","section","sectionId","StateSection","buttons","setCurrentState","button","index","currentState","ContentIcon","StyleIcon","AdvancedIcon","SettingsPanel","activeTab","setCurrentTab","toPairs","getControls","forEach","pair","control","Controller","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","width","currentScreen","src","Chevron","UpdateButton","isShowed","saveTemplate","toggleModalWindow","buttonClasses","templateStatus","showModal","status","Times","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","log","tab","iconsManager","getIconsList","currentTarget","assetname","assetsToggle","asset","item","onChoose","active","tabClasses","data-tab","AssetContent","assetProps","iconComponent","url","filename","assetType","data-assetname","assetsManagerSettings","ResponsiveDdFooter","screens","SCREENS","screen","setCurrentScreen","toggleOpen","renderIcon","icon","DialogTab","desc","DialogConditionsTab","handleObjectTypeChange","conditionId","v","object_type","object_ids","handleIdsSelect","ids","handleChangeConditionType","condition_type","currentLogic","searchValue","pageOptions","conditions","close","randomNumber","Math","floor","random","forceUpdate","filteredData","filter","test","findIndex","obj","include","exclude","logic_options","main_options","AltrpSelect","onChange","find","o","p","indexOf","isMulti","closeMenuOnSelect","placeholder","removeCondition","addCondition","updateConditions","DialogTriggersTab","onLoad","onScroll","scrollElement","afterInactivity","on_exit","triggers","on_scroll","size","direction","checked","htmlFor","handleChangePage","min","step","on_page_load","handleCheck","max","defaultValue","on_click","inactivity","updateTriggers","Logo","DialogWindow","template_type","handleClose","handleOpen","renderSwitch","Navigation","History","Preview","Settings","Dots","_export","Hamburger","altrpEditor","activePanel","showDialogWindow","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","contextMenu","hideAll","draggableElement","elementDrag","stopDrag","initModules","currentUser","appStore","changeCurrentUser","settingsActive","templateClasses","getType","href","admin_logo","renderAsset","viewBox"],"mappings":"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","file":"44cc3a1926db109d67ec.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n/**\r\n * @property {Modules} modules\r\n * */\r\nclass BaseModule {\r\n  /**\r\n   * @param {Modules} modules\r\n   * */\r\n  constructor(modules) {\r\n    this.modules = modules;\r\n  }\r\n}\r\n\r\nexport default BaseModule;","import BaseModule from './BaseModule';\r\nimport {getEditor} from \"../../helpers\";\r\n\r\nclass ElementsFactory extends BaseModule{\r\n  parseData(object, parent){\r\n    let children = [];\r\n    const elementsManager = window.elementsManager;\r\n    /**\r\n     * @member {BaseElement} element\r\n     * */\r\n    let element = new (elementsManager.getElementClass(object.name));\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        elementsManager.checkElementExists(child.name) ?\r\n          children.push(this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.children = children;\r\n    /**\r\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\r\n     * */\r\n    let settings = (object.settings.length === 0) ? {} : object.settings;\r\n    element.setSettings(settings);\r\n    let cssClassStorage = (object.cssClassStorage && object.cssClassStorage.length === 0) ? {} : object.cssClassStorage;\r\n    element.setCSSStorage(cssClassStorage);\r\n    if(object.dynamicContentSettings){\r\n      element.dynamicContentSettings = (object.dynamicContentSettings.length === 0) ? {} : object.dynamicContentSettings;\r\n    }\r\n\r\n    if(parent){\r\n      element.parent = parent;\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} element\r\n   * @param {BaseElement} target\r\n   * @return{BaseElement}\r\n   * */\r\n  duplicateElement(element, target){\r\n\r\n    let newElement = this._duplicateElement(element);\r\n    target.insertNewChildAfter(element.getId(), newElement);\r\n    /**\r\n     * @member {TemplateDataStorage} templateDataStorage\r\n     * */\r\n    let templateDataStorage = getEditor().modules.templateDataStorage;\r\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\r\n    return newElement;\r\n  }\r\n  /**\r\n   * @param {BaseElement} element\r\n   * */\r\n  _duplicateElement(element){\r\n    /**\r\n     * @member {BaseElement} newElement\r\n     * */\r\n    let newElement = new (elementsManager.getElementClass(element.getName()));\r\n    let newChildren = [];\r\n    element.children.map((childrenItem)=>{\r\n      let newChild = this._duplicateElement(childrenItem);\r\n      newChild.setParent(newElement);\r\n      newChildren.push(newChild);\r\n    });\r\n    // newElement.component = new\r\n    newElement.setChildren(newChildren);\r\n    newElement.settings = _.cloneDeep(element.settings);\r\n    if(element.dynamicContentSettings){\r\n      newElement.dynamicContentSettings = _.cloneDeep(element.dynamicContentSettings);\r\n    }\r\n    newElement.children = newChildren;\r\n    return newElement;\r\n  }\r\n}\r\n\r\nexport default ElementsFactory;","import BaseModule from \"./BaseModule\";\r\nimport Resource from \"../Resource\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport RootElement from \"../elements/RootElement\";\r\nimport store from \"../../store/store\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\nimport {setTitle} from \"../../../../../front-app/src/js/helpers\";\r\nimport {setTemplateData} from \"../../store/template-data/actions\";\r\n\r\nclass SaveImportModule extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n\r\n    this.resource = new Resource({\r\n      route: '/admin/ajax/templates',\r\n    });\r\n  }\r\n\r\n  load(){\r\n    this.template_id = getTemplateId();\r\n    // console.log(this.template_id);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    if(this.template_id){\r\n      let res = this.resource.get(this.template_id).then(templateData => {\r\n        setTitle(templateData.title);\r\n        let data = JSON.parse(templateData.data);\r\n        store.dispatch(setTemplateData(templateData));\r\n        let parsedData = this.modules.elementsFactory.parseData(data);\r\n        let templateDataStorage = getEditor().modules.templateDataStorage;\r\n        templateDataStorage.replaceAll(parsedData);\r\n        templateDataStorage.setTitle(templateData.title);\r\n        templateDataStorage.setName(templateData.name);\r\n        getEditor().endLoading();\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      }).catch(err=>{\r\n        console.error(err);\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  saveTemplate(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\r\n    this.resource.put(this.template_id, templateData).then(res=>{\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    }).catch(err=>{\r\n      console.error(err);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default SaveImportModule;","class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from '../../store/store';\r\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if(! element instanceof RootElement ){\r\n      throw 'Expect Root Element as root element;)';\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave(){\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || 'testtitle';\r\n    data.name = this.name || 'testname';\r\n    return data;\r\n  }\r\n\r\n  setTitle(title){\r\n    this.title = title;\r\n  }\r\n\r\n\r\n  setName(name){\r\n    this.name = name;\r\n  }\r\n\r\n  setCurrentRootElement(){\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element){\r\n    if(! element instanceof BaseElement){\r\n      throw 'Only Base Element Can Be Set as Default'\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement(){\r\n    if(!this.currentElement){\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getRootElement(){\r\n    return this.rootElement\r\n  }\r\n\r\n  addWidgetInSection(elementName){\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\r\n    this.elementsIds.push(newWidget.getId());\r\n\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n}\r\n\r\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { widgets: window.elementsManager.getWidgetsList() };\r\n  }\r\n  render() {\r\n    return <div className=\"widget-panel-wrapper\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div className=\"widget-panel\">\r\n          {\r\n            this.state.widgets.map(widget => {\r\n              return <WidgetIcon element={widget} key={widget.getName()} />;\r\n            })\r\n          }\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel","import React, { Component } from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentElement, getCurrentTab, getElementState } from \"../store/store\";\r\nimport { setActiveSection } from \"../store/setting-section/actions\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    /**\r\n     * Если еще ни разу не открывали текущую вкладку у элемента,\r\n     * то в setActiveSection передадим 0\r\n     */\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    if (! (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined))) {\r\n      this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), 0));\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), this.props.sectionID));\r\n  };\r\n\r\n  render() {\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    let activeSectionID = 0;\r\n    /**\r\n     * Сравниваем с undefined\r\n     */\r\n    if (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined)) {\r\n      activeSectionID = this.props.settingSection[currentElementName][currentTab];\r\n    }\r\n    let controllers = this.props.controls || [];\r\n    return (\r\n      <div  className={\"settings-section \" + (this.props.sectionID === activeSectionID ? 'open' : '')}>\r\n        <div className=\"settings-section__title d-flex\" onClick={this.toggle}>\r\n          <div className=\"settings-section__icon d-flex \">\r\n            <ChevronIcon />\r\n          </div>\r\n          <div className=\"settings-section__label\">\r\n            {this.props.label}\r\n          </div>\r\n        </div>\r\n        <div className=\"controllers-wrapper\">\r\n          {\r\n            controllers.map((controller) => {\r\n              let ControllerComponent = window.controllersManager.getController(controller.type);\r\n              return React.createElement(ControllerComponent, { ...controller, key: controller.controlId });\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settingSection: state.settingSectionMenu\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SettingSection);\r\n","import React, {Component} from \"react\";\r\nimport './DynamicContent.scss';\r\nimport './../../../sass/altrp-menu.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {closeDynamicContent} from \"../../store/dynamic-content/actions\";\r\nimport store from \"../../store/store\";\r\nimport {getCurrentElement} from \"../../store/store\";\r\nimport Resource from \"../../classes/Resource\";\r\n\r\n/**\r\n * Класс реализующий список динамических данных для контроллера\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      models: [\r\n\r\n        ],\r\n      };\r\n    this.select = this.select.bind(this);\r\n    this.resource = new Resource({route: '/admin/ajax/models_with_fields_options'});\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let models = await this.resource.getAll();\r\n    this.setState(state=>({\r\n        ...state,\r\n      models,\r\n    }))\r\n  }\r\n  /**\r\n   * Обработка клика по элемету\r\n   */\r\n  select(e){\r\n    e.stopPropagation();\r\n    let value = {};\r\n\r\n    value.modelName = e.target.dataset.modelname;\r\n    value.modelTitle = e.target.dataset.modeltitle;\r\n    value.fieldName = e.target.dataset.fieldname;\r\n    value.fieldTitle = e.target.dataset.fieldtitle;\r\n    value.settingName = this.props.params.settingName;\r\n    value.dynamic = true;\r\n    this.props.params.onSelect(value);\r\n    store.dispatch(closeDynamicContent());\r\n    getCurrentElement().setModelsSettings(value);\r\n  }\r\n\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()}>\r\n      <div className=\"altrp-menu\">\r\n        {\r\n          this.state.models.map(model=>{\r\n            return<div className=\"altrp-menu-group\" key={model.modelName}>\r\n              <div className=\"altrp-menu__title\" key={model.modelName}>{model.title}</div>\r\n              { model.fields.map(field=>(<div className=\"altrp-menu__item\"\r\n                                       data-fieldname={field.fieldName}\r\n                                       data-fieldtitle={field.title}\r\n                                       data-modelname={model.modelName}\r\n                                       data-modeltitle={model.title}\r\n                                       onClick={this.select}\r\n                                       key={`${model.modelName}${field.fieldName}`}>{field.title}</div>))}\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, { Component } from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass PanelTabContent extends Component {\r\n\r\n  render() {\r\n    let sections = this.props.sections || [];\r\n    return <div className=\"settings-controllers\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div id=\"settingsControllers\">\r\n          {\r\n            sections.map((section, idx) => {\r\n              return React.createElement(SettingSection, {\r\n                ...section,\r\n                key: section.sectionId,\r\n                sectionID: idx,\r\n              });\r\n            }\r\n            )\r\n          }\r\n          <DynamicContent />\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default PanelTabContent\r\n","import React, { Component } from \"react\";\r\nimport '../../sass/state-section.scss'\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\nimport { getElementState, getCurrentTab } from \"../store/store\";\r\n\r\nclass StateSection extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buttons: [\r\n        { title: \"N\", value: \"\" },\r\n        { title: \"H\", value: \":hover\" },\r\n        { title: \"A\", value: \".active\" },\r\n        { title: \"F\", value: \":focus\" },\r\n        { title: \"D\", value: \".state-disabled\" },\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(setCurrentState(\"N\", \"\"));\r\n  }\r\n\r\n  setCurrentState(button) {\r\n    this.props.dispatch(setCurrentState(button.title, button.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"state-section\">\r\n        {\r\n          this.state.buttons.map((button, index) => {\r\n            return <button\r\n              key={index}\r\n              className={\"state-section__button \" + (this.props.currentState.title === button.title ? \"state-section__button_active\" : \"\")}\r\n              onClick={() => this.setCurrentState(button)}\r\n            >{button.title}</button>\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentState: state.currentState\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StateSection);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ContentIcon from '../../svgs/content.svg'\r\nimport StyleIcon from '../../svgs/style.svg'\r\nimport AdvancedIcon from '../../svgs/advanced.svg'\r\nimport { TAB_ADVANCED, TAB_CONTENT, TAB_STYLE } from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport Controller from \"../classes/Controller\";\r\nimport { setCurrentTab } from \"../store/active-settings-tab/actions\";\r\nimport { getCurrentTab, getElementState } from \"../store/store\";\r\nimport StateSection from \"./StateSection\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab) {\r\n    this.setState({\r\n      ...this.state, activeTab\r\n    })\r\n    this.props.setCurrentTab(activeTab);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(this.state.activeTab)\r\n  };\r\n\r\n  render() {\r\n\r\n    let controllersManager = window.controllersManager;\r\n    let sections = [];\r\n    if (this.props.currentElement.getName) {\r\n      let allControllersPairs = _.toPairs(controllersManager.getControls(this.props.currentElement.getName()));\r\n      allControllersPairs.forEach(pair => {\r\n        pair[1].forEach(section => {\r\n          section.controls = section.controls.map(control => {\r\n            return {\r\n              ...control,\r\n              controller: new Controller(control)\r\n            }\r\n          });\r\n        });\r\n        if (pair[0] === this.state.activeTab) {\r\n          sections = [...pair[1]];\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\r\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\r\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\r\n    return <div className=\"panel settings-panel d-flex\">\r\n      <div className=\"panel-tabs d-flex\">\r\n        <button className={contentTabClasses} onClick={() => this.setActiveTab(TAB_CONTENT)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <ContentIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Content\r\n          </span>\r\n        </button>\r\n        <button className={styleTabClasses} onClick={() => this.setActiveTab(TAB_STYLE)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <StyleIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Style\r\n          </span>\r\n        </button>\r\n        <button className={advancedTabClasses} onClick={() => this.setActiveTab(TAB_ADVANCED)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <AdvancedIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Advanced\r\n          </span>\r\n        </button>\r\n      </div>\r\n      {\r\n        (this.state.activeTab === 'style' && <StateSection />)\r\n      }\r\n      <PanelTabContent sections={sections} />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement.currentElement,\r\n    currentState: state.currentState,\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { setCurrentTab, setCurrentState })(SettingsPanel);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ width: this.props.currentScreen.width, height: this.props.currentScreen.height }} className={\"editor-window\"} id=\"editorWindow\">\r\n\r\n      <iframe src=\"/admin/editor-content\" width=\"100%\" />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(EditorWindow)","import React, {Component} from \"react\";\r\n\r\nclass HistoryPanel extends Component {\r\n\r\n  render() {\r\n    return <div className=\"history-panel\">\r\n      HistoryPanel\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default HistoryPanel","import Chevron from '../../svgs/chevron.svg';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEditor } from \"../helpers\";\r\nimport CONSTANTS from '../consts'\r\n\r\nclass UpdateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowed: false,\r\n    }\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e) {\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n  showModal() {\r\n    this.props.toggleModalWindow();\r\n  }\r\n\r\n  render() {\r\n    let buttonClasses = 'btn font_montserrat font_500 btn_grey';\r\n    switch (this.props.templateStatus) {\r\n      case CONSTANTS.TEMPLATE_UPDATED: {\r\n        buttonClasses += ' btn_disabled ';\r\n      }\r\n        break;\r\n      case CONSTANTS.TEMPLATE_NEED_UPDATE: {\r\n        buttonClasses += ' btn_active ';\r\n      }\r\n        break;\r\n    }\r\n    return <div className=\"control-group d-flex\">\r\n      <button className={buttonClasses} onClick={this.saveTemplate}>\r\n        UPDATE\r\n      </button>\r\n      <button onClick={() => this.showModal()} className=\"btn btn_grey\">\r\n        <Chevron className=\"icon\" />\r\n      </button>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton)","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport { iconsManager } from \"../../helpers\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        }\r\n      ],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await this.mediaResource.getAll();\r\n\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: res };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = res;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  getAssets(tab) {\r\n    if (!tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return iconsManager().getIconsList();\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  render() {\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  AssetContent = asset.iconComponent;\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"20\";\r\n                  assetProps.height = \"20\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentScreen } from \"../store/responsive-switcher/actions\"\r\nimport { iconsManager } from \"../helpers\"\r\nimport CONSTANTS from '../consts'\r\n\r\nclass ResponsiveDdFooter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      screens: CONSTANTS.SCREENS,\r\n      open: false,\r\n    }\r\n  };\r\n  toggleOpen() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  };\r\n  setCurrentScreen(screen) {\r\n    this.props.setCurrentScreen(screen);\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"responsive-footer-wrapper\">\r\n        <span className={\"responsive-footer-title \" + (this.state.open ? 'responsive-footer-icon__close' : '')} onClick={() => this.toggleOpen()}>{iconsManager().renderIcon(this.props.currentScreen.icon)}</span>\r\n        <div className={\"responsive-footer-submenu \" + (this.state.open ? \"responsive-footer-submenu-open\" : '')} >\r\n          {\r\n            this.state.screens.map(screen => {\r\n              return <button\r\n                className={\"responsive-footer-submenu__item \" + (this.props.currentScreen.id === screen.id ? \"responsive-footer-submenu__item__active\" : '')}\r\n                onClick={() => this.setCurrentScreen(screen)}\r\n                key={screen.id}>\r\n                {iconsManager().renderIcon(screen.icon)}\r\n              </button>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentScreen })(ResponsiveDdFooter);\r\n","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss'\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\n\r\nclass DialogTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"modal-tab-wrapper \" + (this.props.active ? 'modal-tab-wrapper-active' : '')}>\r\n        <div className=\"modal-tab__image\">\r\n          {\r\n            iconsManager().renderIcon(this.props.tab.icon)\r\n          }\r\n        </div>\r\n        <div className=\"modal-tab__content\">\r\n          <div className=\"modal-tab__title\">{this.props.tab.title}</div>\r\n          <div className=\"modal-tab__description\">{this.props.tab.desc}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DialogTab;","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss';\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport Select from 'react-select'\r\nimport Resource from '../classes/Resource';\r\nimport {getEditor, getTemplateId} from '../helpers';\r\nimport AltrpSelect from '../../../../admin/src/components/altrp-select/AltrpSelect';\r\n\r\nexport default class DialogConditionsTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        value: [],\r\n        currentLogic: 'include',\r\n        searchValue: '',\r\n        pageOptions: [],\r\n      };\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/conditions` });\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    let conditions = await this.resource.getAll();\r\n    let pageOptions = await (new Resource({route: \"/admin/ajax/pages_options\" })).getAll();\r\n    this.setState({\r\n      value: conditions.data || [],\r\n      pageOptions\r\n      // value: []\r\n    })\r\n  };\r\n\r\n  /**\r\n   * запрос на обнровление условий\r\n   * @param {boolean} close\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateConditions(close = false) {\r\n    let res = await (new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/conditions` })).put('', { data: this.state.value });\r\n    if(close){\r\n      getEditor().toggleModalWindow()\r\n    }\r\n  }\r\n\r\n  addCondition() {\r\n    let randomNumber = Math.floor(1 + Math.random() * (1000 - 1));\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.push({\r\n      object_type: 'all_site',\r\n      object_ids: [],\r\n      id: randomNumber,\r\n      condition_type: 'include',\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n    this.forceUpdate();\r\n  };\r\n\r\n\r\n  removeCondition(id) {\r\n    let filteredData = this.state.value.filter(data => data.id !== id);\r\n    this.setState({\r\n      value: filteredData,\r\n    })\r\n  }\r\n\r\n\r\n  handleChange(e, test) {\r\n    if (e.value === 'include') {\r\n      this.setState({\r\n        currentLogic: e.value,\r\n      });\r\n      return;\r\n    } else if (e.value === 'exclude') {\r\n      this.setState({\r\n        currentLogic: e.value,\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.currentLogic === 'include') {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].include[0] = { ...data[index].include[0], [e.name]: e.value };\r\n      data[index].exclude = [];\r\n      this.setState({\r\n        value: data,\r\n      })\r\n    } else if (this.state.currentLogic === 'exclude') {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].exclude[0] = { ...data[index].exclude[0], [e.name]: e.value };\r\n      data[index].include = [];\r\n      this.setState({\r\n        value: data,\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * именение object_type для условий\r\n   * @param {object} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleObjectTypeChange = (e, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v=>{\r\n      if(v.id === conditionId){\r\n        v.object_type = e.value;\r\n        v.object_ids = [];\r\n      }\r\n    });\r\n    this.setState(state =>({\r\n      ...state, value,\r\n    }));\r\n  };\r\n  /**\r\n   * изменение спика ид объектов\r\n   * @param {[]} ids\r\n   * @param {integer} conditionId\r\n   */\r\n  handleIdsSelect = (ids, conditionId)=>{\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v=>{\r\n      if(v.id === conditionId){\r\n        v.object_ids = ids.map(id=>id.value);\r\n      }\r\n    });\r\n    this.setState(state =>({\r\n      ...state, value,\r\n    }));\r\n  };\r\n  /**\r\n   * изменение типа  условия\r\n   * @param {[]} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleChangeConditionType = (e, conditionId)=>{\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v=>{\r\n      if(v.id === conditionId){\r\n        v.condition_type = e.value;\r\n      }\r\n    });\r\n    this.setState(state =>({\r\n      ...state, value,\r\n    }));\r\n  };\r\n  handleSelect(e) {\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const logic_options = [\r\n      { name: 'logic_type', value: 'include', label: 'Include' },\r\n      { name: 'logic_type', value: 'exclude', label: 'Exclude' },\r\n    ];\r\n    const main_options = [\r\n      { name: 'type', value: 'all_site', label: 'All Site' },\r\n      { name: 'type', value: 'page', label: 'Page' },\r\n      // { name: 'type', value: 'model', label: 'Model' },\r\n      // { name: 'type', value: 'not_authorized_page', label: 'Not Authorized' },\r\n      // { name: 'type', value: 'not_found_page', label: 'Not found: 404' },\r\n    ];\r\n    const model_options = [\r\n      { name: 'model_name', value: 'model1', label: 'model1' },\r\n      { name: 'model_name', value: 'model2', label: 'model2' },\r\n      { name: 'model_name', value: 'model3', label: 'model3' },\r\n      { name: 'model_name', value: 'model4', label: 'model4' },\r\n    ];\r\n    return (\r\n      <div className=\"modal-condition-tab\">\r\n        <div className=\"modal-condition-image\">\r\n          {\r\n            iconsManager().renderIcon('conditions_tab')\r\n          }\r\n        </div>\r\n        <div className=\"modal-condition-title\">Where Do You Want to Display Your Template?</div>\r\n        <div className=\"modal-condition-text\">\r\n          Set the conditions that determine where your Template is used throughout your site.<br />\r\n          For example, choose 'Entire Site' to display the template across your site.\r\n        </div>\r\n        <div className=\"modal-repeater-fields-wrapper\">\r\n          <div className=\"modal-repeater-fields\">\r\n            {\r\n              this.state.value.map(test => {\r\n                console.log(test);\r\n                return (\r\n                  <div className=\"modal-repeater-field\" key={test.id}>\r\n                    <AltrpSelect\r\n                      onChange={(e) => this.handleChangeConditionType(e, test.id)}\r\n                      className=\"modal-repeater-field-c1\"\r\n                      options={logic_options}\r\n                      value={_.find(logic_options, o=>o.value === test.condition_type) || logic_options[0]}\r\n                    />\r\n                    <AltrpSelect\r\n                      onChange={(value) => this.handleObjectTypeChange(value, test.id)}\r\n                      className=\"modal-repeater-field-c2\"\r\n                      options={main_options}\r\n                      value={_.find(main_options, o=>o.value === test.object_type) || main_options[0]}\r\n                      // defaultValue={main_options[0]}\r\n                    />\r\n                    {/*{*/}\r\n                      {/*(test.include[0]) &&*/}\r\n                      {/*(test.include[0].type === 'model'*/}\r\n                        {/*&&*/}\r\n                        {/*<Select*/}\r\n                          {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                          {/*className=\"modal-repeater-field-c3\"*/}\r\n                          {/*defaultValue={model_options[0]}*/}\r\n                          {/*options={model_options}*/}\r\n                        {/*/>)*/}\r\n                    {/*}*/}\r\n                    {/*{*/}\r\n                      {/*(test.exclude[0]) &&*/}\r\n                      {/*(test.exclude[0].type === 'model' &&*/}\r\n                        {/*<Select*/}\r\n                          {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                          {/*className=\"modal-repeater-field-c3\"*/}\r\n                          {/*defaultValue={model_options[0]}*/}\r\n                          {/*options={model_options}*/}\r\n                        {/*/>)*/}\r\n                    {/*}*/}\r\n                    {\r\n                      test.object_type === 'page' &&\r\n                        <AltrpSelect\r\n                          // value={(test.object_ids || []).map(o=>this.state.pageOptions.find())}\r\n                          value={_.filter(this.state.pageOptions, p => test.object_ids && test.object_ids.indexOf(p.value) >= 0)}\r\n                          onChange={(e) => this.handleIdsSelect(e, test.id)}\r\n                          isMulti={true}\r\n                          closeMenuOnSelect={false}\r\n                          placeholder=\"Choose Pages\"\r\n                          options={this.state.pageOptions}\r\n                          className=\"modal-repeater-field-c3\"\r\n                        />\r\n                    }\r\n                    <button onClick={() => this.removeCondition(test.id)} className=\"modal-repeater-tool-remove\">X</button>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-condition-button-wrapper\">\r\n          <button onClick={() => this.addCondition()} className=\"modal-condition-button\">Add condition</button>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateConditions(true)} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateConditions()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss';\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport { getTemplateId } from '../helpers';\r\nimport Resource from '../classes/Resource';\r\n\r\nexport default class DialogTriggersTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: {},\r\n      onLoad: false,\r\n      onScroll: false,\r\n      scrollElement: false,\r\n      onClick: false,\r\n      afterInactivity: false,\r\n      on_exit: false,\r\n    }\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/settings` })\r\n  }\r\n\r\n  async updateTriggers() {\r\n    let res = await this.resource.put('triggers', {data: this.state.value});\r\n    console.log(res);\r\n  }\r\n\r\n\r\n\r\n  /**  Отправляем get request, результат присваиваем  state.value */\r\n  async componentDidMount() {\r\n    let triggers = await this.resource.get('triggers')\r\n    this.setState({\r\n      value: triggers.data,\r\n    })\r\n  }\r\n\r\n  handleChangePage(e) {\r\n    if (e.target.name === 'direction') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            direction: e.target.value, \r\n          }\r\n        }\r\n      })\r\n      return;\r\n    } else if (e.target.name === 'size') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            size: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    }\r\n    this.setState({\r\n      value: {\r\n        ...this.state.value,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCheck(e) {\r\n    if (e.target.name === 'on_exit') {\r\n      this.setState({\r\n        [e.target.name]: e.target.checked,\r\n        value:{\r\n          ...this.state.value,\r\n          [e.target.name]: e.target.checked,\r\n        }\r\n      })\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"triggers-tab\">\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('page_load')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Load</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onLoad &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-pageLoad\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-pageLoad\"\r\n                    onChange={(e) => this.handleChangePage(e)} type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"0.1\"\r\n                    value={this.state.on_page_load}\r\n                    name=\"on_page_load\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onLoad\"\r\n                checked={this.state[name]}\r\n                id=\"toggleSwitch\"\r\n                onChange={(e) => this.handleCheck(e)}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputSelect\">Direction</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <select\r\n                    name=\"direction\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                    id=\"triggers-control-field-inputSelect\">\r\n                    <option value=\"down\">Down</option>\r\n                    <option value=\"up\">Up</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputNumber2\">Within(%)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"100\"\r\n                    id=\"triggers-control-field-inputNumber2\"\r\n                    name=\"size\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onScroll\"\r\n                checked={this.state[name]}\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitch2\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch2\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling_to')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll To Element</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.scrollElement &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputText\">Selector</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-inputText\"\r\n                    id=\"triggers-control-field-Text\"\r\n                    type=\"text\"\r\n                    name=\"to_element\"\r\n                    placeholder=\".my class\"\r\n                    defaultValue=''\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"scrollElement\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchText\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchText\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('click')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Click</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onClick &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-Clicks\">Clicks</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-Clicks\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    name=\"on_click\"\r\n                    value={this.state.on_click}\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"onClick\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchClicks\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchClicks\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('inactivity')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">After Inactivity</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.afterInactivity &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inactivity\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-inactivity\"\r\n                    type=\"number\"\r\n                    value={this.state.inactivity}\r\n                    min=\"1\"\r\n                    step=\"0.1\"\r\n                    name=\"inactivity\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"afterInactivity\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchInactivity\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchInactivity\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('exit_intent')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Exit Intent</div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"on_exit\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchIntent\"\r\n                onChange={(e) => this.setState({ on_exit: !this.state.on_exit })}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchIntent\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Logo from \"../../svgs/logo.svg\";\r\nimport '../../sass/dialog-content.scss'\r\nimport DialogTab from './DialogTab';\r\nimport DialogConditionsTab from './DialogConditionsTab';\r\nimport DialogTriggersTab from './DialogTriggersTab';\r\nimport {connect} from 'react-redux';\r\n\r\nclass DialogWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let tabs = [\r\n      { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n    ];\r\n    if(['popup'].indexOf(this.props.templateData.template_type) >= 0){\r\n      tabs = [\r\n        { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n        { icon: 'triggers_tab', title: 'Triggers', desc: 'What action the user needs to do for the popup to open.' },\r\n        { icon: 'triggers_tab', title: 'Advanced Rules', desc: 'Requirements that have to be met for the popup to open.' },\r\n      ];\r\n    }\r\n    this.state = {\r\n      activeTab: 'Conditions',\r\n      tabs,\r\n      \r\n    }\r\n  }\r\n\r\n  handleOpen(title) {\r\n    this.setState({\r\n      activeTab: title,\r\n    })\r\n  };\r\n  \r\n  handleClose() {\r\n    this.props.toggleModalWindow()\r\n  };\r\n\r\n  renderSwitch(activeTab) {\r\n    switch (this.state.activeTab) {\r\n      case 'Conditions':\r\n        return <DialogConditionsTab />;\r\n      case 'Triggers':\r\n        return <DialogTriggersTab />;\r\n      case 'Advanced Rules':\r\n        return <div>ADVANCED</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  // (this.state.activeTab === 'Conditions' && <DialogConditionsTab /> ||\r\n  //   this.state.activeTab === 'Triggers' && <div>Triggers</div> ||\r\n  //   this.state.activeTab === 'Advanced Rules' && <div>Advanced Rules</div>\r\n  // )\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-header\">\r\n            <Logo className=\"modal-header__logo\" />\r\n            <button onClick={() => this.handleClose()}>X</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"modal-body__tabs\">\r\n              {\r\n                this.state.tabs.map((tab, index) => {\r\n                  return <div key={tab.title} onClick={() => this.handleOpen(tab.title)}>\r\n                    <DialogTab active={this.state.activeTab === tab.title ? true : false} tab={tab} />\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n            <div className=\"modal-body__content\">\r\n              {this.renderSwitch(this.state.activeTab)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {templateData: state.templateData};\r\n}\r\nexport default connect(mapStateToProps)(DialogWindow);","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport CONSTANTS from \"./js/consts\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\n\r\nimport store, { getCurrentElement, getCurrentScreen } from \"../src/js/store/store\";\r\n\r\n\r\nimport DesktopIcon from \"./svgs/desktop.svg\";\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport { contextMenu } from \"react-contexify\";\r\nimport DynamicContent from \"./js/components/DynamicContent/DynamicContent\";\r\nimport { closeDynamicContent } from \"./js/store/dynamic-content/actions\";\r\nimport { iconsManager } from \"../../admin/src/js/helpers\";\r\nimport ResponsiveDdMenu from \"./js/components/ResponsiveDdMenu\";\r\nimport ResponsiveDdFooter from \"./js/components/ResponsiveDdFooter\";\r\nimport DialogWindow from \"./js/components/DialogWindow\";\r\nimport {renderAsset} from \"../../front-app/src/js/helpers\";\r\nimport {changeCurrentUser} from \"../../front-app/src/js/store/current-user/actions\";\r\nimport Resource from \"./js/classes/Resource\";\r\nimport appStore from \"../../front-app/src/js/store/store\";\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n      showDialogWindow: false,\r\n    };\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  templateStatus() {\r\n    let templateStatus = store.getState().templateStatus.status;\r\n    if (templateStatus !== this.state.templateStatus) {\r\n      this.setState({ ...this.state, templateStatus });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\",\r\n    });\r\n  }\r\n\r\n  /** \r\n   * Показывает Dialog окно\r\n   */\r\n  toggleModalWindow() {\r\n    this.setState({\r\n      showDialogWindow: !this.state.showDialogWindow\r\n    })\r\n  };\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent())\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  async componentDidMount() {\r\n    this.initModules();\r\n\r\n    let currentUser = await (new Resource({route: '/ajax/current-user'})).getAll();\r\n    currentUser = currentUser.data;\r\n    appStore.dispatch(changeCurrentUser(currentUser));\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let templateClasses = \"editor \";\r\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n      \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={templateClasses}\r\n          onClick={this.onClick}\r\n          onDragEnd={this.onDragEnd}>\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n              // onClick={this.showSettingsPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin/templates\" target=\"_blank\" className=\"logo\">\r\n                {\r\n                  window.admin_logo\r\n                    ? renderAsset(window.admin_logo, { className: 'editor__logo' })\r\n                    : <Logo viewBox=\"0 0 97 35\" className=\"editor__logo\" />\r\n                }\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <div className=\"btn \">\r\n                <ResponsiveDdFooter />\r\n              </div>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton onClick={() => this.toggleModalWindow()} toggleModalWindow={() => this.toggleModalWindow()} />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.state.showDialogWindow &&\r\n            <DialogWindow state={this.state.showDialogWindow}\r\n                          toggleModalWindow={() => this.toggleModalWindow()} />}\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(Editor);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}