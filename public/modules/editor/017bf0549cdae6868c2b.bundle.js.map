{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?8fce","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?c57c","webpack:///./resources/modules/editor/src/sass/state-section.scss?3e6a","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1926","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?3739","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?11f8","webpack:///./resources/modules/editor/src/sass/state-section.scss?14a6","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1863","webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/StateSection.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/Editor.js"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","BaseModule","modules","this","ElementsFactory","object","parent","children","elementsManager","window","element","getElementClass","name","length","child","checkElementExists","parseData","id","settings","setSettings","dynamicContentSettings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","setChildren","cloneDeep","SaveImportModule","resource","Resource","route","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","then","templateData","setTitle","title","data","JSON","parse","parsedData","elementsFactory","replaceAll","setName","endLoading","TEMPLATE_UPDATED","err","console","error","getTemplateDataForSave","put","res","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","widget","SettingSection","open","active","toggle","setActiveSection","getCurrentElement","getCurrentTab","sectionID","currentElementName","currentTab","activeSectionId","settingSection","controllers","controls","data-open","data-key","onClick","label","controller","ControllerComponent","controllersManager","getController","type","controlId","connect","settingSectionMenu","DynamicContent","models","select","getAll","setState","stopPropagation","value","modelName","dataset","modelname","modelTitle","modeltitle","fieldName","fieldname","fieldTitle","fieldtitle","settingName","params","dynamic","onSelect","closeDynamicContent","setModelsSettings","top","offsetTop","offsetHeight","left","classes","show","join","style","getPositionProps","model","fields","field","data-fieldname","data-fieldtitle","data-modelname","data-modeltitle","dynamicContentState","StateSection","buttons","button","setCurrentState","index","currentState","PanelTabContent","sections","autoHide","autoHideTimeout","autoHideDuration","section","sectionId","SettingsPanel","activeTab","setCurrentTab","toPairs","getControls","forEach","pair","control","Controller","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","src","width","UpdateButton","saveTemplate","buttonClasses","templateStatus","status","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","log","tab","iconsManager","getIconsList","currentTarget","assetname","assetsToggle","asset","item","onChoose","tabClasses","data-tab","AssetContent","assetProps","iconComponent","url","filename","assetType","data-assetname","_export","assetsManagerSettings","altrpEditor","activePanel","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","contextMenu","hideAll","draggableElement","elementDrag","stopDrag","initModules","settingsActive","templateClasses","getType","href","admin_logo","renderAsset","viewBox"],"mappings":"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","file":"017bf0549cdae6868c2b.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n/**\r\n * @property {Modules} modules\r\n * */\r\nclass BaseModule {\r\n  /**\r\n   * @param {Modules} modules\r\n   * */\r\n  constructor(modules) {\r\n    this.modules = modules;\r\n  }\r\n}\r\n\r\nexport default BaseModule;","import BaseModule from './BaseModule';\r\nimport {getEditor} from \"../../helpers\";\r\n\r\nclass ElementsFactory extends BaseModule{\r\n  parseData(object, parent){\r\n    let children = [];\r\n    const elementsManager = window.elementsManager;\r\n    /**\r\n     * @member {BaseElement} element\r\n     * */\r\n    let element = new (elementsManager.getElementClass(object.name));\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        elementsManager.checkElementExists(child.name) ?\r\n          children.push(this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.children = children;\r\n    /**\r\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\r\n     * */\r\n    let settings = (object.settings.length === 0) ? {} : object.settings;\r\n    element.setSettings(settings);\r\n    if(object.dynamicContentSettings){\r\n      element.dynamicContentSettings = (object.dynamicContentSettings.length === 0) ? {} : object.dynamicContentSettings;\r\n    }\r\n\r\n    if(parent){\r\n      element.parent = parent;\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} element\r\n   * @param {BaseElement} target\r\n   * @return{BaseElement}\r\n   * */\r\n  duplicateElement(element, target){\r\n\r\n    let newElement = this._duplicateElement(element);\r\n    target.insertNewChildAfter(element.getId(), newElement);\r\n    /**\r\n     * @member {TemplateDataStorage} templateDataStorage\r\n     * */\r\n    let templateDataStorage = getEditor().modules.templateDataStorage;\r\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\r\n    return newElement;\r\n  }\r\n  /**\r\n   * @param {BaseElement} element\r\n   * */\r\n  _duplicateElement(element){\r\n    /**\r\n     * @member {BaseElement} newElement\r\n     * */\r\n    let newElement = new (elementsManager.getElementClass(element.getName()));\r\n    let newChildren = [];\r\n    element.children.map((childrenItem)=>{\r\n      let newChild = this._duplicateElement(childrenItem);\r\n      newChild.setParent(newElement);\r\n      newChildren.push(newChild);\r\n    });\r\n    // newElement.component = new\r\n    newElement.setChildren(newChildren);\r\n    newElement.settings = _.cloneDeep(element.settings);\r\n    if(element.dynamicContentSettings){\r\n      newElement.dynamicContentSettings = _.cloneDeep(element.dynamicContentSettings);\r\n    }\r\n    newElement.children = newChildren;\r\n    return newElement;\r\n  }\r\n}\r\n\r\nexport default ElementsFactory;","import BaseModule from \"./BaseModule\";\r\nimport Resource from \"../Resource\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport RootElement from \"../elements/RootElement\";\r\nimport store from \"../../store/store\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\nimport {setTitle} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nclass SaveImportModule extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n\r\n    this.resource = new Resource({\r\n      route: '/admin/ajax/templates',\r\n    });\r\n  }\r\n\r\n  load(){\r\n    this.template_id = getTemplateId();\r\n    // console.log(this.template_id);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    if(this.template_id){\r\n      let res = this.resource.get(this.template_id).then(templateData => {\r\n        setTitle(templateData.title);\r\n        let data = JSON.parse(templateData.data);\r\n        let parsedData = this.modules.elementsFactory.parseData(data);\r\n        let templateDataStorage = getEditor().modules.templateDataStorage;\r\n        templateDataStorage.replaceAll(parsedData);\r\n        templateDataStorage.setTitle(templateData.title);\r\n        templateDataStorage.setName(templateData.name);\r\n        getEditor().endLoading();\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      }).catch(err=>{\r\n        console.error(err);\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  saveTemplate(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\r\n    this.resource.put(this.template_id, templateData).then(res=>{\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    }).catch(err=>{\r\n      console.error(err);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default SaveImportModule;","class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from '../../store/store';\r\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if(! element instanceof RootElement ){\r\n      throw 'Expect Root Element as root element;)';\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave(){\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || 'testtitle';\r\n    data.name = this.name || 'testname';\r\n    return data;\r\n  }\r\n\r\n  setTitle(title){\r\n    this.title = title;\r\n  }\r\n\r\n\r\n  setName(name){\r\n    this.name = name;\r\n  }\r\n\r\n  setCurrentRootElement(){\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element){\r\n    if(! element instanceof BaseElement){\r\n      throw 'Only Base Element Can Be Set as Default'\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement(){\r\n    if(!this.currentElement){\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getRootElement(){\r\n    return this.rootElement\r\n  }\r\n\r\n  addWidgetInSection(elementName){\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\r\n    this.elementsIds.push(newWidget.getId());\r\n\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n}\r\n\r\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\n\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {widgets: window.elementsManager.getWidgetsList()};\r\n  }\r\n  render() {\r\n    return <div className=\"widget-panel\">\r\n      {\r\n        this.state.widgets.map(widget => {\r\n          return <WidgetIcon element={widget} key={widget.getName()}/>;\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel","import React, {Component} from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentElement, getCurrentTab} from \"../store/store\";\r\nimport {setActiveSection} from \"../store/setting-section/actions\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: props.open,\r\n      active: props.open,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  toggle(e) {\r\n    // this.setState({\r\n    //   open: !this.state.open,\r\n    //   active: e.currentTarget.dataset.key\r\n    //\r\n    // });\r\n    this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), this.props.sectionID));\r\n  }\r\n\r\n  render() {\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    let activeSectionId = 0;\r\n    if (this.props.settingSection[currentElementName] && this.props.settingSection[currentElementName][currentTab]) {\r\n      activeSectionId = this.props.settingSection[currentElementName][currentTab];\r\n    }\r\n    let controllers = this.props.controls || [];\r\n    return <div className={\"settings-section \" + (activeSectionId === this.props.sectionID ? \"open\" : \"\")}>\r\n      <div className=\"settings-section__title d-flex \" data-open={true} data-key={this.props.active}\r\n           onClick={this.toggle}>\r\n        <div className=\"settings-section__icon d-flex \">\r\n          <ChevronIcon/>\r\n        </div>\r\n        <div className=\"settings-section__label\">\r\n          {this.props.label}\r\n        </div>\r\n      </div>\r\n      <div className=\"controllers-wrapper\">\r\n        {\r\n          controllers.map((controller) => {\r\n            let ControllerComponent = window.controllersManager.getController(controller.type);\r\n            return React.createElement(ControllerComponent, {...controller, key: controller.controlId});\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settingSection: state.settingSectionMenu\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SettingSection);\r\n","import React, {Component} from \"react\";\r\nimport './DynamicContent.scss';\r\nimport './../../../sass/altrp-menu.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {closeDynamicContent} from \"../../store/dynamic-content/actions\";\r\nimport store from \"../../store/store\";\r\nimport {getCurrentElement} from \"../../store/store\";\r\nimport Resource from \"../../classes/Resource\";\r\n\r\n/**\r\n * Класс реализующий список динамических данных для контроллера\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      models: [\r\n        //   {\r\n        // modelName: 'page',\r\n        // title: 'Page',\r\n        // fields: [\r\n        //       {\r\n        //         fieldName: 'id',\r\n        //         title: 'ID',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'title',\r\n        //         title: 'Title',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'authorName',\r\n        //         title: 'Author Name',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'authorId',\r\n        //         title: 'Author ID',\r\n        //       },\r\n        //     ]\r\n        //   },\r\n        ],\r\n      };\r\n    this.select = this.select.bind(this);\r\n    this.resource = new Resource({route: '/admin/ajax/models_with_fields_options'});\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let models = await this.resource.getAll();\r\n    this.setState(state=>({\r\n        ...state,\r\n      models,\r\n    }))\r\n  }\r\n  /**\r\n   * Обработка клика по элемету\r\n   */\r\n  select(e){\r\n    e.stopPropagation();\r\n    let value = {};\r\n\r\n    value.modelName = e.target.dataset.modelname;\r\n    value.modelTitle = e.target.dataset.modeltitle;\r\n    value.fieldName = e.target.dataset.fieldname;\r\n    value.fieldTitle = e.target.dataset.fieldtitle;\r\n    value.settingName = this.props.params.settingName;\r\n    value.dynamic = true;\r\n    this.props.params.onSelect(value);\r\n    store.dispatch(closeDynamicContent());\r\n    getCurrentElement().setModelsSettings(value);\r\n  }\r\n\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()}>\r\n      <div className=\"altrp-menu\">\r\n        {\r\n          this.state.models.map(model=>{\r\n            return<div className=\"altrp-menu-group\" key={model.modelName}>\r\n              <div className=\"altrp-menu__title\" key={model.modelName}>{model.title}</div>\r\n              { model.fields.map(field=>(<div className=\"altrp-menu__item\"\r\n                                       data-fieldname={field.fieldName}\r\n                                       data-fieldtitle={field.title}\r\n                                       data-modelname={model.modelName}\r\n                                       data-modeltitle={model.title}\r\n                                       onClick={this.select}\r\n                                       key={field.fieldName}>{field.title}</div>))}\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, { Component } from \"react\";\r\nimport '../../sass/state-section.scss'\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\nimport { getElementState } from \"../store/store\";\r\n\r\nclass StateSection extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buttons: [\r\n        { title: \"Normal\", value: \"\" },\r\n        { title: \"Hover\", value: \":hover\" },\r\n        { title: \"Active\", value: \":active\" },\r\n        { title: \"Disabled\", value: \".disabled\" },\r\n      ]\r\n    }\r\n  }\r\n\r\n  setCurrentState(button) {\r\n    this.props.dispatch(setCurrentState(button.title, button.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"state-section\">\r\n        <div className=\"state-section__wrapper\">\r\n          {\r\n            this.state.buttons.map((button, index) => {\r\n              return <button\r\n                key={index}\r\n                className={\"state-section__button \" + (this.props.currentState.title === button.title ? \"state-section__button_active\" : \"\")}\r\n                onClick={() => this.setCurrentState(button)}\r\n              >{button.title}</button>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentState: state.currentState\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StateSection);\r\n","import React, {Component} from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport StateSection from \"./StateSection\";\r\n\r\nclass PanelTabContent extends Component {\r\n    render(){\r\n      let sections =  this.props.sections || [];\r\n      return <div className=\"settings-controllers\">\r\n        <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n        >\r\n          <div id=\"settingsControllers\">\r\n            {\r\n              sections.map((section, idx) =>{\r\n                return React.createElement(SettingSection, {\r\n                  ...section,\r\n                  key: section.sectionId,\r\n                  sectionID: idx,\r\n                  });\r\n                }\r\n            )\r\n          }\r\n          <DynamicContent/>\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    }\r\n}\r\n\r\nexport default PanelTabContent\r\n","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport ContentIcon from '../../svgs/content.svg'\r\nimport StyleIcon from '../../svgs/style.svg'\r\nimport AdvancedIcon from '../../svgs/advanced.svg'\r\nimport {TAB_ADVANCED, TAB_CONTENT, TAB_STYLE} from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport Controller from \"../classes/Controller\";\r\nimport {setCurrentTab} from \"../store/active-settings-tab/actions\";\r\nimport {getCurrentTab} from \"../store/store\";\r\nimport StateSection from \"./StateSection\";\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab) {\r\n    this.setState({\r\n      ...this.state, activeTab\r\n    })\r\n    this.props.setCurrentTab(activeTab);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(this.state.activeTab)\r\n  }\r\n\r\n  render() {\r\n\r\n    let controllersManager = window.controllersManager;\r\n\r\n    let sections = [];\r\n    if (this.props.currentElement.getName) {\r\n      let allControllersPairs = _.toPairs(controllersManager.getControls(this.props.currentElement.getName()));\r\n      allControllersPairs.forEach(pair => {\r\n        pair[1].forEach(section => {\r\n          section.controls = section.controls.map(control => {\r\n            return {\r\n              ...control,\r\n              controller: new Controller(control)\r\n            }\r\n          });\r\n        });\r\n        if (pair[0] === this.state.activeTab) {\r\n          sections = [...pair[1]];\r\n        }\r\n      });\r\n    }\r\n\r\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\r\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\r\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\r\n    return <div className=\"panel settings-panel d-flex\">\r\n      <div className=\"panel-tabs d-flex\">\r\n        <button className={contentTabClasses} onClick={() => this.setActiveTab(TAB_CONTENT)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <ContentIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Content\r\n          </span>\r\n        </button>\r\n        <button className={styleTabClasses} onClick={() => this.setActiveTab(TAB_STYLE)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <StyleIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Style\r\n          </span>\r\n        </button>\r\n        <button className={advancedTabClasses} onClick={() => this.setActiveTab(TAB_ADVANCED)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <AdvancedIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Advanced\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <StateSection/>\r\n      <PanelTabContent sections={sections}/>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement.currentElement,\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {setCurrentTab})(SettingsPanel);\r\n","import React, {Component} from \"react\";\r\n\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <div className=\"editor-window\" id=\"editorWindow\">\r\n\r\n      {/*<Frame>*/}\r\n        {/*<FrameBindingContext>*/}\r\n          {/*<DropTarget/>*/}\r\n        {/*</FrameBindingContext>*/}\r\n      {/*</Frame>*/}\r\n      {/*<Frame src=\"/admin/editor-content\" >*/}\r\n        {/*<FrameBindingContext/>*/}\r\n      {/*</Frame>*/}\r\n      {/*<FrameContextConsumer>*/}\r\n      <iframe src=\"/admin/editor-content\" width=\"100%\"/>\r\n      {/*</FrameContextConsumer>*/}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default EditorWindow","import React, {Component} from \"react\";\r\n\r\nclass HistoryPanel extends Component {\r\n\r\n  render() {\r\n    return <div className=\"history-panel\">\r\n      HistoryPanel\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default HistoryPanel","import Chevron from '../../svgs/chevron.svg';\r\nimport React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getEditor} from \"../helpers\";\r\nimport CONSTANTS from '../consts'\r\n\r\nclass UpdateButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e){\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n render(){\r\n   let buttonClasses = 'btn font_montserrat font_500 btn_grey';\r\n   switch (this.props.templateStatus) {\r\n     case CONSTANTS.TEMPLATE_UPDATED:{\r\n       buttonClasses += ' btn_disabled ';\r\n     }\r\n     break;\r\n     case CONSTANTS.TEMPLATE_NEED_UPDATE:{\r\n       buttonClasses += ' btn_active ';\r\n     }\r\n     break;\r\n   }\r\n   return  <div className=\"control-group d-flex\">\r\n     <button className={buttonClasses} onClick={this.saveTemplate}>\r\n       UPDATE\r\n     </button>\r\n     <button className=\"btn btn_grey\">\r\n       <Chevron className=\"icon\"/>\r\n     </button>\r\n   </div>\r\n }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return{\r\n    templateStatus: state.templateStatus.status,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton)","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport { iconsManager } from \"../../helpers\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        }\r\n      ],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await this.mediaResource.getAll();\r\n\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: res };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = res;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  getAssets(tab) {\r\n    if (!tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return iconsManager().getIconsList();\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  render() {\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  AssetContent = asset.iconComponent;\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"20\";\r\n                  assetProps.height = \"20\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport { renderAsset} from \"./js/helpers\";\r\nimport CONSTANTS from \"./js/consts\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\n\r\nimport store from \"../src/js/store/store\";\r\n\r\n\r\nimport DesktopIcon from \"./svgs/desktop.svg\";\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport {contextMenu} from \"react-contexify\";\r\nimport DynamicContent from \"./js/components/DynamicContent/DynamicContent\";\r\nimport {closeDynamicContent} from \"./js/store/dynamic-content/actions\";\r\nimport {iconsManager} from \"../../admin/src/js/helpers\";\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n    };\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  templateStatus() {\r\n    let templateStatus = store.getState().templateStatus.status;\r\n    if (templateStatus !== this.state.templateStatus) {\r\n      this.setState({ ...this.state, templateStatus });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent())\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  componentDidMount() {\r\n    this.initModules();\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let templateClasses = \"editor \";\r\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={templateClasses}\r\n             onClick={this.onClick}\r\n             onDragEnd={this.onDragEnd}>\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n                // onClick={this.showSettingsPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin/templates\" target=\"_blank\" className=\"logo\">\r\n                {\r\n                  window.admin_logo\r\n                      ? renderAsset(window.admin_logo, {className:'editor__logo'})\r\n                      :<Logo viewBox=\"0 0 97 35\" className=\"editor__logo\"/>\r\n                }\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <DesktopIcon className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(Editor);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}