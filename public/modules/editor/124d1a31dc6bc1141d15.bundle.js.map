{"version":3,"sources":["webpack:///./resources/modules/editor/src/sass/dialog-content.scss?fdee","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?8fce","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?c57c","webpack:///./resources/modules/editor/src/sass/state-section.scss?3e6a","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1926","webpack:///./resources/modules/editor/src/sass/dialog-content.scss?66a5","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?3739","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?11f8","webpack:///./resources/modules/editor/src/sass/state-section.scss?14a6","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1863","webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/StateSection.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/js/components/ResponsiveDdFooter.js","webpack:///./resources/modules/editor/src/js/components/DialogTab.js","webpack:///./resources/modules/editor/src/js/components/DialogConditionsTab.js","webpack:///./resources/modules/editor/src/js/components/DialogTriggersTab.js","webpack:///./resources/modules/editor/src/js/components/DialogWindow.js","webpack:///./resources/modules/editor/src/Editor.js"],"names":["content","module","i","options","transform","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","push","BaseModule","modules","this","ElementsFactory","object","parent","children","elementsManager","window","element","getElementClass","name","length","child","checkElementExists","parseData","id","settings","setSettings","cssClassStorage","setCSSStorage","dynamicContentSettings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","setChildren","cloneDeep","SaveImportModule","resource","Resource","route","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","then","templateData","setTitle","title","data","JSON","parse","parsedData","elementsFactory","replaceAll","setName","endLoading","TEMPLATE_UPDATED","err","console","error","getTemplateDataForSave","put","res","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","autoHide","autoHideTimeout","autoHideDuration","widget","ChevronIcon","SettingSection","open","toggle","currentElementName","getCurrentElement","currentTab","getCurrentTab","settingSection","setActiveSection","sectionID","activeSectionID","controllers","controls","onClick","label","controller","ControllerComponent","controllersManager","getController","type","controlId","connect","settingSectionMenu","DynamicContent","models","select","getAll","setState","stopPropagation","value","modelName","dataset","modelname","modelTitle","modeltitle","fieldName","fieldname","fieldTitle","fieldtitle","settingName","params","dynamic","onSelect","closeDynamicContent","setModelsSettings","top","offsetTop","offsetHeight","left","classes","show","join","style","getPositionProps","model","fields","field","data-fieldname","data-fieldtitle","data-modelname","data-modeltitle","dynamicContentState","PanelTabContent","sections","section","sectionId","StateSection","buttons","setCurrentState","button","index","currentState","ContentIcon","StyleIcon","AdvancedIcon","SettingsPanel","activeTab","setCurrentTab","toPairs","getControls","forEach","pair","control","Controller","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","width","currentScreen","src","Chevron","UpdateButton","isShowed","saveTemplate","showModalWindow","buttonClasses","templateStatus","showModal","status","Times","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","log","tab","iconsManager","getIconsList","currentTarget","assetname","assetsToggle","asset","item","onChoose","active","tabClasses","data-tab","AssetContent","assetProps","iconComponent","url","filename","assetType","data-assetname","assetsManagerSettings","ResponsiveDdFooter","screens","SCREENS","screen","setCurrentScreen","toggleOpen","renderIcon","icon","DialogTab","desc","DialogConditionsTab","currentLogic","searchValue","conditions","randomNumber","Math","floor","random","forceUpdate","filteredData","filter","test","findIndex","obj","include","exclude","logic_options","main_options","model_options","onChange","handleChange","defaultValue","model_name","AltrpSelect","handleSelect","placeholder","optionsRoute","removeCondition","addCondition","updateConditions","DialogTriggersTab","onLoad","onScroll","scrollElement","afterInactivity","on_exit","triggers","on_scroll","size","direction","checked","htmlFor","handleChangePage","min","step","on_page_load","handleCheck","max","on_click","inactivity","updateTriggers","Logo","DialogWindow","handleClose","handleOpen","renderSwitch","Navigation","History","Preview","Settings","Dots","_export","Hamburger","altrpEditor","activePanel","showDialogWindow","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","contextMenu","hideAll","draggableElement","elementDrag","stopDrag","initModules","settingsActive","templateClasses","getType","href","admin_logo","renderAsset","viewBox"],"mappings":"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","file":"124d1a31dc6bc1141d15.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./dialog-content.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./state-section.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n/**\r\n * @property {Modules} modules\r\n * */\r\nclass BaseModule {\r\n  /**\r\n   * @param {Modules} modules\r\n   * */\r\n  constructor(modules) {\r\n    this.modules = modules;\r\n  }\r\n}\r\n\r\nexport default BaseModule;","import BaseModule from './BaseModule';\r\nimport {getEditor} from \"../../helpers\";\r\n\r\nclass ElementsFactory extends BaseModule{\r\n  parseData(object, parent){\r\n    let children = [];\r\n    const elementsManager = window.elementsManager;\r\n    /**\r\n     * @member {BaseElement} element\r\n     * */\r\n    let element = new (elementsManager.getElementClass(object.name));\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        elementsManager.checkElementExists(child.name) ?\r\n          children.push(this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.children = children;\r\n    /**\r\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\r\n     * */\r\n    let settings = (object.settings.length === 0) ? {} : object.settings;\r\n    element.setSettings(settings);\r\n    let cssClassStorage = (object.cssClassStorage.length === 0) ? {} : object.cssClassStorage;\r\n    element.setCSSStorage(cssClassStorage);\r\n    if(object.dynamicContentSettings){\r\n      element.dynamicContentSettings = (object.dynamicContentSettings.length === 0) ? {} : object.dynamicContentSettings;\r\n    }\r\n\r\n    if(parent){\r\n      element.parent = parent;\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} element\r\n   * @param {BaseElement} target\r\n   * @return{BaseElement}\r\n   * */\r\n  duplicateElement(element, target){\r\n\r\n    let newElement = this._duplicateElement(element);\r\n    target.insertNewChildAfter(element.getId(), newElement);\r\n    /**\r\n     * @member {TemplateDataStorage} templateDataStorage\r\n     * */\r\n    let templateDataStorage = getEditor().modules.templateDataStorage;\r\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\r\n    return newElement;\r\n  }\r\n  /**\r\n   * @param {BaseElement} element\r\n   * */\r\n  _duplicateElement(element){\r\n    /**\r\n     * @member {BaseElement} newElement\r\n     * */\r\n    let newElement = new (elementsManager.getElementClass(element.getName()));\r\n    let newChildren = [];\r\n    element.children.map((childrenItem)=>{\r\n      let newChild = this._duplicateElement(childrenItem);\r\n      newChild.setParent(newElement);\r\n      newChildren.push(newChild);\r\n    });\r\n    // newElement.component = new\r\n    newElement.setChildren(newChildren);\r\n    newElement.settings = _.cloneDeep(element.settings);\r\n    if(element.dynamicContentSettings){\r\n      newElement.dynamicContentSettings = _.cloneDeep(element.dynamicContentSettings);\r\n    }\r\n    newElement.children = newChildren;\r\n    return newElement;\r\n  }\r\n}\r\n\r\nexport default ElementsFactory;","import BaseModule from \"./BaseModule\";\r\nimport Resource from \"../Resource\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport RootElement from \"../elements/RootElement\";\r\nimport store from \"../../store/store\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\nimport {setTitle} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nclass SaveImportModule extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n\r\n    this.resource = new Resource({\r\n      route: '/admin/ajax/templates',\r\n    });\r\n  }\r\n\r\n  load(){\r\n    this.template_id = getTemplateId();\r\n    // console.log(this.template_id);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    if(this.template_id){\r\n      let res = this.resource.get(this.template_id).then(templateData => {\r\n        setTitle(templateData.title);\r\n        let data = JSON.parse(templateData.data);\r\n        let parsedData = this.modules.elementsFactory.parseData(data);\r\n        let templateDataStorage = getEditor().modules.templateDataStorage;\r\n        templateDataStorage.replaceAll(parsedData);\r\n        templateDataStorage.setTitle(templateData.title);\r\n        templateDataStorage.setName(templateData.name);\r\n        getEditor().endLoading();\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      }).catch(err=>{\r\n        console.error(err);\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  saveTemplate(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\r\n    this.resource.put(this.template_id, templateData).then(res=>{\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    }).catch(err=>{\r\n      console.error(err);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default SaveImportModule;","class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport { getEditor, getTemplateId} from \"../../helpers\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from '../../store/store';\r\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if(! element instanceof RootElement ){\r\n      throw 'Expect Root Element as root element;)';\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave(){\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || 'testtitle';\r\n    data.name = this.name || 'testname';\r\n    return data;\r\n  }\r\n\r\n  setTitle(title){\r\n    this.title = title;\r\n  }\r\n\r\n\r\n  setName(name){\r\n    this.name = name;\r\n  }\r\n\r\n  setCurrentRootElement(){\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element){\r\n    if(! element instanceof BaseElement){\r\n      throw 'Only Base Element Can Be Set as Default'\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement(){\r\n    if(!this.currentElement){\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getRootElement(){\r\n    return this.rootElement\r\n  }\r\n\r\n  addWidgetInSection(elementName){\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\r\n    this.elementsIds.push(newWidget.getId());\r\n\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n}\r\n\r\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { widgets: window.elementsManager.getWidgetsList() };\r\n  }\r\n  render() {\r\n    return <div className=\"widget-panel-wrapper\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div className=\"widget-panel\">\r\n          {\r\n            this.state.widgets.map(widget => {\r\n              return <WidgetIcon element={widget} key={widget.getName()} />;\r\n            })\r\n          }\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel","import React, { Component } from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentElement, getCurrentTab, getElementState } from \"../store/store\";\r\nimport { setActiveSection } from \"../store/setting-section/actions\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    /**\r\n     * Если еще ни разу не открывали текущую вкладку у элемента,\r\n     * то в setActiveSection передадим 0\r\n     */\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    if (! (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined))) {\r\n      this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), 0));\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), this.props.sectionID));\r\n  };\r\n\r\n  render() {\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    let activeSectionID = 0;\r\n    /**\r\n     * Сравниваем с undefined\r\n     */\r\n    if (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined)) {\r\n      activeSectionID = this.props.settingSection[currentElementName][currentTab];\r\n    }\r\n    let controllers = this.props.controls || [];\r\n    return (\r\n      <div  className={\"settings-section \" + (this.props.sectionID === activeSectionID ? 'open' : '')}>\r\n        <div className=\"settings-section__title d-flex\" onClick={this.toggle}>\r\n          <div className=\"settings-section__icon d-flex \">\r\n            <ChevronIcon />\r\n          </div>\r\n          <div className=\"settings-section__label\">\r\n            {this.props.label}\r\n          </div>\r\n        </div>\r\n        <div className=\"controllers-wrapper\">\r\n          {\r\n            controllers.map((controller) => {\r\n              let ControllerComponent = window.controllersManager.getController(controller.type);\r\n              return React.createElement(ControllerComponent, { ...controller, key: controller.controlId });\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settingSection: state.settingSectionMenu\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SettingSection);\r\n","import React, {Component} from \"react\";\r\nimport './DynamicContent.scss';\r\nimport './../../../sass/altrp-menu.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {closeDynamicContent} from \"../../store/dynamic-content/actions\";\r\nimport store from \"../../store/store\";\r\nimport {getCurrentElement} from \"../../store/store\";\r\nimport Resource from \"../../classes/Resource\";\r\n\r\n/**\r\n * Класс реализующий список динамических данных для контроллера\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      models: [\r\n        //   {\r\n        // modelName: 'page',\r\n        // title: 'Page',\r\n        // fields: [\r\n        //       {\r\n        //         fieldName: 'id',\r\n        //         title: 'ID',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'title',\r\n        //         title: 'Title',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'authorName',\r\n        //         title: 'Author Name',\r\n        //       },\r\n        //       {\r\n        //         fieldName: 'authorId',\r\n        //         title: 'Author ID',\r\n        //       },\r\n        //     ]\r\n        //   },\r\n        ],\r\n      };\r\n    this.select = this.select.bind(this);\r\n    this.resource = new Resource({route: '/admin/ajax/models_with_fields_options'});\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let models = await this.resource.getAll();\r\n    this.setState(state=>({\r\n        ...state,\r\n      models,\r\n    }))\r\n  }\r\n  /**\r\n   * Обработка клика по элемету\r\n   */\r\n  select(e){\r\n    e.stopPropagation();\r\n    let value = {};\r\n\r\n    value.modelName = e.target.dataset.modelname;\r\n    value.modelTitle = e.target.dataset.modeltitle;\r\n    value.fieldName = e.target.dataset.fieldname;\r\n    value.fieldTitle = e.target.dataset.fieldtitle;\r\n    value.settingName = this.props.params.settingName;\r\n    value.dynamic = true;\r\n    this.props.params.onSelect(value);\r\n    store.dispatch(closeDynamicContent());\r\n    getCurrentElement().setModelsSettings(value);\r\n  }\r\n\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()}>\r\n      <div className=\"altrp-menu\">\r\n        {\r\n          this.state.models.map(model=>{\r\n            return<div className=\"altrp-menu-group\" key={model.modelName}>\r\n              <div className=\"altrp-menu__title\" key={model.modelName}>{model.title}</div>\r\n              { model.fields.map(field=>(<div className=\"altrp-menu__item\"\r\n                                       data-fieldname={field.fieldName}\r\n                                       data-fieldtitle={field.title}\r\n                                       data-modelname={model.modelName}\r\n                                       data-modeltitle={model.title}\r\n                                       onClick={this.select}\r\n                                       key={`${model.modelName}${field.fieldName}`}>{field.title}</div>))}\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, { Component } from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass PanelTabContent extends Component {\r\n\r\n  render() {\r\n    let sections = this.props.sections || [];\r\n    return <div className=\"settings-controllers\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div id=\"settingsControllers\">\r\n          {\r\n            sections.map((section, idx) => {\r\n              return React.createElement(SettingSection, {\r\n                ...section,\r\n                key: section.sectionId,\r\n                sectionID: idx,\r\n              });\r\n            }\r\n            )\r\n          }\r\n          <DynamicContent />\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default PanelTabContent\r\n","import React, { Component } from \"react\";\r\nimport '../../sass/state-section.scss'\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\nimport { getElementState, getCurrentTab } from \"../store/store\";\r\n\r\nclass StateSection extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buttons: [\r\n        { title: \"N\", value: \"\" },\r\n        { title: \"H\", value: \":hover\" },\r\n        { title: \"A\", value: \".active\" },\r\n        { title: \"F\", value: \":focus\" },\r\n        { title: \"D\", value: \".disabled\" },\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(setCurrentState(\"N\", \"\"));\r\n  }\r\n\r\n  setCurrentState(button) {\r\n    this.props.dispatch(setCurrentState(button.title, button.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"state-section\">\r\n        {\r\n          this.state.buttons.map((button, index) => {\r\n            return <button\r\n              key={index}\r\n              className={\"state-section__button \" + (this.props.currentState.title === button.title ? \"state-section__button_active\" : \"\")}\r\n              onClick={() => this.setCurrentState(button)}\r\n            >{button.title}</button>\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentState: state.currentState\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(StateSection);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ContentIcon from '../../svgs/content.svg'\r\nimport StyleIcon from '../../svgs/style.svg'\r\nimport AdvancedIcon from '../../svgs/advanced.svg'\r\nimport { TAB_ADVANCED, TAB_CONTENT, TAB_STYLE } from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport Controller from \"../classes/Controller\";\r\nimport { setCurrentTab } from \"../store/active-settings-tab/actions\";\r\nimport { getCurrentTab, getElementState } from \"../store/store\";\r\nimport StateSection from \"./StateSection\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab) {\r\n    this.setState({\r\n      ...this.state, activeTab\r\n    })\r\n    this.props.setCurrentTab(activeTab);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(this.state.activeTab)\r\n  };\r\n\r\n  render() {\r\n\r\n    let controllersManager = window.controllersManager;\r\n    let sections = [];\r\n    if (this.props.currentElement.getName) {\r\n      let allControllersPairs = _.toPairs(controllersManager.getControls(this.props.currentElement.getName()));\r\n      allControllersPairs.forEach(pair => {\r\n        pair[1].forEach(section => {\r\n          section.controls = section.controls.map(control => {\r\n            return {\r\n              ...control,\r\n              controller: new Controller(control)\r\n            }\r\n          });\r\n        });\r\n        if (pair[0] === this.state.activeTab) {\r\n          sections = [...pair[1]];\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\r\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\r\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\r\n    return <div className=\"panel settings-panel d-flex\">\r\n      <div className=\"panel-tabs d-flex\">\r\n        <button className={contentTabClasses} onClick={() => this.setActiveTab(TAB_CONTENT)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <ContentIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Content\r\n          </span>\r\n        </button>\r\n        <button className={styleTabClasses} onClick={() => this.setActiveTab(TAB_STYLE)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <StyleIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Style\r\n          </span>\r\n        </button>\r\n        <button className={advancedTabClasses} onClick={() => this.setActiveTab(TAB_ADVANCED)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <AdvancedIcon />\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Advanced\r\n          </span>\r\n        </button>\r\n      </div>\r\n      {\r\n        (this.state.activeTab === 'style' && <StateSection />)\r\n      }\r\n      <PanelTabContent sections={sections} />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement.currentElement,\r\n    currentState: state.currentState,\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { setCurrentTab, setCurrentState })(SettingsPanel);\r\n","import React, { Component } from \"react\";\r\nimport { getCurrentScreen } from \"../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ width: this.props.currentScreen.width, height: this.props.currentScreen.height }} className={\"editor-window\"} id=\"editorWindow\">\r\n\r\n      <iframe src=\"/admin/editor-content\" width=\"100%\" />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(EditorWindow)","import React, {Component} from \"react\";\r\n\r\nclass HistoryPanel extends Component {\r\n\r\n  render() {\r\n    return <div className=\"history-panel\">\r\n      HistoryPanel\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default HistoryPanel","import Chevron from '../../svgs/chevron.svg';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEditor } from \"../helpers\";\r\nimport CONSTANTS from '../consts'\r\n\r\nclass UpdateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowed: false,\r\n    }\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e) {\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n  showModal() {\r\n    this.props.showModalWindow();\r\n  }\r\n\r\n  render() {\r\n    let buttonClasses = 'btn font_montserrat font_500 btn_grey';\r\n    switch (this.props.templateStatus) {\r\n      case CONSTANTS.TEMPLATE_UPDATED: {\r\n        buttonClasses += ' btn_disabled ';\r\n      }\r\n        break;\r\n      case CONSTANTS.TEMPLATE_NEED_UPDATE: {\r\n        buttonClasses += ' btn_active ';\r\n      }\r\n        break;\r\n    }\r\n    return <div className=\"control-group d-flex\">\r\n      <button className={buttonClasses} onClick={this.saveTemplate}>\r\n        UPDATE\r\n      </button>\r\n      <button onClick={() => this.showModal()} className=\"btn btn_grey\">\r\n        <Chevron className=\"icon\" />\r\n      </button>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton)","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport { iconsManager } from \"../../helpers\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        }\r\n      ],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await this.mediaResource.getAll();\r\n\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: res };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = res;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  getAssets(tab) {\r\n    if (!tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return iconsManager().getIconsList();\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  render() {\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  AssetContent = asset.iconComponent;\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"20\";\r\n                  assetProps.height = \"20\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentScreen } from \"../store/responsive-switcher/actions\"\r\nimport { iconsManager } from \"../helpers\"\r\nimport CONSTANTS from '../consts'\r\n\r\nclass ResponsiveDdFooter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      screens: CONSTANTS.SCREENS,\r\n      open: false,\r\n    }\r\n  };\r\n  toggleOpen() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  };\r\n  setCurrentScreen(screen) {\r\n    this.props.setCurrentScreen(screen);\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"responsive-footer-wrapper\">\r\n        <span className={\"responsive-footer-title \" + (this.state.open ? 'responsive-footer-icon__close' : '')} onClick={() => this.toggleOpen()}>{iconsManager().renderIcon(this.props.currentScreen.icon)}</span>\r\n        <div className={\"responsive-footer-submenu \" + (this.state.open ? \"responsive-footer-submenu-open\" : '')} >\r\n          {\r\n            this.state.screens.map(screen => {\r\n              return <button\r\n                className={\"responsive-footer-submenu__item \" + (this.props.currentScreen.id === screen.id ? \"responsive-footer-submenu__item__active\" : '')}\r\n                onClick={() => this.setCurrentScreen(screen)}\r\n                key={screen.id}>\r\n                {iconsManager().renderIcon(screen.icon)}\r\n              </button>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentScreen })(ResponsiveDdFooter);\r\n","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss'\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\n\r\nclass DialogTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"modal-tab-wrapper \" + (this.props.active ? 'modal-tab-wrapper-active' : '')}>\r\n        <div className=\"modal-tab__image\">\r\n          {\r\n            iconsManager().renderIcon(this.props.tab.icon)\r\n          }\r\n        </div>\r\n        <div className=\"modal-tab__content\">\r\n          <div className=\"modal-tab__title\">{this.props.tab.title}</div>\r\n          <div className=\"modal-tab__description\">{this.props.tab.desc}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DialogTab;","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss';\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport Select from 'react-select'\r\nimport Resource from '../classes/Resource';\r\nimport { getTemplateId } from '../helpers';\r\nimport AltrpSelect from '../../../../admin/src/components/altrp-select/AltrpSelect';\r\n\r\nexport default class DialogConditionsTab extends Component {\r\n  constructor(props) {\r\n    super(props),\r\n      this.state = {\r\n        value: [],\r\n        currentLogic: 'include',\r\n        searchValue: ''\r\n      }\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/settings` });\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    let conditions = await this.resource.get('conditions');\r\n    console.log(conditions);\r\n    this.setState({\r\n      value: conditions.data || []\r\n    })\r\n  };\r\n\r\n  async updateConditions() {\r\n    let res = await this.resource.put('conditions', { data: this.state.value });\r\n    console.log(res);\r\n  }\r\n\r\n  addCondition() {\r\n    let randomNumber = Math.floor(1 + Math.random() * (1000 - 1));\r\n    this.setState(state => {\r\n      this.state.value.push\r\n        (\r\n          {\r\n            id: randomNumber,\r\n            \"include\": [\r\n              {\r\n                type: 'all_site'\r\n              }\r\n            ],\r\n            \"exclude\": []\r\n          }\r\n        )\r\n    })\r\n    this.forceUpdate();\r\n  };\r\n\r\n\r\n  removeCondition(id) {\r\n    let filteredData = this.state.value.filter(data => data.id !== id);\r\n    this.setState({\r\n      value: filteredData,\r\n    })\r\n  }\r\n\r\n\r\n  handleChange(e, test) {\r\n    if (e.value === 'include') {\r\n      this.setState({\r\n        currentLogic: e.value,\r\n      })\r\n      return;\r\n    } else if (e.value === 'exclude') {\r\n      this.setState({\r\n        currentLogic: e.value,\r\n      })\r\n      return;\r\n    }\r\n    if (this.state.currentLogic === 'include') {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].include[0] = { ...data[index].include[0], [e.name]: e.value };\r\n      data[index].exclude = [];\r\n      this.setState({\r\n        value: data,\r\n      })\r\n    } else if (this.state.currentLogic === 'exclude') {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].exclude[0] = { ...data[index].exclude[0], [e.name]: e.value };\r\n      data[index].include = [];\r\n      this.setState({\r\n        value: data,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSelect(e) {\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const logic_options = [\r\n      { name: 'logic_type', value: 'include', label: 'Include' },\r\n      { name: 'logic_type', value: 'exclude', label: 'Exclude' },\r\n    ];\r\n    const main_options = [\r\n      { name: 'type', value: 'all_site', label: 'All Site' },\r\n      { name: 'type', value: 'page', label: 'Page' },\r\n      { name: 'type', value: 'model', label: 'Model' },\r\n      { name: 'type', value: 'not_authorized_page', label: 'Not Authorized' },\r\n      { name: 'type', value: 'not_found_page', label: 'Not found: 404' },\r\n    ]\r\n    const model_options = [\r\n      { name: 'model_name', value: 'model1', label: 'model1' },\r\n      { name: 'model_name', value: 'model2', label: 'model2' },\r\n      { name: 'model_name', value: 'model3', label: 'model3' },\r\n      { name: 'model_name', value: 'model4', label: 'model4' },\r\n    ]\r\n    return (\r\n      <div className=\"modal-condition-tab\">\r\n        <div className=\"modal-condition-image\">\r\n          {\r\n            iconsManager().renderIcon('conditions_tab')\r\n          }\r\n        </div>\r\n        <div className=\"modal-condition-title\">Where Do You Want to Display Your Template?</div>\r\n        <div className=\"modal-condition-text\">\r\n          Set the conditions that determine where your Template is used throughout your site.<br />\r\n          For example, choose 'Entire Site' to display the template across your site.\r\n        </div>\r\n        <div className=\"modal-repeater-fields-wrapper\">\r\n          <div className=\"modal-repeater-fields\">\r\n            {\r\n              this.state.value.map(test => {\r\n                return (\r\n                  <div className=\"modal-repeater-field\" key={test.id}>\r\n                    <Select\r\n                      onChange={(e) => this.handleChange(e, test)}\r\n                      className=\"modal-repeater-field-c1\"\r\n                      options={logic_options}\r\n                      defaultValue={\r\n                        logic_options[0]\r\n                      }\r\n                    />\r\n                    <Select\r\n                      onChange={(e) => this.handleChange(e, test)}\r\n                      className=\"modal-repeater-field-c2\"\r\n                      options={main_options}\r\n                      defaultValue={main_options[0]}\r\n                    />\r\n                    {\r\n                      (test.include[0]) &&\r\n                      (test.include[0].type === 'model'\r\n                        &&\r\n                        <Select\r\n                          onChange={(e) => this.handleChange(e, test)}\r\n                          className=\"modal-repeater-field-c3\"\r\n                          defaultValue={model_options[0]}\r\n                          options={model_options}\r\n                        />)\r\n                    }\r\n                    {\r\n                      (test.exclude[0]) &&\r\n                      (test.exclude[0].type === 'model' &&\r\n                        <Select\r\n                          onChange={(e) => this.handleChange(e, test)}\r\n                          className=\"modal-repeater-field-c3\"\r\n                          defaultValue={model_options[0]}\r\n                          options={model_options}\r\n                        />)\r\n                    }\r\n                    {\r\n                      (test.include[0]) &&\r\n                      (((test.include[0].type === 'model' && test.include[0].model_name) || test.include[0].type === 'page') &&\r\n                        <AltrpSelect\r\n                          value={this.state.searchValue}\r\n                          onChange={(e) => this.handleSelect(e)}\r\n                          placeholder=\"All\"\r\n                          className=\"modal-repeater-field-c3\"\r\n                          optionsRoute=\"/admin/ajax/pages_options\"\r\n                        />)\r\n                    }\r\n                    {\r\n                      (test.exclude[0]) &&\r\n                      (((test.exclude[0].type === 'model' && test.exclude[0].model_name) || test.exclude[0].type === 'page') &&\r\n                        <AltrpSelect\r\n                          placeholder=\"All\"\r\n                          className=\"modal-repeater-field-c3\"\r\n                          optionsRoute=\"/admin/ajax/pages_options\"\r\n                        />)\r\n                    }\r\n                    <button onClick={() => this.removeCondition(test.id)} className=\"modal-repeater-tool-remove\">X</button>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-condition-button-wrapper\">\r\n          <button onClick={() => this.addCondition()} className=\"modal-condition-button\">Add condition</button>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateConditions()} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateConditions()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport '../../sass/dialog-content.scss';\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport { getTemplateId } from '../helpers';\r\nimport Resource from '../classes/Resource';\r\n\r\nexport default class DialogTriggersTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: {},\r\n      onLoad: false,\r\n      onScroll: false,\r\n      scrollElement: false,\r\n      onClick: false,\r\n      afterInactivity: false,\r\n      on_exit: false,\r\n    }\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/settings` })\r\n  }\r\n\r\n  async updateTriggers() {\r\n    let res = await this.resource.put('triggers', {data: this.state.value});\r\n    console.log(res);\r\n  }\r\n\r\n\r\n\r\n  /**  Отправляем get request, результат присваиваем  state.value */\r\n  async componentDidMount() {\r\n    let triggers = await this.resource.get('triggers')\r\n    this.setState({\r\n      value: triggers.data,\r\n    })\r\n  }\r\n\r\n  handleChangePage(e) {\r\n    if (e.target.name === 'direction') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            direction: e.target.value, \r\n          }\r\n        }\r\n      })\r\n      return;\r\n    } else if (e.target.name === 'size') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            size: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    }\r\n    this.setState({\r\n      value: {\r\n        ...this.state.value,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCheck(e) {\r\n    if (e.target.name === 'on_exit') {\r\n      this.setState({\r\n        [e.target.name]: e.target.checked,\r\n        value:{\r\n          ...this.state.value,\r\n          [e.target.name]: e.target.checked,\r\n        }\r\n      })\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"triggers-tab\">\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('page_load')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Load</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onLoad &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-pageLoad\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-pageLoad\"\r\n                    onChange={(e) => this.handleChangePage(e)} type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"0.1\"\r\n                    value={this.state.on_page_load}\r\n                    name=\"on_page_load\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onLoad\"\r\n                checked={this.state[name]}\r\n                id=\"toggleSwitch\"\r\n                onChange={(e) => this.handleCheck(e)}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputSelect\">Direction</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <select\r\n                    name=\"direction\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                    id=\"triggers-control-field-inputSelect\">\r\n                    <option value=\"down\">Down</option>\r\n                    <option value=\"up\">Up</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputNumber2\">Within(%)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"100\"\r\n                    id=\"triggers-control-field-inputNumber2\"\r\n                    name=\"size\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onScroll\"\r\n                checked={this.state[name]}\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitch2\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch2\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling_to')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll To Element</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.scrollElement &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputText\">Selector</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-inputText\"\r\n                    id=\"triggers-control-field-Text\"\r\n                    type=\"text\"\r\n                    name=\"to_element\"\r\n                    placeholder=\".my class\"\r\n                    defaultValue=''\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"scrollElement\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchText\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchText\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('click')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Click</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onClick &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-Clicks\">Clicks</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-Clicks\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    name=\"on_click\"\r\n                    value={this.state.on_click}\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"onClick\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchClicks\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchClicks\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('inactivity')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">After Inactivity</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.afterInactivity &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inactivity\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-inactivity\"\r\n                    type=\"number\"\r\n                    value={this.state.inactivity}\r\n                    min=\"1\"\r\n                    step=\"0.1\"\r\n                    name=\"inactivity\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"afterInactivity\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchInactivity\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchInactivity\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('exit_intent')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Exit Intent</div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"on_exit\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchIntent\"\r\n                onChange={(e) => this.setState({ on_exit: !this.state.on_exit })}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchIntent\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Logo from \"../../svgs/logo.svg\";\r\nimport '../../sass/dialog-content.scss'\r\nimport DialogTab from './DialogTab';\r\nimport DialogConditionsTab from './DialogConditionsTab';\r\nimport DialogTriggersTab from './DialogTriggersTab';\r\n\r\nclass DialogWindow extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activeTab: 'Conditions',\r\n      tabs: [\r\n        { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n        { icon: 'triggers_tab', title: 'Triggers', desc: 'What action the user needs to do for the popup to open.' },\r\n        { icon: 'triggers_tab', title: 'Advanced Rules', desc: 'Requirements that have to be met for the popup to open.' },\r\n      ],\r\n      \r\n    }\r\n  }\r\n\r\n  handleOpen(title) {\r\n    this.setState({\r\n      activeTab: title,\r\n    })\r\n  };\r\n  \r\n  handleClose() {\r\n    this.props.showModalWindow()\r\n  };\r\n\r\n  renderSwitch(activeTab) {\r\n    switch (this.state.activeTab) {\r\n      case 'Conditions':\r\n        return <DialogConditionsTab />\r\n      case 'Triggers':\r\n        return <DialogTriggersTab />\r\n      case 'Advanced Rules':\r\n        return <div>ADVANCED</div>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  // (this.state.activeTab === 'Conditions' && <DialogConditionsTab /> ||\r\n  //   this.state.activeTab === 'Triggers' && <div>Triggers</div> ||\r\n  //   this.state.activeTab === 'Advanced Rules' && <div>Advanced Rules</div>\r\n  // )\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-header\">\r\n            <Logo className=\"modal-header__logo\" />\r\n            <button onClick={() => this.handleClose()}>X</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"modal-body__tabs\">\r\n              {\r\n                this.state.tabs.map((tab, index) => {\r\n                  return <div key={tab.title} onClick={() => this.handleOpen(tab.title)}>\r\n                    <DialogTab active={this.state.activeTab === tab.title ? true : false} tab={tab} />\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n            <div className=\"modal-body__content\">\r\n              {this.renderSwitch(this.state.activeTab)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default DialogWindow;","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport CONSTANTS from \"./js/consts\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\n\r\nimport store, { getCurrentElement, getCurrentScreen } from \"../src/js/store/store\";\r\n\r\n\r\nimport DesktopIcon from \"./svgs/desktop.svg\";\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport { contextMenu } from \"react-contexify\";\r\nimport DynamicContent from \"./js/components/DynamicContent/DynamicContent\";\r\nimport { closeDynamicContent } from \"./js/store/dynamic-content/actions\";\r\nimport { iconsManager } from \"../../admin/src/js/helpers\";\r\nimport ResponsiveDdMenu from \"./js/components/ResponsiveDdMenu\";\r\nimport ResponsiveDdFooter from \"./js/components/ResponsiveDdFooter\";\r\nimport DialogWindow from \"./js/components/DialogWindow\";\r\nimport {renderAsset} from \"../../front-app/src/js/helpers\";\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n      showDialogWindow: false,\r\n    };\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  templateStatus() {\r\n    let templateStatus = store.getState().templateStatus.status;\r\n    if (templateStatus !== this.state.templateStatus) {\r\n      this.setState({ ...this.state, templateStatus });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\",\r\n    });\r\n  }\r\n\r\n  /** \r\n   * Показывает Dialog окно\r\n   */\r\n  showModalWindow() {\r\n    this.setState({\r\n      showDialogWindow: !this.state.showDialogWindow\r\n    })\r\n  };\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent())\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  componentDidMount() {\r\n    this.initModules();\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let templateClasses = \"editor \";\r\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n      \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={templateClasses}\r\n          onClick={this.onClick}\r\n          onDragEnd={this.onDragEnd}>\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n              // onClick={this.showSettingsPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin/templates\" target=\"_blank\" className=\"logo\">\r\n                {\r\n                  window.admin_logo\r\n                    ? renderAsset(window.admin_logo, { className: 'editor__logo' })\r\n                    : <Logo viewBox=\"0 0 97 35\" className=\"editor__logo\" />\r\n                }\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <div className=\"btn \">\r\n                <ResponsiveDdFooter />\r\n              </div>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton onClick={() => this.showModalWindow()} showModalWindow={() => this.showModalWindow()} />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.state.showDialogWindow && <DialogWindow state={this.state.showDialogWindow} showModalWindow={() => this.showModalWindow()} />}\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(Editor);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}