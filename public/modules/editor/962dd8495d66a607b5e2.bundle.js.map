{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/Editor.js"],"names":["BaseModule","modules","this","ElementsFactory","object","parent","children","elementsManager","window","element","getElementClass","name","length","child","checkElementExists","push","parseData","id","settings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","component","setChildren","cloneDeep","SaveImportModule","resource","Resource","route","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","then","templateData","data","JSON","parse","parsedData","elementsFactory","replaceAll","setTitle","title","setName","endLoading","TEMPLATE_UPDATED","err","console","error","getTemplateDataForSave","put","res","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","widget","key","SettingSection","open","toggle","setState","controllers","controls","sectionClasses","onClick","label","controller","ControllerComponent","controllersManager","getController","type","controlId","Controller","PanelTabContent","sections","autoHide","autoHideTimeout","autoHideDuration","section","idx","sectionId","SettingsPanel","activeTab","getControls","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","connect","EditorWindow","src","UpdateButton","saveTemplate","buttonClasses","templateStatus","status","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","getAll","log","tab","iconsManager","getIconsList","currentTarget","dataset","assetname","assetsToggle","asset","forEach","item","onChoose","classes","active","tabClasses","data-tab","AssetContent","assetProps","iconComponent","width","url","filename","assetType","data-assetname","_export","assetsManagerSettings","altrpEditor","activePanel","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","contextMenu","hideAll","draggableElement","elementDrag","stopDrag","initModules","settingsActive","templateClasses","getType","viewBox"],"mappings":"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","file":"962dd8495d66a607b5e2.bundle.js","sourcesContent":["\r\n/**\r\n * @property {Modules} modules\r\n * */\r\nclass BaseModule {\r\n  /**\r\n   * @param {Modules} modules\r\n   * */\r\n  constructor(modules) {\r\n    this.modules = modules;\r\n  }\r\n}\r\n\r\nexport default BaseModule;","import BaseModule from './BaseModule';\r\nimport {getEditor} from \"../../helpers\";\r\n\r\nclass ElementsFactory extends BaseModule{\r\n  parseData(object, parent){\r\n    let children = [];\r\n    const elementsManager = window.elementsManager;\r\n    /**\r\n     * @member {BaseElement} element\r\n     * */\r\n    let element = new (elementsManager.getElementClass(object.name));\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        elementsManager.checkElementExists(child.name) ?\r\n          children.push( this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.children = children;\r\n    /**\r\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\r\n     * */\r\n    element.settings = (object.settings.length === 0) ? {} : object.settings;\r\n\r\n    if(parent){\r\n      element.parent = parent;\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} element\r\n   * @param {BaseElement} target\r\n   * @return{BaseElement}\r\n   * */\r\n  duplicateElement(element, target){\r\n\r\n    let newElement = this._duplicateElement(element);\r\n    target.insertNewChildAfter(element.getId(), newElement);\r\n    /**\r\n     * @member {TemplateDataStorage} templateDataStorage\r\n     * */\r\n    let templateDataStorage = getEditor().modules.templateDataStorage;\r\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\r\n    return newElement;\r\n  }\r\n  /**\r\n   * @param {BaseElement} element\r\n   * */\r\n  _duplicateElement(element){\r\n    /**\r\n     * @member {BaseElement} newElement\r\n     * */\r\n    let newElement = new (elementsManager.getElementClass(element.getName()));\r\n    let newChildren = [];\r\n    element.children.map((childrenItem)=>{\r\n      let newChild = this._duplicateElement(childrenItem);\r\n      newChild.setParent(newElement);\r\n      newChildren.push(newChild);\r\n    });\r\n    newElement.component = new\r\n    newElement.setChildren(newChildren);\r\n    newElement.settings = _.cloneDeep(element.settings);\r\n    newElement.children = newChildren;\r\n    return newElement;\r\n  }\r\n}\r\n\r\nexport default ElementsFactory;","import BaseModule from \"./BaseModule\";\r\nimport Resource from \"../Resource\";\r\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\r\nimport RootElement from \"../elements/RootElement\";\r\nimport store from \"../../store/store\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass SaveImportModule extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n\r\n    this.resource = new Resource({\r\n      route: '/admin/ajax/templates',\r\n    });\r\n  }\r\n\r\n  load(){\r\n    this.template_id = getTemplateId();\r\n    // console.log(this.template_id);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    if(this.template_id){\r\n      let res = this.resource.get(this.template_id).then(templateData => {\r\n        let data = JSON.parse(templateData.data);\r\n        let parsedData = this.modules.elementsFactory.parseData(data);\r\n        let templateDataStorage = getEditor().modules.templateDataStorage;\r\n        templateDataStorage.replaceAll(parsedData);\r\n        templateDataStorage.setTitle(templateData.title);\r\n        templateDataStorage.setName(templateData.name);\r\n        getEditor().endLoading();\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      }).catch(err=>{\r\n        console.error(err);\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  saveTemplate(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\r\n    this.resource.put(this.template_id, templateData).then(res=>{\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    }).catch(err=>{\r\n      console.error(err);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default SaveImportModule;","class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from '../../store/store';\r\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if(! element instanceof RootElement ){\r\n      throw 'Expect Root Element as root element;)';\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave(){\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || 'testtitle';\r\n    data.name = this.name || 'testname';\r\n    return data;\r\n  }\r\n\r\n  setTitle(title){\r\n    this.title = title;\r\n  }\r\n\r\n\r\n  setName(name){\r\n    this.name = name;\r\n  }\r\n\r\n  setCurrentRootElement(){\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element){\r\n    if(! element instanceof BaseElement){\r\n      throw 'Only Base Element Can Be Set as Default'\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement(){\r\n    if(!this.currentElement){\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getRootElement(){\r\n    return this.rootElement\r\n  }\r\n\r\n  addWidgetInSection(elementName){\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\r\n    this.elementsIds.push(newWidget.getId());\r\n\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n}\r\n\r\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\n\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {widgets: window.elementsManager.getWidgetsList()};\r\n  }\r\n  render() {\r\n    return <div className=\"widget-panel\">\r\n      {\r\n        this.state.widgets.map(widget => {\r\n          return <WidgetIcon element={widget} key={widget.getName()}/>;\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel","import React, {Component} from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport Controller from \"../classes/Controller\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: props.open,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle(){\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n  render() {\r\n    let controllers = this.props.controls || [];\r\n    let sectionClasses = 'settings-section ' + (this.state.open ? 'open' : '');\r\n    return <div className={sectionClasses}>\r\n      <div className=\"settings-section__title d-flex \" onClick={this.toggle}>\r\n        <div className=\"settings-section__icon d-flex \">\r\n          <ChevronIcon/>\r\n        </div>\r\n        <div className=\"settings-section__label\">\r\n          {this.props.label}\r\n        </div>\r\n      </div>\r\n      <div className=\"controllers-wrapper\">\r\n        {\r\n          controllers.map((controller) => {\r\n                let ControllerComponent = window.controllersManager.getController(controller.type);\r\n                return React.createElement(ControllerComponent, {...controller, key: controller.controlId, controller: new Controller(controller)});\r\n              }\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default SettingSection;","import React, {Component} from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nclass PanelTabContent extends Component {\r\n    render(){\r\n      let sections =  this.props.sections || [];\r\n      return <div className=\"settings-controllers\">\r\n        <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n        > \r\n          {\r\n            sections.map((section, idx) =>{\r\n              return React.createElement(SettingSection, {\r\n                ...section,\r\n                key: section.sectionId,\r\n                open: idx === 0,\r\n              });\r\n                }\r\n            )\r\n          }\r\n        </Scrollbars>\r\n      </div>\r\n    }\r\n}\r\n\r\nexport default PanelTabContent","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport ContentIcon from '../../svgs/content.svg'\r\nimport StyleIcon from '../../svgs/style.svg'\r\nimport AdvancedIcon from '../../svgs/advanced.svg'\r\nimport {TAB_ADVANCED, TAB_CONTENT, TAB_STYLE} from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 'content',\r\n    };\r\n  }\r\n\r\n  setActiveTab(activeTab){\r\n    this.setState({\r\n        ...this.state, activeTab\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let controllersManager = window.controllersManager;\r\n\r\n    let sections = [];\r\n    if(this.props.currentElement.getName){\r\n      sections = controllersManager.getControls(this.props.currentElement.getName())[this.state.activeTab] || [];\r\n    }\r\n\r\n    // let sections = this.props.currentElement.getControllers ?\r\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\r\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\r\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\r\n    return <div className=\"panel settings-panel d-flex\">\r\n      <div className=\"panel-tabs d-flex\">\r\n        <button className={contentTabClasses} onClick={()=>this.setActiveTab(TAB_CONTENT)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <ContentIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Content\r\n          </span>\r\n        </button>\r\n        <button className={styleTabClasses} onClick={()=>this.setActiveTab(TAB_STYLE)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <StyleIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Style\r\n          </span>\r\n        </button>\r\n        <button className={advancedTabClasses} onClick={()=>this.setActiveTab(TAB_ADVANCED)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <AdvancedIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Advanced\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <PanelTabContent sections={sections}/>\r\n    </div>\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return{\r\n    currentElement:state.currentElement.currentElement\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SettingsPanel);","import React, {Component} from \"react\";\r\n\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <div className=\"editor-window\">\r\n\r\n      {/*<Frame>*/}\r\n        {/*<FrameBindingContext>*/}\r\n          {/*<DropTarget/>*/}\r\n        {/*</FrameBindingContext>*/}\r\n      {/*</Frame>*/}\r\n      {/*<Frame src=\"/admin/editor-content\" >*/}\r\n        {/*<FrameBindingContext/>*/}\r\n      {/*</Frame>*/}\r\n      {/*<FrameContextConsumer>*/}\r\n      <iframe src=\"/admin/editor-content\" />\r\n      {/*</FrameContextConsumer>*/}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default EditorWindow","import React, {Component} from \"react\";\r\n\r\nclass HistoryPanel extends Component {\r\n\r\n  render() {\r\n    return <div className=\"history-panel\">\r\n      HistoryPanel\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default HistoryPanel","import Chevron from '../../svgs/chevron.svg';\r\nimport React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {CONSTANTS, getEditor} from \"../helpers\";\r\n\r\nclass UpdateButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e){\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n render(){\r\n   let buttonClasses = 'btn font_montserrat font_500 btn_grey';\r\n   switch (this.props.templateStatus) {\r\n     case CONSTANTS.TEMPLATE_UPDATED:{\r\n       buttonClasses += ' btn_disabled ';\r\n     }\r\n     break;\r\n     case CONSTANTS.TEMPLATE_NEED_UPDATE:{\r\n       buttonClasses += ' btn_active ';\r\n     }\r\n     break;\r\n   }\r\n   return  <div className=\"control-group d-flex\">\r\n     <button className={buttonClasses} onClick={this.saveTemplate}>\r\n       UPDATE\r\n     </button>\r\n     <button className=\"btn btn_grey\">\r\n       <Chevron className=\"icon\"/>\r\n     </button>\r\n   </div>\r\n }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return{\r\n    templateStatus: state.templateStatus.status,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton)","// import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport { iconsManager } from \"../../helpers\";\r\nimport Resource from \"../Resource\";\r\nclass AssetsBrowser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        }\r\n      ],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await this.mediaResource.getAll();\r\n\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: res };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = res;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  getAssets(tab) {\r\n    if (!tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return iconsManager().getIconsList();\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  render() {\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn btn_success\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\">\r\n              <Times className=\"icon\" onClick={this.toggleBrowser} />\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  AssetContent = asset.iconComponent;\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"20\";\r\n                  assetProps.height = \"20\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","import React, { Component } from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport { CONSTANTS } from \"./js/helpers\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\n\r\nimport store from \"../src/js/store/store\";\r\n\r\nimport \"./sass/editor-style.scss\";\r\n\r\nimport DesktopIcon from \"./svgs/desktop.svg\";\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport {contextMenu} from \"react-contexify\";\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n    };\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  templateStatus() {\r\n    let templateStatus = store.getState().templateStatus.status;\r\n    if (templateStatus !== this.state.templateStatus) {\r\n      this.setState({ ...this.state, templateStatus });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  componentDidMount() {\r\n    this.initModules();\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let templateClasses = \"editor \";\r\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={templateClasses}\r\n             onClick={this.onClick}\r\n             onDragEnd={this.onDragEnd}>\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n                // onClick={this.showSettingsPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <div className=\"logo\">\r\n                <Logo viewBox=\"0 0 97 35\" />\r\n              </div>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <DesktopIcon className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(Editor);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}