{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?8fce","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?c57c","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1926","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.scss?3739","webpack:///./resources/modules/editor/src/sass/altrp-menu.scss?11f8","webpack:///./resources/modules/editor/src/sass/assets-browser.scss?1863","webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/Editor.js"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","BaseModule","modules","this","ElementsFactory","object","parent","children","elementsManager","window","element","getElementClass","name","length","child","checkElementExists","parseData","id","settings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","component","setChildren","cloneDeep","SaveImportModule","resource","Resource","route","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","then","templateData","data","JSON","parse","parsedData","elementsFactory","replaceAll","setTitle","title","setName","endLoading","TEMPLATE_UPDATED","err","console","error","getTemplateDataForSave","put","res","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","widget","SettingSection","open","active","toggle","document","getElementById","classList","add","setState","currentTarget","dataset","settingsControllers","contains","count","remove","controllers","controls","data-open","data-key","onClick","label","controller","ControllerComponent","controllersManager","getController","type","controlId","Controller","DynamicContent","models","modelName","fields","fieldName","select","stopPropagation","value","modelname","modelTitle","modeltitle","fieldname","fieldTitle","fieldtitle","settingName","dynamic","params","onSelect","closeDynamicContent","log","getCurrentEditor","setModelsSettings","top","offsetTop","offsetHeight","left","classes","show","join","style","getPositionProps","model","forEach","_f","field","data-fieldname","data-fieldtitle","data-modelname","data-modeltitle","connect","dynamicContentState","PanelTabContent","keyActive","sections","autoHide","autoHideTimeout","autoHideDuration","section","sectionId","SettingsPanel","activeTab","getControls","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","src","width","UpdateButton","saveTemplate","buttonClasses","templateStatus","status","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","getAll","tab","iconsManager","getIconsList","assetname","assetsToggle","asset","item","onChoose","tabClasses","data-tab","AssetContent","assetProps","iconComponent","url","filename","assetType","data-assetname","_export","assetsManagerSettings","altrpEditor","activePanel","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","contextMenu","hideAll","draggableElement","elementDrag","stopDrag","initModules","settingsActive","templateClasses","getType","href","admin_logo","renderAsset","viewBox"],"mappings":"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","file":"9d3387c57a50b51e410a.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DynamicContent.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./altrp-menu.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assets-browser.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\r\n/**\r\n * @property {Modules} modules\r\n * */\r\nclass BaseModule {\r\n  /**\r\n   * @param {Modules} modules\r\n   * */\r\n  constructor(modules) {\r\n    this.modules = modules;\r\n  }\r\n}\r\n\r\nexport default BaseModule;","import BaseModule from './BaseModule';\r\nimport {getEditor} from \"../../helpers\";\r\n\r\nclass ElementsFactory extends BaseModule{\r\n  parseData(object, parent){\r\n    let children = [];\r\n    const elementsManager = window.elementsManager;\r\n    /**\r\n     * @member {BaseElement} element\r\n     * */\r\n    let element = new (elementsManager.getElementClass(object.name));\r\n    if( object.children && object.children.length ){\r\n      for( let child of object.children){\r\n        elementsManager.checkElementExists(child.name) ?\r\n          children.push(this.parseData(child, element) ) : '';\r\n      }\r\n    }\r\n    element.id = object.id;\r\n    element.children = children;\r\n    /**\r\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\r\n     * */\r\n    element.settings = (object.settings.length === 0) ? {} : object.settings;\r\n\r\n    if(parent){\r\n      element.parent = parent;\r\n    }\r\n    element.update();\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} element\r\n   * @param {BaseElement} target\r\n   * @return{BaseElement}\r\n   * */\r\n  duplicateElement(element, target){\r\n\r\n    let newElement = this._duplicateElement(element);\r\n    target.insertNewChildAfter(element.getId(), newElement);\r\n    /**\r\n     * @member {TemplateDataStorage} templateDataStorage\r\n     * */\r\n    let templateDataStorage = getEditor().modules.templateDataStorage;\r\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\r\n    return newElement;\r\n  }\r\n  /**\r\n   * @param {BaseElement} element\r\n   * */\r\n  _duplicateElement(element){\r\n    /**\r\n     * @member {BaseElement} newElement\r\n     * */\r\n    let newElement = new (elementsManager.getElementClass(element.getName()));\r\n    let newChildren = [];\r\n    element.children.map((childrenItem)=>{\r\n      let newChild = this._duplicateElement(childrenItem);\r\n      newChild.setParent(newElement);\r\n      newChildren.push(newChild);\r\n    });\r\n    newElement.component = new\r\n    newElement.setChildren(newChildren);\r\n    newElement.settings = _.cloneDeep(element.settings);\r\n    newElement.children = newChildren;\r\n    return newElement;\r\n  }\r\n}\r\n\r\nexport default ElementsFactory;","import BaseModule from \"./BaseModule\";\r\nimport Resource from \"../Resource\";\r\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\r\nimport RootElement from \"../elements/RootElement\";\r\nimport store from \"../../store/store\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass SaveImportModule extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n\r\n    this.resource = new Resource({\r\n      route: '/admin/ajax/templates',\r\n    });\r\n  }\r\n\r\n  load(){\r\n    this.template_id = getTemplateId();\r\n    // console.log(this.template_id);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    if(this.template_id){\r\n      let res = this.resource.get(this.template_id).then(templateData => {\r\n        let data = JSON.parse(templateData.data);\r\n        let parsedData = this.modules.elementsFactory.parseData(data);\r\n        let templateDataStorage = getEditor().modules.templateDataStorage;\r\n        templateDataStorage.replaceAll(parsedData);\r\n        templateDataStorage.setTitle(templateData.title);\r\n        templateDataStorage.setName(templateData.name);\r\n        getEditor().endLoading();\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      }).catch(err=>{\r\n        console.error(err);\r\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  saveTemplate(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\r\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\r\n    this.resource.put(this.template_id, templateData).then(res=>{\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    }).catch(err=>{\r\n      console.error(err);\r\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default SaveImportModule;","class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\r\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\r\nimport BaseModule from \"./BaseModule\";\r\nimport store from '../../store/store';\r\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\r\nimport BaseElement from \"../elements/BaseElement\";\r\nimport Section from \"../elements/Section\";\r\nimport Column from \"../elements/Column\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\n\r\nclass TemplateDataStorage extends BaseModule{\r\n\r\n  constructor(modules){\r\n    super(modules);\r\n    this.elementsIds = [];\r\n  }\r\n\r\n  replaceAll(element) {\r\n    if(! element instanceof RootElement ){\r\n      throw 'Expect Root Element as root element;)';\r\n    }\r\n    this.rootElement = element;\r\n    this.elementsIds = element.getIds();\r\n    this.setCurrentRootElement();\r\n  }\r\n\r\n  getTemplateData() {\r\n    return this.rootElement.toObject();\r\n  }\r\n  getTemplateDataForSave(){\r\n    let data = {};\r\n\r\n    data.data = this.getTemplateData();\r\n    data.title = this.title || 'testtitle';\r\n    data.name = this.name || 'testname';\r\n    return data;\r\n  }\r\n\r\n  setTitle(title){\r\n    this.title = title;\r\n  }\r\n\r\n\r\n  setName(name){\r\n    this.name = name;\r\n  }\r\n\r\n  setCurrentRootElement(){\r\n    this.currentElement = this.rootElement;\r\n    store.dispatch(setCurrentElement(this.currentElement));\r\n    return this.currentElement;\r\n  }\r\n\r\n  setCurrentElement(element){\r\n    if(! element instanceof BaseElement){\r\n      throw 'Only Base Element Can Be Set as Default'\r\n    }\r\n    this.currentElement = element;\r\n    store.dispatch(setCurrentElement(element));\r\n  }\r\n\r\n  getCurrentElement(){\r\n    if(!this.currentElement){\r\n      return this.setCurrentRootElement();\r\n    }\r\n    return this.currentElement;\r\n  }\r\n\r\n  getRootElement(){\r\n    return this.rootElement\r\n  }\r\n\r\n  addWidgetInSection(elementName){\r\n    let newSection = new Section();\r\n    this.elementsIds.push(newSection.getId());\r\n\r\n    let newColumn = new Column();\r\n    this.elementsIds.push(newColumn.getId());\r\n\r\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\r\n    this.elementsIds.push(newWidget.getId());\r\n\r\n    newColumn.appendWidget(newWidget);\r\n    newSection.appendColumn(newColumn);\r\n    this.rootElement.appendNewSection(newSection);\r\n    this.setCurrentElement(newWidget);\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n}\r\n\r\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\n\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {widgets: window.elementsManager.getWidgetsList()};\r\n  }\r\n  render() {\r\n    return <div className=\"widget-panel\">\r\n      {\r\n        this.state.widgets.map(widget => {\r\n          return <WidgetIcon element={widget} key={widget.getName()}/>;\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel","import React, {Component} from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport Controller from \"../classes/Controller\";\r\nimport { set } from \"lodash\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: props.open,\r\n      active: props.open\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    const open = props.open;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"settingsSection0\").classList.add('open')\r\n  }\r\n\r\n  toggle(e){\r\n    this.setState({\r\n      open: !this.state.open,\r\n      active: e.currentTarget.dataset.key\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    let settingsControllers = document.getElementById('settingsControllers');\r\n    if(document.getElementById(\"settingsSection\" + this.props.active))\r\n    if(document.getElementById(\"settingsSection\" + this.props.active).classList.contains('open') === false) {\r\n      for(let count = 0; count < settingsControllers.children.length; count++) {\r\n        document.getElementById(\"settingsSection\" + count)\r\n            ? document.getElementById(\"settingsSection\" + count).classList.remove('open') : '';\r\n      }\r\n      document.getElementById(\"settingsSection\" + this.props.active).classList.add('open')\r\n    } else {\r\n      document.getElementById(\"settingsSection\" + this.props.active).classList.remove('open');\r\n    }\r\n\r\n    let controllers = this.props.controls || [];\r\n    return <div className=\"settings-section\" id={\"settingsSection\" + this.props.active}>\r\n    <div className=\"settings-section\">\r\n      <div className=\"settings-section__title d-flex \" data-open={true} data-key={this.props.active} onClick={this.toggle}>\r\n        <div className=\"settings-section__icon d-flex \">\r\n          <ChevronIcon/>\r\n        </div>\r\n        <div className=\"settings-section__label\">\r\n          {this.props.label}\r\n        </div>\r\n      </div>\r\n      <div className=\"controllers-wrapper\">\r\n        {\r\n          controllers.map((controller) => {\r\n              let ControllerComponent = window.controllersManager.getController(controller.type);\r\n              return React.createElement(ControllerComponent, {...controller, key: controller.controlId, controller: new Controller(controller)});\r\n            })\r\n        }\r\n      </div>\r\n    </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default SettingSection;\r\n","import React, {Component} from \"react\";\r\nimport './DynamicContent.scss';\r\nimport './../../../sass/altrp-menu.scss';\r\nimport {connect} from \"react-redux\";\r\nimport {closeDynamicContent} from \"../../store/dynamic-content/actions\";\r\nimport store from \"../../store/store\";\r\n\r\n/**\r\n * Класс реализующий список динамических данных для контроллера\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      models: [\r\n          {\r\n        modelName: 'page',\r\n        title: 'Page',\r\n        fields: [\r\n          {\r\n            type: 'text',\r\n            fields: [\r\n              {\r\n                fieldName: 'id',\r\n                title: 'ID',\r\n              },\r\n              {\r\n                fieldName: 'title',\r\n                title: 'Title',\r\n              },\r\n              {\r\n                fieldName: 'authorName',\r\n                title: 'Author Name',\r\n              },\r\n              {\r\n                fieldName: 'authorId',\r\n                title: 'Author ID',\r\n              },\r\n            ]\r\n          },\r\n          {\r\n            type: 'number',\r\n            fields: [\r\n              {\r\n                fieldName: 'id',\r\n                title: 'ID',\r\n              },\r\n              {\r\n                fieldName: 'authorId',\r\n                title: 'Author ID',\r\n              },\r\n            ]\r\n          },\r\n        ],\r\n      }\r\n      ]\r\n    };\r\n    this.select = this.select.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Обработка клика по элемету\r\n   */\r\n  select(e){\r\n    e.stopPropagation();\r\n    let value = {};\r\n\r\n    value.modelName = e.target.dataset.modelname;\r\n    value.modelTitle = e.target.dataset.modeltitle;\r\n    value.fieldName = e.target.dataset.fieldname;\r\n    value.fieldTitle = e.target.dataset.fieldtitle;\r\n    value.settingName = this.props.settingName;\r\n    value.dynamic = true;\r\n    this.props.params.onSelect(value);\r\n    store.dispatch(closeDynamicContent());\r\n    console.log(this.props);\r\n    getCurrentEditor().setModelsSettings(value)\r\n  }\r\n\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()}>\r\n      <div className=\"altrp-menu\">\r\n        {\r\n          this.state.models.map(model=>{\r\n            let fields = [];\r\n            model.fields.forEach(_f=>{\r\n              if(_f.type === this.props.params.type){\r\n                fields = _f.fields;\r\n              }\r\n            });\r\n            return<div className=\"altrp-menu-group\" key={model.modelName}>\r\n              <div className=\"altrp-menu__title\" key={model.modelName}>{model.title}</div>\r\n              {fields.map(field=>(<div className=\"altrp-menu__item\"\r\n                                       data-fieldname={field.fieldName}\r\n                                       data-fieldtitle={field.title}\r\n                                       data-modelname={model.modelName}\r\n                                       data-modeltitle={model.title}\r\n                                       onClick={this.select}\r\n                                       key={field.fieldName}>{field.title}</div>))}\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, {Component} from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass PanelTabContent extends Component {\r\n    render(){\r\n      let keyActive = 0;\r\n      let sections =  this.props.sections || [];\r\n      return <div className=\"settings-controllers\">\r\n        <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n        > \r\n          <div id=\"settingsControllers\">\r\n            {\r\n              sections.map((section, idx) =>{\r\n                return React.createElement(SettingSection, {\r\n                  ...section,\r\n                  key: section.sectionId,\r\n                  active: keyActive++,\r\n                  open: idx === 0,\r\n                  });\r\n                }\r\n            )\r\n          }\r\n          <DynamicContent/>\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    }\r\n}\r\n\r\nexport default PanelTabContent","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport ContentIcon from '../../svgs/content.svg'\r\nimport StyleIcon from '../../svgs/style.svg'\r\nimport AdvancedIcon from '../../svgs/advanced.svg'\r\nimport {TAB_ADVANCED, TAB_CONTENT, TAB_STYLE} from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass SettingsPanel extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 'content',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab){\r\n    this.setState({\r\n        ...this.state, activeTab\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let controllersManager = window.controllersManager;\r\n\r\n    let sections = [];\r\n    if(this.props.currentElement.getName){\r\n      sections = controllersManager.getControls(this.props.currentElement.getName())[this.state.activeTab] || [];\r\n    }\r\n\r\n    // let sections = this.props.currentElement.getControllers ?\r\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\r\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\r\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\r\n    return <div className=\"panel settings-panel d-flex\">\r\n      <div className=\"panel-tabs d-flex\">\r\n        <button className={contentTabClasses} onClick={()=>this.setActiveTab(TAB_CONTENT)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <ContentIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Content\r\n          </span>\r\n        </button>\r\n        <button className={styleTabClasses} onClick={()=>this.setActiveTab(TAB_STYLE)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <StyleIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Style\r\n          </span>\r\n        </button>\r\n        <button className={advancedTabClasses} onClick={()=>this.setActiveTab(TAB_ADVANCED)}>\r\n          <span className=\"panel-tab__icon\">\r\n            <AdvancedIcon/>\r\n          </span>\r\n          <span className=\"panel-tab__text\">\r\n            Advanced\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <PanelTabContent sections={sections}/>\r\n    </div>\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return{\r\n    currentElement:state.currentElement.currentElement\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SettingsPanel);\r\n","import React, {Component} from \"react\";\r\n\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <div className=\"editor-window\" id=\"editorWindow\">\r\n\r\n      {/*<Frame>*/}\r\n        {/*<FrameBindingContext>*/}\r\n          {/*<DropTarget/>*/}\r\n        {/*</FrameBindingContext>*/}\r\n      {/*</Frame>*/}\r\n      {/*<Frame src=\"/admin/editor-content\" >*/}\r\n        {/*<FrameBindingContext/>*/}\r\n      {/*</Frame>*/}\r\n      {/*<FrameContextConsumer>*/}\r\n      <iframe src=\"/admin/editor-content\" width=\"100%\"/>\r\n      {/*</FrameContextConsumer>*/}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default EditorWindow","import React, {Component} from \"react\";\r\n\r\nclass HistoryPanel extends Component {\r\n\r\n  render() {\r\n    return <div className=\"history-panel\">\r\n      HistoryPanel\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default HistoryPanel","import Chevron from '../../svgs/chevron.svg';\r\nimport React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {CONSTANTS, getEditor} from \"../helpers\";\r\n\r\nclass UpdateButton extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e){\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n render(){\r\n   let buttonClasses = 'btn font_montserrat font_500 btn_grey';\r\n   switch (this.props.templateStatus) {\r\n     case CONSTANTS.TEMPLATE_UPDATED:{\r\n       buttonClasses += ' btn_disabled ';\r\n     }\r\n     break;\r\n     case CONSTANTS.TEMPLATE_NEED_UPDATE:{\r\n       buttonClasses += ' btn_active ';\r\n     }\r\n     break;\r\n   }\r\n   return  <div className=\"control-group d-flex\">\r\n     <button className={buttonClasses} onClick={this.saveTemplate}>\r\n       UPDATE\r\n     </button>\r\n     <button className=\"btn btn_grey\">\r\n       <Chevron className=\"icon\"/>\r\n     </button>\r\n   </div>\r\n }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return{\r\n    templateStatus: state.templateStatus.status,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton)","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport { iconsManager } from \"../../helpers\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        }\r\n      ],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let res = await this.mediaResource.getAll();\r\n\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: res };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = res;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  getAssets(tab) {\r\n    if (!tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return iconsManager().getIconsList();\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  render() {\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  AssetContent = asset.iconComponent;\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"20\";\r\n                  assetProps.height = \"20\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport {CONSTANTS, renderAsset} from \"./js/helpers\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\n\r\nimport store from \"../src/js/store/store\";\r\n\r\n\r\nimport DesktopIcon from \"./svgs/desktop.svg\";\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport {contextMenu} from \"react-contexify\";\r\nimport DynamicContent from \"./js/components/DynamicContent/DynamicContent\";\r\nimport {closeDynamicContent} from \"./js/store/dynamic-content/actions\";\r\nimport {iconsManager} from \"../../admin/src/js/helpers\";\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n    };\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  templateStatus() {\r\n    let templateStatus = store.getState().templateStatus.status;\r\n    if (templateStatus !== this.state.templateStatus) {\r\n      this.setState({ ...this.state, templateStatus });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent())\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  componentDidMount() {\r\n    this.initModules();\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let templateClasses = \"editor \";\r\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <div className={templateClasses}\r\n             onClick={this.onClick}\r\n             onDragEnd={this.onDragEnd}>\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n                // onClick={this.showSettingsPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin\" target=\"_blank\" className=\"logo\">\r\n                {\r\n                  window.admin_logo\r\n                      ? renderAsset(window.admin_logo, {className:'editor__logo'})\r\n                      :<Logo viewBox=\"0 0 97 35\" className=\"editor__logo\"/>\r\n                }\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <DesktopIcon className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(Editor);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}