{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/Datasource.js","webpack:///./resources/modules/front-app/src/js/classes/Route.js","webpack:///./resources/modules/front-app/src/js/classes/Routes.js","webpack:///./resources/modules/front-app/src/js/classes/Template.js","webpack:///./resources/modules/front-app/src/js/classes/Area.js"],"names":["Datasource","this","getProperty","replace","urlParams","appStore","getState","currentModel","currentDataStorage","parsedTemplate","params","split","filter","line","map","trim","length","push","forEach","left","right","match","indexOf","AltrpModel","Route","data","id","path","model","models","data_sources","data_source","title","allowed","redirect","lazy","route","areas","_area","Area","areaFabric","Routes","resource","Resource","loadRoutes","getAll","then","routesData","routes","pages","_data","routeFabric","dispatch","changeAppRoutes","err","console","error","Template","templates","areaData","area","settings","template","JSON","parse","area_name","_t","template_settings"],"mappings":"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","file":"a24c7a42b7a7d89fbe7e.bundle.js","sourcesContent":["import appStore from \"../store/store\"\r\n/**\r\n * @class Datasource\r\n */\r\nimport AltrpModel from \"../../../../editor/src/js/classes/AltrpModel\";\r\n\r\nclass Datasource extends AltrpModel{\r\n  /**\r\n   * получить url для вэба\r\n   * @return {string}\r\n   */\r\n  getWebUrl(){\r\n    return this.getProperty('source.web_url').replace(/{([\\s\\S]+?)}/g, '');\r\n  }\r\n  /**\r\n   * получить тип ресурса\r\n   * @return {string}\r\n   */\r\n  getType(){\r\n    return this.getProperty('source.type');\r\n  }\r\n  /**\r\n   * получить url для вэба\r\n   * @return {string}\r\n   */\r\n  getAlias(){\r\n    return this.getProperty('alias');\r\n  }\r\n\r\n  /**\r\n   * Получить параметры для запроса к ресурсу\r\n   * @params {{}} urlParams\r\n   * @return{null | {}}\r\n   */\r\n  getParams(urlParams = {}){\r\n    const {currentModel, currentDataStorage} = appStore.getState();\r\n    let parsedTemplate = this.getProperty('parameters');\r\n    const params = {};\r\n    if(! parsedTemplate){\r\n      return null;\r\n    }\r\n    parsedTemplate = parsedTemplate.split('\\n');\r\n    parsedTemplate = parsedTemplate.filter(line => line);\r\n    parsedTemplate = parsedTemplate.map(line=> {\r\n      line = line.split('|');\r\n      line[0] = line[0].trim();\r\n      if(line.length === 1){\r\n        line.push(line[0]);\r\n      } else {\r\n        line[1] = line[1].trim();\r\n      }\r\n      return line\r\n    });\r\n    parsedTemplate.forEach(([left, right])=>{\r\n      if(right.match(/(?<={{)([\\s\\S]+?)(?=}})/g)){\r\n        right = right.match(/(?<={{)([\\s\\S]+?)(?=}})/g)[0];\r\n        if(right.indexOf('altrpdata.') === 0){\r\n          right = right.replace('altrpdata.', '');\r\n          right = currentDataStorage.getProperty(right)\r\n        } else {\r\n          right = urlParams[right] ? urlParams[right] : currentModel.getProperty(right);\r\n        }\r\n      }\r\n      if(right || right === 0){\r\n        params[left] = right;\r\n      }\r\n\r\n    });\r\n    return params;\r\n  }\r\n}\r\n\r\nexport default Datasource","/**\r\n * @property {Area[]} areas\r\n * */\r\nimport Area from \"./Area\";\r\nimport Datasource from \"./Datasource\";\r\n\r\nclass Route {\r\n  constructor(data){\r\n    this.id = data.id ;\r\n    this.path = data.path;\r\n    this.model = data.model;\r\n    this.models = data.models;\r\n    if(! this.models){\r\n      this.models = data.model ? [data.model] : [];\r\n    }\r\n    this.model = data.model;\r\n    this.data_sources = data.data_sources || [];\r\n    this.data_sources = this.data_sources.map(data_source => new Datasource(data_source));\r\n    this.title = data.title || '';\r\n    this.allowed = data.allowed;\r\n    this.redirect = data.redirect;\r\n    this.lazy = data.lazy;\r\n  }\r\n  static routeFabric(data){\r\n    let route = new Route(data);\r\n    route.areas = [];\r\n    data.areas = data.areas || [];\r\n    for (let _area of data.areas){\r\n      route.areas.push(Area.areaFabric(_area))\r\n    }\r\n    return route;\r\n  }\r\n}\r\n\r\nexport default Route","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport {changeAppRoutes} from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/routes'\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes(){\r\n    this.resource.getAll().then(routesData=>{\r\n      let routes = [];\r\n      for(let _data of routesData.pages){\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes))\r\n    }).catch(err=>{\r\n      console.error(err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Routes();","/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.id = areaData.id;\r\n    area.template = new Template();\r\n    area.template.data = areaData.template ? JSON.parse(areaData.template.data) : null;\r\n    area.template.id = areaData.template ? areaData.template.id : null;\r\n    if(areaData.area_name === 'popups'){\r\n      // area.templates = [];\r\n      // area.templates = new Template();\r\n      area.templates = [];\r\n      areaData.templates = areaData.templates || [];\r\n      areaData.templates.forEach(_t=>{\r\n        let template = new Template();\r\n        template.data = _t ? JSON.parse(_t.data) : null;\r\n        template.id = _t ? JSON.parse(_t.id) : null;\r\n        template.template_settings = _t ? _t.template_settings : [];\r\n        area.templates.push(template);\r\n      });\r\n    }\r\n    return area;\r\n  }\r\n\r\n  /**\r\n   * Массив шаблонов\r\n   * @return {*|Array}\r\n   */\r\n  getTemplates(){\r\n    this.templates = this.templates || [];\r\n    return this.templates;\r\n  }\r\n}\r\n\r\nexport default Area"],"sourceRoot":""}