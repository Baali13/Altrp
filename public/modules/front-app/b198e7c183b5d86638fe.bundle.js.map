{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/Route.js","webpack:///./resources/modules/front-app/src/js/classes/Routes.js","webpack:///./resources/modules/front-app/src/js/classes/Template.js","webpack:///./resources/modules/front-app/src/js/classes/Area.js"],"names":["Route","data","this","id","path","model","models","title","allowed","redirect","lazy","route","areas","_area","push","Area","areaFabric","Routes","resource","Resource","loadRoutes","getAll","then","routesData","routes","pages","_data","routeFabric","appStore","dispatch","changeAppRoutes","err","console","error","Template","templates","areaData","area","settings","template","JSON","parse","area_name","forEach","_t","template_settings"],"mappings":"4qCA+BeA,E,WAzBb,WAAYC,GAAK,YACfC,KAAKC,GAAKF,EAAKE,GACfD,KAAKE,KAAOH,EAAKG,KACjBF,KAAKG,MAAQJ,EAAKI,MAClBH,KAAKI,OAASL,EAAKK,OACdJ,KAAKI,SACRJ,KAAKI,OAASL,EAAKI,MAAQ,CAACJ,EAAKI,OAAS,IAE5CH,KAAKG,MAAQJ,EAAKI,MAClBH,KAAKK,MAAQN,EAAKM,OAAS,GAC3BL,KAAKM,QAAUP,EAAKO,QACpBN,KAAKO,SAAWR,EAAKQ,SACrBP,KAAKQ,KAAOT,EAAKS,K,qDAEAT,GACjB,IAAIU,EAAQ,IAAIX,EAAMC,GACtBU,EAAMC,MAAQ,GACdX,EAAKW,MAAQX,EAAKW,OAAS,GAHL,UAIJX,EAAKW,OAJD,IAItB,2BAA6B,KAApBC,EAAoB,QAC3BF,EAAMC,MAAME,KAAKC,IAAKC,WAAWH,KALb,8BAOtB,OAAOF,M,0iCCtBLM,E,WAEJ,aAAa,YACXf,KAAKgB,SAAW,IAAIC,IAAS,CAC3BR,MAAO,iBAETT,KAAKkB,a,iDAGLlB,KAAKgB,SAASG,SAASC,MAAK,SAAAC,GAC1B,IADsC,EAClCC,EAAS,GADyB,IAErBD,EAAWE,OAFU,IAEtC,2BAAkC,KAA1BC,EAA0B,QAChCF,EAAOV,KAAKd,EAAM2B,YAAYD,KAHM,8BAKtCE,IAASC,SAASC,YAAgBN,OALpC,OAMS,SAAAO,GACPC,QAAQC,MAAMF,U,KAKL,cAAId,G,qEClBJiB,E,0BCHTnB,E,uFA8BF,OADAb,KAAKiC,UAAYjC,KAAKiC,WAAa,GAC5BjC,KAAKiC,a,kCA7BIC,GAChB,IAAIC,EAAO,IAAItB,EAmBf,OAlBAsB,EAAKC,SAAWF,EAASE,SACzBD,EAAKlC,GAAKiC,EAASjC,GACnBkC,EAAKE,SAAW,IAAIL,EACpBG,EAAKE,SAAStC,KAAOmC,EAASG,SAAWC,KAAKC,MAAML,EAASG,SAAStC,MAAQ,KAC9EoC,EAAKE,SAASpC,GAAKiC,EAASG,SAAWH,EAASG,SAASpC,GAAK,KACpC,WAAvBiC,EAASM,YAGVL,EAAKF,UAAY,GACjBC,EAASD,UAAYC,EAASD,WAAa,GAC3CC,EAASD,UAAUQ,SAAQ,SAAAC,GACzB,IAAIL,EAAW,IAAIL,EACnBK,EAAStC,KAAO2C,EAAKJ,KAAKC,MAAMG,EAAG3C,MAAQ,KAC3CsC,EAASpC,GAAKyC,EAAKJ,KAAKC,MAAMG,EAAGzC,IAAM,KACvCoC,EAASM,kBAAoBD,EAAKA,EAAGC,kBAAoB,GACzDR,EAAKF,UAAUrB,KAAKyB,OAGjBF,M,KAaItB","file":"b198e7c183b5d86638fe.bundle.js","sourcesContent":["/**\r\n * @property {Area[]} areas\r\n * */\r\nimport Area from \"./Area\";\r\n\r\nclass Route {\r\n  constructor(data){\r\n    this.id = data.id ;\r\n    this.path = data.path;\r\n    this.model = data.model;\r\n    this.models = data.models;\r\n    if(! this.models){\r\n      this.models = data.model ? [data.model] : [];\r\n    }\r\n    this.model = data.model;\r\n    this.title = data.title || '';\r\n    this.allowed = data.allowed;\r\n    this.redirect = data.redirect;\r\n    this.lazy = data.lazy;\r\n  }\r\n  static routeFabric(data){\r\n    let route = new Route(data);\r\n    route.areas = [];\r\n    data.areas = data.areas || [];\r\n    for (let _area of data.areas){\r\n      route.areas.push(Area.areaFabric(_area))\r\n    }\r\n    return route;\r\n  }\r\n}\r\n\r\nexport default Route","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport {changeAppRoutes} from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/routes'\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes(){\r\n    this.resource.getAll().then(routesData=>{\r\n      let routes = [];\r\n      for(let _data of routesData.pages){\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes))\r\n    }).catch(err=>{\r\n      console.error(err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Routes();","/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.id = areaData.id;\r\n    area.template = new Template();\r\n    area.template.data = areaData.template ? JSON.parse(areaData.template.data) : null;\r\n    area.template.id = areaData.template ? areaData.template.id : null;\r\n    if(areaData.area_name === 'popups'){\r\n      // area.templates = [];\r\n      // area.templates = new Template();\r\n      area.templates = [];\r\n      areaData.templates = areaData.templates || [];\r\n      areaData.templates.forEach(_t=>{\r\n        let template = new Template();\r\n        template.data = _t ? JSON.parse(_t.data) : null;\r\n        template.id = _t ? JSON.parse(_t.id) : null;\r\n        template.template_settings = _t ? _t.template_settings : [];\r\n        area.templates.push(template);\r\n      });\r\n    }\r\n    return area;\r\n  }\r\n\r\n  /**\r\n   * Массив шаблонов\r\n   * @return {*|Array}\r\n   */\r\n  getTemplates(){\r\n    this.templates = this.templates || [];\r\n    return this.templates;\r\n  }\r\n}\r\n\r\nexport default Area"],"sourceRoot":""}