{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/Template.js","webpack:///./resources/modules/front-app/src/js/classes/Area.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopup.js","webpack:///./resources/modules/front-app/src/js/components/AreaComponent.js","webpack:///./resources/modules/front-app/src/js/classes/PageLoader.js","webpack:///./resources/modules/front-app/src/js/components/RouteContent.js","webpack:///./resources/modules/editor/src/js/components/Styles.js","webpack:///./resources/modules/front-app/src/js/components/AppContent.js","webpack:///./resources/modules/front-app/src/FrontApp.js"],"names":["Template","Area","this","templates","areaData","area","settings","id","template","data","JSON","parse","area_name","forEach","_t","template_settings","push","FrontPopup","rootElement","window","frontElementsFabric","parseData","props","page","models","className","join","React","createElement","componentClass","element","children","Component","AreaComponent","classes","getTemplates","length","map","key","pageLoader","resource","Resource","route","pagesStorage","pageId","_","isObject","get","RouteContent","setTitle","title","state","areas","lazy","allowed","loadPage","areaFabric","setState","changeRouteCurrentModel","appStore","dispatch","changeCurrentModel","altrpModelUpdated","model","modelName","match","params","prevProps","queryCache","clear","style","zIndex","autoHide","autoHideTimeout","autoHideDuration","renderTrackVertical","to","redirect","withRouter","Styles","elementStyles","stylesModule","stylesModuleResolve","elementId","styles","elementFound","elementStyle","data-styles-id","AppContent","routes","path","exact","connect","_export","appRoutes","frontApp","getRoutes","then","res","store"],"mappings":"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","file":"88676419d48ae9fb4532.bundle.js","sourcesContent":["/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.id = areaData.id;\r\n    area.template = new Template();\r\n    area.template.data = areaData.template ? JSON.parse(areaData.template.data) : null;\r\n    area.template.id = areaData.template ? areaData.template.id : null;\r\n    if(areaData.area_name === 'popups'){\r\n      // area.templates = [];\r\n      // area.templates = new Template();\r\n      area.templates = [];\r\n      areaData.templates = areaData.templates || [];\r\n      areaData.templates.forEach(_t=>{\r\n        let template = new Template();\r\n        template.data = _t ? JSON.parse(_t.data) : null;\r\n        template.id = _t ? JSON.parse(_t.id) : null;\r\n        template.template_settings = _t ? _t.template_settings : [];\r\n        area.templates.push(template);\r\n      });\r\n    }\r\n    return area;\r\n  }\r\n\r\n  /**\r\n   * Массив шаблонов\r\n   * @return {*|Array}\r\n   */\r\n  getTemplates(){\r\n    this.templates = this.templates || [];\r\n    return this.templates;\r\n  }\r\n}\r\n\r\nexport default Area","import React, {Component} from \"react\";\r\n\r\nclass FrontPopup extends Component {\r\n    render(){\r\n      let classes = [`app-popup`];\r\n\r\n      let rootElement  = window.frontElementsFabric.parseData(this.props.template.data, null, this.props.page, this.props.models);\r\n      return <div className={classes.join(' ')}>{\r\n        React.createElement(rootElement.componentClass,\r\n            {\r\n              element: rootElement,\r\n              children: rootElement.children\r\n            })\r\n      }</div>\r\n    }\r\n}\r\n\r\nexport default FrontPopup","import React, {Component} from \"react\";\r\nimport FrontPopup from \"./FrontPopup\";\r\n\r\nclass AreaComponent extends Component {\r\n    render(){\r\n      \r\n      let classes = [`app-area`, `app-area_${this.props.id}`];\r\n      /**\r\n       * Если это попап\r\n       */\r\n      if (this.props.area.getTemplates().length){\r\n        return <div className={classes.join(' ')}>{\r\n          this.props.area.getTemplates().map(template=><FrontPopup key={template.id} template={template}/>)\r\n        }</div>\r\n      }\r\n      /**\r\n       * Если шаблон привязанный к странице удалили, то ничего не отрисовываем\r\n       */\r\n      if(! this.props.template.data){\r\n        return<div className={classes.join(' ')}/>;\r\n      }\r\n      let rootElement =\r\n          window.frontElementsFabric.parseData(this.props.template.data, null, this.props.page, this.props.models);\r\n      return <div className={classes.join(' ')}>{\r\n        React.createElement(rootElement.componentClass,\r\n            {\r\n              element: rootElement,\r\n              children: rootElement.children\r\n            })\r\n      }</div>\r\n    }\r\n}\r\n\r\nexport default AreaComponent","/**\r\n * Загружает и хранит страницы с шаблонами\r\n * @class PageLoader\r\n */\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\n\r\nclass PageLoader {\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/pages'\r\n    });\r\n    this.pagesStorage = {};\r\n  }\r\n\r\n  /**\r\n   * @param {int} pageId\r\n   * @return {Promise}\r\n   */\r\n  async loadPage(pageId){\r\n    if(_.isObject(this.pagesStorage[pageId])){\r\n      // return new Promise((resolve, reject)=>{\r\n      //   resolve(this.pagesStorage[pageId]);\r\n      // });\r\n      return this.pagesStorage[pageId];\r\n    }\r\n    let page = await this.resource.get(pageId);\r\n    this.pagesStorage[pageId] = page;\r\n    return page;\r\n  }\r\n}\r\n\r\nconst pageLoader = new PageLoader;\r\nexport default pageLoader;","import React, {Component} from \"react\";\r\nimport AreaComponent from \"./AreaComponent\";\r\nimport {setTitle} from \"../helpers\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport pageLoader from './../classes/PageLoader'\r\nimport Area from \"../classes/Area\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport appStore from \"../store/store\"\r\nimport {changeCurrentModel} from \"../store/current-model/actions\";\r\nimport {queryCache} from  \"react-query\";\r\n\r\n\r\nclass RouteContent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    setTitle(this.props.title);\r\n    this.state = {\r\n      areas: this.props.areas || []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Меняем заголовок страницы\r\n   * лениво подгружаем области если необходимо и страница доступна к просмотру\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount(){\r\n    setTitle(this.props.title);\r\n    if(this.props.lazy && this.props.allowed){\r\n      let page = await pageLoader.loadPage(this.props.id);\r\n      let areas = page.areas.map(area=> (Area.areaFabric(area)));\r\n      this.setState(state=>({\r\n          ...state,\r\n        areas,\r\n      }));\r\n    }\r\n    /**\r\n     * Меняем текущую модель\r\n     */\r\n    this.changeRouteCurrentModel();\r\n  }\r\n  /**\r\n   * Меняем текущую модель\r\n   */\r\n  async changeRouteCurrentModel(){\r\n    if(_.get(this.props, 'model.modelName') && _.get(this.props, 'match.params.id')){\r\n      appStore.dispatch(changeCurrentModel({altrpModelUpdated: false}));\r\n      let model = await (new Resource({route:`/ajax/models/${this.props.model.modelName}`})).get(this.props.match.params.id);\r\n      model.altrpModelUpdated = true;\r\n      appStore.dispatch(changeCurrentModel(model));\r\n    } else {\r\n      appStore.dispatch(changeCurrentModel({altrpModelUpdated: true}));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Если меняется роут\r\n   * @params {{}} prevProps\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidUpdate(prevProps){\r\n    queryCache.clear();\r\n    if((_.get(this.props, 'model.modelName') !== _.get(prevProps, 'model.modelName'))\r\n        || (_.get(this.props, 'match.params.id') !== _.get(prevProps, 'match.params.id'))\r\n    ){\r\n      this.changeRouteCurrentModel();\r\n    }\r\n  }\r\n  render(){\r\n    if(! this.props.allowed){\r\n      return<Redirect to={this.props.redirect || '/'}/>\r\n    }\r\n    return (\r\n    <Scrollbars\r\n      style={{zIndex: 99999}}\r\n      autoHide\r\n      autoHideTimeout={500}\r\n      autoHideDuration={200}\r\n      renderTrackVertical={({style, ...props})=>{\r\n        return<div className=\"altrp-scroll__vertical-track\" style={style} {...props} />}}\r\n    >\r\n    <div className=\"route-content\">{\r\n      this.state.areas.map(area => <AreaComponent\r\n          {...area}\r\n          area={area}\r\n          page={this.props.id}\r\n          models={[this.props.model]}\r\n          key={'appArea_' + area.id}/>)\r\n    }</div>\r\n    </Scrollbars>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RouteContent);","import React, {Component} from \"react\";\r\n\r\nclass Styles extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      elementStyles: []\r\n    };\r\n    window.stylesModule = this;\r\n    window.stylesModuleResolve(this);\r\n  }\r\n  /**\r\n   * @param {string} elementId\r\n   * @param {string} styles\r\n   * */\r\n  addElementStyles(elementId, styles){\r\n    if(!styles){\r\n      return\r\n    }\r\n    let elementFound = false;\r\n    let elementStyles = [...this.state.elementStyles];\r\n    elementStyles.forEach(elementStyle=>{\r\n      if(elementStyle.elementId === elementId){\r\n        elementFound = true;\r\n        elementStyle.styles = styles;\r\n      }\r\n    });\r\n    if(!elementFound){\r\n      elementStyles.push({\r\n        elementId,\r\n        styles,\r\n      })\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      elementStyles\r\n    })\r\n  }\r\n  render(){\r\n    return <div className=\"styles-container\">\r\n      {this.state.elementStyles.map(elementStyle => {\r\n        return<style data-styles-id={elementStyle.elementId} key={elementStyle.elementId}>{elementStyle.styles}</style>\r\n      })}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Styles","import React, {Component} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport RouteContent from \"./RouteContent\";\r\nimport Styles from \"../../../../editor/src/js/components/Styles\";\r\n\r\nclass AppContent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n\r\n  }\r\n  render(){\r\n    return <Router >\r\n      <div className=\"front-app-content\">\r\n        <Switch>\r\n          {this.props.routes.map(route=><Route key={route.id}\r\n                                               children={ <RouteContent {...route}/>}\r\n                                               path={route.path}\r\n                                               exact />)}\r\n        </Switch>\r\n      </div>\r\n      <Styles/>\r\n    </Router>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    routes: state.appRoutes.routes\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppContent);\r\n","import React, {Component} from \"react\";\r\nimport {hot} from \"react-hot-loader\";\r\nimport {getRoutes} from \"./js/helpers\";\r\nimport appStore from \"./js/store/store\";\r\nimport AppContent from \"./js/components/AppContent\";\r\nimport {Provider} from 'react-redux';\r\n\r\nclass FrontApp extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    window.frontApp = this;\r\n    this.getRoutes();\r\n  }\r\n  getRoutes(){\r\n    return getRoutes().then(res => {\r\n      this.routes = res.default;\r\n    });\r\n  }\r\n  render(){\r\n    return <Provider store={appStore}>\r\n      <AppContent/>\r\n    </Provider>;\r\n  }\r\n}\r\n\r\nlet _export;\r\nif (process.env.NODE_ENV === 'production') {\r\n  _export = FrontApp;\r\n} else {\r\n  _export = hot(module)(FrontApp);\r\n}\r\n\r\nexport default _export;\r\n"],"sourceRoot":""}