{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/Resource.js","webpack:///./resources/modules/front-app/src/js/classes/Template.js","webpack:///./resources/modules/front-app/src/js/classes/Area.js","webpack:///./resources/modules/front-app/src/js/classes/Route.js","webpack:///./resources/modules/front-app/src/js/classes/Routes.js"],"names":["Resource","data","this","route","id","url","fetch","method","headers","then","res","ok","Promise","reject","text","status","json","_token","options","body","JSON","stringify","files","fileType","String","Math","random","slice","formData","FormData","console","log","i","length","size","type","indexOf","append","Template","Area","areaData","area","settings","template","parse","Route","path","areas","_area","push","areaFabric","Routes","resource","loadRoutes","getAll","routesData","routes","pages","_data","routeFabric","appStore","dispatch","changeAppRoutes","err","error"],"mappings":"oIA2LeA,E,WA5Kb,WAAYC,GAGV,GAHe,YAEfC,KAAKC,MAAQF,EAAKE,OACbD,KAAKC,MACR,KAAM,c,wCAONC,GACF,IAAKA,EACH,KAAM,mBAGR,IAOIC,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAKOC,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,+BAQb,IAOIX,EAAMH,KAAKC,MACf,OAAOG,MAAMD,EARC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAKOC,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,6BASS,IAAnBf,EAAmB,uDAAZ,GAAIO,EAAQ,uCACtBP,EAAKgB,OAASA,OACdT,EAAUA,GAAW,CACnB,eAAgB,oBAElB,IAAIU,EAAU,CACZX,OAAQ,OACRY,KAAMC,KAAKC,UAAUpB,GACrBO,WAEF,OAAOF,MAAMJ,KAAKC,MAAOe,GAAST,MAAK,SAAAC,GACrC,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,gCAQLM,EAAOC,GAEAC,OAAOC,KAAKC,UAAUC,MAAM,GAC3CJ,EAAWA,GAAY,QACvB,IAAIf,EAAU,CACZ,eAAgBS,QAGdW,EAAW,IAAIC,SACnBC,QAAQC,IAAIT,GACZ,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC7BV,EAAMU,GAAGE,KArGW,UAqGiD,IAApCZ,EAAMU,GAAGG,KAAKC,QAAQb,GACxDO,QAAQC,IAAIT,EAAMU,IAGpBJ,EAASS,OAAT,gBAAyBL,EAAzB,KAA+BV,EAAMU,IAEvC,IAAId,EAAU,CACZX,OAAQ,OACRY,KAAMS,EACNpB,WAEF,OAAOF,MAAMJ,KAAKC,MAAOe,GAAST,MAAK,SAAAC,GACrC,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,0BAOXZ,EAAIH,GACNA,EAAKgB,OAASA,OACd,IAAIC,EAAU,CACZX,OAAQ,MACRY,KAAMC,KAAKC,UAAUpB,GACrBO,QAAS,CACP,eAAgBS,OAChB,eAAgB,qBAGhBZ,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EAAKa,GAAST,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,6BAMRZ,GAEL,IAAIc,EAAU,CACZX,OAAQ,SACRC,QAAS,CACP,eAAgBS,OAChB,eAAgB,qBAGhBZ,EAAMH,KAAKC,MAAQ,IAAMC,EAC7B,OAAOE,MAAMD,EAAKa,GAAST,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,Y,mCAQb,IAMIX,EAAMH,KAAKC,MAAQ,WACvB,OAAOG,MAAMD,EAPC,CACZE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIOC,MAAK,SAAAC,GAC9B,OAAc,IAAXA,EAAIC,GACEC,QAAQC,OAAOH,EAAII,OAAQJ,EAAIK,QAEjCL,EAAIM,c,KC7KFsB,E,0BCSAC,E,wFAXKC,GAChB,IAAIC,EAAO,IAAIF,EAMf,OALAE,EAAKC,SAAWF,EAASE,SACzBD,EAAKrC,GAAKoC,EAASpC,GACnBqC,EAAKE,SAAW,IAAIL,EACpBG,EAAKE,SAAS1C,KAAOmB,KAAKwB,MAAMJ,EAASG,SAAS1C,MAClDwC,EAAKE,SAASvC,GAAKoC,EAASG,SAASvC,GAC9BqC,M,0hCCOII,E,WAdb,WAAYzC,EAAI0C,GAAK,YACnB5C,KAAKE,GAAKA,EACVF,KAAK4C,KAAOA,E,qDAEK7C,GACjB,IAAIE,EAAQ,IAAI0C,EAAM5C,EAAKG,GAAIH,EAAK6C,MACpC3C,EAAM4C,MAAQ,GAFQ,UAGJ9C,EAAK8C,OAHD,IAGtB,2BAA6B,KAApBC,EAAoB,QAC3B7C,EAAM4C,MAAME,KAAKV,EAAKW,WAAWF,KAJb,8BAMtB,OAAO7C,M,0iCCXLgD,E,WAEJ,aAAa,YACXjD,KAAKkD,SAAW,IAAIpD,EAAS,CAC3BG,MAAO,iBAETD,KAAKmD,a,iDAGLnD,KAAKkD,SAASE,SAAS7C,MAAK,SAAA8C,GAC1B,IADsC,EAClCC,EAAS,GADyB,IAErBD,EAAWE,OAFU,IAEtC,2BAAkC,KAA1BC,EAA0B,QAChCF,EAAOP,KAAKJ,EAAMc,YAAYD,KAHM,8BAKtCE,IAASC,SAASC,YAAgBN,OALpC,OAMS,SAAAO,GACPjC,QAAQkC,MAAMD,U,KAKL,cAAIZ","file":"4.bundle.js","sourcesContent":["/**\r\n * @class\r\n * */\r\n\r\nexport const MAX_FILE_SIZE = 10485760;\r\nclass Resource {\r\n\r\n\r\n  /**\r\n   * @member {Object} routes\r\n   * @member {string} routes.get\r\n   * @member {string} routes.post\r\n   * @member {string} routes.create\r\n   * @member {string} routes.getAll\r\n   */\r\n  constructor(data){\r\n\r\n    this.route = data.route;\r\n    if(! this.route){\r\n      throw 'Нужен route';\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  get(id){\r\n    if(! id){\r\n      throw 'Get only by \"id\"';\r\n    }\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  getAll(){\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n\r\n    let url = this.route;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {any} data\r\n   * @param {object | null} headers\r\n   * @return {Promise}\r\n   * */\r\n  post(data = {}, headers){\r\n    data._token = _token;\r\n    headers = headers || {\r\n      'Content-Type': 'application/json'\r\n    };\r\n    let options = {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers,\r\n    };\r\n    return fetch(this.route, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @param {FileList} files\r\n   * @param {string} fileType\r\n   * @return {Promise}\r\n   * */\r\n  postFiles(files, fileType){\r\n    // data._token = _token;\r\n    let boundary = String(Math.random()).slice(2);\r\n    fileType = fileType || 'image';\r\n    let headers = {\r\n      'X-CSRF-TOKEN': _token,\r\n      // 'Content-Type': 'multipart/form-data; boundary=' + boundary\r\n    };\r\n    let formData = new FormData();\r\n    console.log(files);\r\n    for (let i = 0; i < files.length; i++) {\r\n      if(files[i].size > MAX_FILE_SIZE || files[i].type.indexOf(fileType) !== 0){\r\n        console.log(files[i]);\r\n        continue;\r\n      }\r\n      formData.append(`files[${i}]`, files[i]);\r\n    }\r\n    let options = {\r\n      method: 'POST',\r\n      body: formData,\r\n      headers,\r\n    };\r\n    return fetch(this.route, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  put(id, data){\r\n    data._token = _token;\r\n    let options = {\r\n      method: 'put',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'X-CSRF-TOKEN': _token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  delete(id){\r\n\r\n    let options = {\r\n      method: 'delete',\r\n      headers: {\r\n        'X-CSRF-TOKEN': _token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    let url = this.route + '/' + id;\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n  /**\r\n   * @return {Promise}\r\n   * */\r\n  getOptions(){\r\n\r\n    let options = {\r\n      method: 'get',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    let url = this.route + '/options';\r\n    return fetch(url, options).then(res => {\r\n      if(res.ok === false){\r\n        return Promise.reject(res.text(), res.status);\r\n      }\r\n      return res.json()\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default Resource;","/**\r\n * @property {Int} id\r\n * @property {Object} data\r\n * */\r\nclass Template {\r\n\r\n}\r\n\r\nexport default Template","import Template from './Template';\r\n/**\r\n * @property {Template} template\r\n * @property {Object} settings\r\n * */\r\nclass Area {\r\n  static areaFabric(areaData){\r\n    let area = new Area();\r\n    area.settings = areaData.settings;\r\n    area.id = areaData.id;\r\n    area.template = new Template();\r\n    area.template.data = JSON.parse(areaData.template.data);\r\n    area.template.id = areaData.template.id;\r\n    return area;\r\n  }\r\n}\r\n\r\nexport default Area","/**\r\n * @property {Area[]} areas\r\n * */\r\nimport Area from \"./Area\";\r\n\r\nclass Route {\r\n  constructor(id, path){\r\n    this.id = id;\r\n    this.path = path;\r\n  }\r\n  static routeFabric(data){\r\n    let route = new Route(data.id, data.path);\r\n    route.areas = [];\r\n    for (let _area of data.areas){\r\n      route.areas.push(Area.areaFabric(_area))\r\n    }\r\n    return route;\r\n  }\r\n}\r\n\r\nexport default Route","import Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Route from \"./Route\";\r\nimport appStore from \"../store/store\";\r\nimport {changeAppRoutes} from \"../store/routes/actions\";\r\n\r\nclass Routes {\r\n\r\n  constructor(){\r\n    this.resource = new Resource({\r\n      route: '/ajax/routes'\r\n    });\r\n    this.loadRoutes();\r\n  }\r\n  loadRoutes(){\r\n    this.resource.getAll().then(routesData=>{\r\n      let routes = [];\r\n      for(let _data of routesData.pages){\r\n        routes.push(Route.routeFabric(_data));\r\n      }\r\n      appStore.dispatch(changeAppRoutes(routes))\r\n    }).catch(err=>{\r\n      console.error(err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new Routes();"],"sourceRoot":""}