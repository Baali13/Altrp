{"version":3,"sources":["widgets/index.js","hooks/useWidgetSettings.js","widgets/Button/index.js","widgets/Divider/index.js","widgets/Image/index.js","widgets/Link/index.js","widgets/News/index.js","widgets/Table/index.js","components/painter/controls/WysiwygInlineControl.js","widgets/Text/index.js"],"names":["useWidgetSettings","property","defaultValue","dispatch","useDispatch","sections","useSelector","present","selectedWidget","sectionIndex","columnIndex","rowIndex","isNumber","widget","columns","settings","mutate","get","params","newSettings","set","changeWidget","ButtonTag","props","text","Divider","style","borderTopWidth","parseInt","size","borderTopColor","color","breakAfter","Image","alt","src","width","Link","className","isButton","href","url","target","News","console","log","image","title","map","item","index","key","Table","source","rows","striped","variant","bordered","hover","borderless","useState","data","setData","getData","useCallback","a","axios","req","useEffect","length","bootstrap4","keyField","pagination","paginationFactory","WysiwygInlineControl","value","onChange","setText","editable","setEditable","draggable","onDoubleClick","onDragStart","e","stopPropagation","preventDefault","onEditorChange","content","onBlur","inline","disabled","init","menubar","contextmenu","plugins","toolbar","table_toolbar","Text"],"mappings":"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","file":"static/js/10.f1cb027e.chunk.js","sourcesContent":["export { default as Button } from \"./Button\";\nexport { default as Divider } from \"./Divider\";\nexport { default as Image } from \"./Image\";\nexport { default as Link } from \"./Link\";\nexport { default as News } from \"./News\";\nexport { default as Table } from \"./Table\";\nexport { default as Text } from \"./Text\";\n","import mutate from \"dot-prop-immutable\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeWidget } from \"../store/sections/actions\";\nimport { isNumber } from \"../helpers/number\";\n\nconst useWidgetSettings = (property, defaultValue) => {\n  const dispatch = useDispatch();\n  // Получаем секции\n  const sections = useSelector(({ sections }) => sections.present.sections);\n\n  // Получаем позицию выбранного виджета в массиве\n  const { sectionIndex, columnIndex, rowIndex } = useSelector(\n    ({ sections }) => sections.present.selectedWidget\n  );\n\n  // Если виджет не выбран то выводим undefined\n  if (!isNumber(sectionIndex)) return [{}, () => {}];\n\n  // Получаем данные виджета\n  const widget = sections[sectionIndex].columns[columnIndex][rowIndex];\n\n  let settings = {};\n\n  // Если указано конкретное свойство, возвращаем только его\n  if (widget && property) {\n    //console.log(\"widget.params\", widget.params);\n    settings = mutate.get(widget.params, property) || defaultValue;\n  } else if (widget) {\n    settings = widget.params;\n  }\n\n  // Записываем новые настройки\n  const setSettings = (params) => {\n    if (property) {\n      const newSettings = mutate.set(widget.params, property, params);\n      dispatch(changeWidget(newSettings));\n    } else {\n      dispatch(changeWidget(params));\n    }\n  };\n\n  return [settings, setSettings];\n};\n\nexport default useWidgetSettings;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst ButtonTag = (props) => {\n  return <Button {...props}>{props.text}</Button>;\n};\n\nexport default ButtonTag;\n","import React from \"react\";\n\nconst Divider = (props) => {\n  return (\n    <hr\n      style={{\n        borderTopWidth: parseInt(props.size) || 2,\n        borderTopColor: props.color,\n        breakAfter: props.breakAfter,\n      }}\n    />\n  );\n};\n\nexport default Divider;\n","import React from \"react\";\n\nconst Image = (props) => {\n  return <img alt={props.alt} src={props.src} width={props.width} />;\n};\n\nexport default Image;\n","import React from \"react\";\n\nconst Link = (props) => {\n  return (\n    <a\n      className={props.isButton ? \"btn btn-primary\" : \"\"}\n      href={props.url}\n      target={props.target}\n    >\n      {props.text}\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\n\nimport \"./news.scss\";\n\nconst News = (props) => {\n  console.log(\"News init\");\n  //const news = await axios.get(`/api/posts/${props.category}`).data;\n  const news = [\n    {\n      image: \"https://picsum.photos/seed/1/300/200\",\n      title: \"Новость номер 1\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n    {\n      image: \"https://picsum.photos/seed/2/300/200\",\n      title: \"Новость номер 2\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n    {\n      image: \"https://picsum.photos/seed/3/300/200\",\n      title: \"Новость номер 3\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n  ];\n\n  return news.map((item, index) => (\n    <div className=\"news\" key={index}>\n      <div className=\"news__image\">\n        <img src={item.image} alt={item.title} />\n      </div>\n      <div className=\"news__body\">\n        <h2 className=\"news__body-title\">{item.title}</h2>\n        <div className=\"news__body-text\">{item.text}</div>\n      </div>\n    </div>\n  ));\n};\n\nexport default News;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport axios from \"axios\";\n\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nconst Table = ({\n  source,\n  columns = [],\n  rows = [],\n  striped = false,\n  variant = \"light\",\n  bordered = false,\n  size = \"sm\",\n  hover = false,\n  borderless = false,\n}) => {\n  //const [header, setHeader] = useState(columns);\n  const [data, setData] = useState(rows);\n\n  const getData = useCallback(async () => {\n    if (source) {\n      const req = await axios(source);\n      console.log(\"req\", req);\n      setData(req.data);\n    }\n  }, [source]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  return columns.length > 0 ? (\n    <BootstrapTable\n      bootstrap4\n      size={size}\n      variant={variant}\n      striped={striped}\n      bordered={bordered}\n      hover={hover}\n      borderless={borderless}\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      pagination={paginationFactory()}\n    />\n  ) : (\n    \"Нет данных\"\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nimport \"tinymce/tinymce.min.js\";\nimport \"tinymce/icons/default\";\nimport \"tinymce/themes/silver\";\nimport \"tinymce/plugins/insertdatetime\";\nimport \"tinymce/plugins/table\";\nimport \"tinymce/plugins/autolink\";\nimport \"tinymce/plugins/code\";\n\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/skins/ui/oxide/content.inline.min.css\";\n\nconst WysiwygInlineControl = ({ value, onChange }) => {\n  const [text, setText] = useState(value);\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div\n      draggable\n      onDoubleClick={() => setEditable(true)}\n      onDragStart={(e) => {\n        if (editable) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }}\n    >\n      <Editor\n        value={text}\n        onEditorChange={(content) => setText(content)}\n        onBlur={() => onChange(text)}\n        inline={true}\n        disabled={!editable}\n        init={{\n          menubar: false,\n          contextmenu: false,\n          plugins: [\"autolink insertdatetime table code\"],\n          toolbar: `styleselect table insertdatetime | bold italic underline | align | forecolor | bullist numlist | outdent indent |\n           undo redo | removeformat code`,\n          table_toolbar: \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default WysiwygInlineControl;\n","import React from \"react\";\nimport useWidgetSettings from \"../../hooks/useWidgetSettings\";\nimport WysiwygInlineControl from \"../../components/painter/controls/WysiwygInlineControl\";\n\nconst Text = (props) => {\n  const [, setText] = useWidgetSettings(\"text\");\n\n  return <WysiwygInlineControl value={props.text} onChange={(text) => setText(text)} />;\n};\n\nexport default Text;\n"],"sourceRoot":""}