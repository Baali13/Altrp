{"version":3,"sources":["widgets/Table/sourceTypes.js","widgets/Table/api.js","widgets/Table/render.js","../node_modules/react-bootstrap/esm/InputGroup.js","widgets/Table/custom.js","widgets/Table/settings.js","hooks/useWidgetSettings.js","components/painter/controls/InputControl.js","components/painter/controls/ToggleControl.js"],"names":["sourceTypes","API","CUSTOM","RENDER","sourceTypesList","name","value","ApiTableSettings","useWidgetSettings","api","setApi","onChange","RenderTableSettings","columns","rows","setRows","variable","setVariable","handleChange","useCallback","row","mutate","set","map","key","length","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","CustomTableSettings","setColumns","useState","columnName","setColumnName","addColumn","addRow","e","preventDefault","formData","FormData","target","newRow","forEach","reset","removeColumn","filter","_","index","Form","Group","Label","FormControl","placeholder","onKeyPress","Button","variant","onClick","onSubmit","item","TableSettings","dataFrom","setDataFrom","striped","setStriped","bordered","setBordered","borderless","setBorderless","hover","setHover","setVariant","setSize","list","showSettings","property","defaultValue","dispatch","useDispatch","sections","useSelector","present","selectedWidget","sectionIndex","columnIndex","rowIndex","isNumber","widget","settings","get","params","newSettings","changeWidget","InputControl","options","Control","ToggleControl","Check","Input"],"mappings":"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","file":"static/js/9.eddb6de5.chunk.js","sourcesContent":["export const sourceTypes = {\n  API: \"api\",\n  CUSTOM: \"custom\",\n  RENDER: \"rendering\",\n};\n\nexport const sourceTypesList = [\n  { name: \"API\", value: sourceTypes.API },\n  { name: \"В ручную\", value: sourceTypes.CUSTOM },\n  { name: \"Для рендеринга\", value: sourceTypes.RENDER },\n];\n","import React from \"react\";\nimport InputControl from \"components/painter/controls/InputControl\";\nimport useWidgetSettings from \"hooks/useWidgetSettings\";\n\nconst ApiTableSettings = () => {\n  const [api, setApi] = useWidgetSettings(\n    \"api\",\n    \"https://regagro.herokuapp.com/animals\"\n  );\n  return <InputControl name=\"URL-адрес данных\" value={api} onChange={setApi} />;\n};\n\nexport default ApiTableSettings;\n","import React, { useCallback } from \"react\";\nimport InputControl from \"components/painter/controls/InputControl\";\nimport useWidgetSettings from \"hooks/useWidgetSettings\";\nimport mutate from \"dot-prop-immutable\";\n\nconst RenderTableSettings = () => {\n  const [columns] = useWidgetSettings(\"columns\", []);\n  const [rows, setRows] = useWidgetSettings(\"rows\", []);\n  const [variable, setVariable] = useWidgetSettings(\"variable\", \"\");\n\n  const handleChange = useCallback(\n    (name, value) => {\n      const row = mutate.set(rows, `0`, { ...rows[0], [name]: value });\n      setRows(row);\n    },\n    [rows, setRows]\n  );\n\n  return (\n    <>\n      <InputControl\n        name=\"Переменная цикла\"\n        value={variable}\n        onChange={setVariable}\n      />\n      {columns.map((name, key) => (\n        <InputControl\n          key={key}\n          name={name}\n          value={rows.length > 0 ? rows[0][name] : \"\"}\n          onChange={(value) => handleChange(name, value)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default RenderTableSettings;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React, { useState, useCallback } from \"react\";\nimport { Form, FormControl, Button, InputGroup } from \"react-bootstrap\";\n\nimport useWidgetSettings from \"hooks/useWidgetSettings\";\n\nconst CustomTableSettings = () => {\n  // Список колонок\n  const [columns, setColumns] = useWidgetSettings(\"columns\", []);\n  const [rows, setRows] = useWidgetSettings(\"rows\", []);\n\n  // Временное название новой колонки\n  const [columnName, setColumnName] = useState(\"\");\n\n  // Добавляем новую колонку\n  const addColumn = useCallback(() => {\n    setColumns([...columns, columnName]);\n    setColumnName(\"\");\n  }, [columnName, columns, setColumns]);\n\n  // Добавляем новую запись\n  const addRow = useCallback(\n    (e) => {\n      e.preventDefault();\n      const formData = new FormData(e.target);\n      let newRow = {};\n      formData.forEach((value, key) => {\n        newRow[key] = value;\n      });\n      setRows([...rows, newRow]);\n      e.target.reset();\n    },\n    [rows, setRows]\n  );\n\n  // Удаляем колонку\n  const removeColumn = useCallback(\n    (key) => {\n      setColumns(columns.filter((_, index) => index !== key));\n    },\n    [columns, setColumns]\n  );\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>Колонки</Form.Label>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Имя колонки\"\n            value={columnName}\n            onKeyPress={(e) => e.key === \"Enter\" && addColumn()}\n            onChange={(e) => setColumnName(e.target.value)}\n          />\n          <InputGroup.Append>\n            <Button variant=\"primary\" onClick={addColumn}>\n              +\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n      <Form onSubmit={addRow} className=\"mb-3\">\n        {columns.map((item, key) => (\n          <Form.Group key={key}>\n            <Form.Label>{item}</Form.Label>\n            <InputGroup>\n              <FormControl name={item} />\n              <InputGroup.Append>\n                <Button variant=\"danger\" onClick={() => removeColumn(key)}>\n                  -\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Group>\n        ))}\n        <Button size=\"sm\" variant=\"success\" type=\"submit\">\n          Добавить запись\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default CustomTableSettings;\n","import React from \"react\";\n\nimport SelectControl from \"components/painter/controls/SelectControl\";\nimport ToggleControl from \"components/painter/controls/ToggleControl\";\n\nimport ApiTableSettings from \"./api\";\nimport CustomTableSettings from \"./custom\";\nimport RenderTableSettings from \"./render\";\n\nimport useWidgetSettings from \"hooks/useWidgetSettings\";\n\nimport { sourceTypes, sourceTypesList } from \"./sourceTypes\";\n\nimport \"./table.scss\";\n\nconst TableSettings = () => {\n  const [dataFrom, setDataFrom] = useWidgetSettings(\"dataFrom\", sourceTypes.API);\n\n  const [striped, setStriped] = useWidgetSettings(\"striped\", false);\n  const [bordered, setBordered] = useWidgetSettings(\"bordered\", false);\n  const [borderless, setBorderless] = useWidgetSettings(\"borderless\", false);\n  const [hover, setHover] = useWidgetSettings(\"hover\", false);\n  const [variant, setVariant] = useWidgetSettings(\"variant\", \"\");\n  const [size, setSize] = useWidgetSettings(\"size\", \"\");\n\n  const showSettings = () => {\n    switch (dataFrom) {\n      case sourceTypes.API:\n        return <ApiTableSettings />;\n      case sourceTypes.CUSTOM:\n        return <CustomTableSettings />;\n      case sourceTypes.RENDER:\n        return <RenderTableSettings />;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <SelectControl\n        name=\"Источник данных\"\n        value={dataFrom}\n        onChange={setDataFrom}\n        list={sourceTypesList}\n      />\n      {showSettings()}\n      <SelectControl\n        name=\"Тема таблицы\"\n        value={variant}\n        onChange={setVariant}\n        list={[\n          { name: \"Светлая\", value: \"\" },\n          { name: \"Темная\", value: \"dark\" },\n        ]}\n      />\n      <SelectControl\n        name=\"Размер таблицы\"\n        value={size}\n        onChange={setSize}\n        list={[\n          { name: \"Обычный\", value: \"\" },\n          { name: \"Уменьшенный\", value: \"sm\" },\n        ]}\n      />\n      <ToggleControl name=\"Выделить все нечетные строки\" value={striped} onChange={setStriped} />\n      <ToggleControl name=\"Выделять строку при наведении\" value={hover} onChange={setHover} />\n      <ToggleControl name=\"Добавить вертикальные границы\" value={bordered} onChange={setBordered} />\n      <ToggleControl name=\"Убрать все границы\" value={borderless} onChange={setBorderless} />\n    </>\n  );\n};\n\nexport default TableSettings;\n","import mutate from \"dot-prop-immutable\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeWidget } from \"../store/sections/actions\";\nimport { isNumber } from \"../helpers/number\";\n\nconst useWidgetSettings = (property, defaultValue) => {\n  const dispatch = useDispatch();\n  // Получаем секции\n  const sections = useSelector(({ sections }) => sections.present.sections);\n\n  // Получаем позицию выбранного виджета в массиве\n  const { sectionIndex, columnIndex, rowIndex } = useSelector(\n    ({ sections }) => sections.present.selectedWidget\n  );\n\n  // Если виджет не выбран то выводим undefined\n  if (!isNumber(sectionIndex)) return [{}, () => {}];\n\n  // Получаем данные виджета\n  const widget = sections[sectionIndex].columns[columnIndex][rowIndex];\n\n  let settings = {};\n\n  // Если указано конкретное свойство, возвращаем только его\n  if (widget && property) {\n    //console.log(\"widget.params\", widget.params);\n    settings = mutate.get(widget.params, property) || defaultValue;\n  } else if (widget) {\n    settings = widget.params;\n  }\n\n  // Записываем новые настройки\n  const setSettings = (params) => {\n    if (property) {\n      const newSettings = mutate.set(widget.params, property, params);\n      dispatch(changeWidget(newSettings));\n    } else {\n      dispatch(changeWidget(params));\n    }\n  };\n\n  return [settings, setSettings];\n};\n\nexport default useWidgetSettings;\n","import React, { useCallback } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst InputControl = ({ name, value, onChange, options = {} }) => {\n  const handleChange = useCallback(\n    (e) => {\n      onChange(e.target.value);\n    },\n    [onChange]\n  );\n\n  return (\n    <Form.Group>\n      <Form.Label>{name}</Form.Label>\n      <Form.Control size=\"sm\" {...options} value={value} onChange={handleChange} />\n    </Form.Group>\n  );\n};\n\nexport default InputControl;\n","import React, { useCallback } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst ToggleControl = ({ name, value, onChange, options = {} }) => {\n  const handleChange = useCallback(\n    (e) => {\n      onChange(!value);\n    },\n    [onChange, value]\n  );\n\n  return (\n    <Form.Group>\n      <Form.Check {...options}>\n        <Form.Check.Label>\n          <Form.Check.Input type=\"checkbox\" value={value} onChange={handleChange} /> {name}\n        </Form.Check.Label>\n      </Form.Check>\n    </Form.Group>\n  );\n};\n\nexport default ToggleControl;\n"],"sourceRoot":""}