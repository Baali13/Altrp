{"version":3,"sources":["widgets/Button/index.js","widgets/DText/index.js","widgets/Divider/index.js","widgets/Image/index.js","widgets/Link/index.js","widgets/News/index.js","widgets/Table/index.js","components/painter/controls/WysiwygInlineControl.js","widgets/Text/index.js","widgets/index.js","hooks/useWidgetSettings.js","../../../../node_modules/tinymce/plugins/code/index.js","../../../../node_modules/tinymce/plugins/code/plugin.js"],"names":["ButtonTag","props","text","DText","model","console","log","dangerouslySetInnerHTML","__html","vars","item","value","key","replace","setDynamicText","Divider","style","borderTopWidth","parseInt","size","borderTopColor","color","breakAfter","Image","alt","src","width","Link","className","isButton","href","url","target","News","image","title","map","index","Table","source","columns","rows","striped","variant","bordered","hover","borderless","useState","data","setData","getData","useCallback","a","axios","req","useEffect","length","bootstrap4","keyField","WysiwygInlineControl","onChange","setText","editable","setEditable","draggable","onDoubleClick","onDragStart","e","stopPropagation","preventDefault","onEditorChange","content","onBlur","inline","disabled","init","menubar","contextmenu","plugins","toolbar","table_toolbar","Text","useWidgetSettings","property","defaultValue","dispatch","useDispatch","sections","useSelector","present","selectedWidget","sectionIndex","columnIndex","rowIndex","isNumber","widget","settings","mutate","get","params","newSettings","set","changeWidget","require","global","tinymce","util","Tools","resolve","open","editor","editorContent","getContent","source_view","windowManager","body","type","items","name","buttons","primary","initialData","code","onSubmit","api","html","focus","undoManager","transact","setContent","selection","setCursorLocation","nodeChanged","close","add","addCommand","register","ui","registry","addButton","icon","tooltip","onAction","addMenuItem","register$1"],"mappings":"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","file":"static/js/10.402d8c28.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst ButtonTag = (props) => {\n  return <Button {...props}>{props.text}</Button>;\n};\n\nexport default ButtonTag;\n","import React from \"react\";\n\nconst DText = ({ text, model }) => {\n  console.log(\"model :>> \", model);\n\n  const setDynamicText = (text) => {\n    const vars = model?.item?.value || {};\n    for (const key in vars) {\n      text = text.replace(`{{${key}}}`, vars[key]);\n    }\n    return text;\n  };\n\n  return <div dangerouslySetInnerHTML={{ __html: setDynamicText(text) }} />;\n};\n\nexport default DText;\n","import React from \"react\";\n\nconst Divider = (props) => {\n  return (\n    <hr\n      style={{\n        borderTopWidth: parseInt(props.size) || 2,\n        borderTopColor: props.color,\n        breakAfter: props.breakAfter,\n      }}\n    />\n  );\n};\n\nexport default Divider;\n","import React from \"react\";\n\nconst Image = (props) => {\n  return <img alt={props.alt} src={props.src} width={props.width} />;\n};\n\nexport default Image;\n","import React from \"react\";\n\nconst Link = (props) => {\n  return (\n    <a\n      className={props.isButton ? \"btn btn-primary\" : \"\"}\n      href={props.url}\n      target={props.target}\n    >\n      {props.text}\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\n\nimport \"./news.scss\";\n\nconst News = (props) => {\n  console.log(\"News init\");\n  //const news = await axios.get(`/api/posts/${props.category}`).data;\n  const news = [\n    {\n      image: \"https://picsum.photos/seed/1/300/200\",\n      title: \"Новость номер 1\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n    {\n      image: \"https://picsum.photos/seed/2/300/200\",\n      title: \"Новость номер 2\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n    {\n      image: \"https://picsum.photos/seed/3/300/200\",\n      title: \"Новость номер 3\",\n      text:\n        \"Текст новости почти без форматирования и тэгов! <b>Но они понадобяться.</b>\",\n    },\n  ];\n\n  return news.map((item, index) => (\n    <div className=\"news\" key={index}>\n      <div className=\"news__image\">\n        <img src={item.image} alt={item.title} />\n      </div>\n      <div className=\"news__body\">\n        <h2 className=\"news__body-title\">{item.title}</h2>\n        <div className=\"news__body-text\">{item.text}</div>\n      </div>\n    </div>\n  ));\n};\n\nexport default News;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport axios from \"axios\";\n\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nconst Table = ({\n  source,\n  columns = [],\n  rows = [],\n  striped = false,\n  variant = \"light\",\n  bordered = false,\n  size = \"sm\",\n  hover = false,\n  borderless = false,\n}) => {\n  const [data, setData] = useState(rows);\n\n  const getData = useCallback(async () => {\n    if (source) {\n      const req = await axios(source);\n      setData(req.data);\n    }\n  }, [source]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  return columns.length > 0 ? (\n    <BootstrapTable\n      bootstrap4\n      size={size}\n      variant={variant}\n      striped={striped}\n      bordered={bordered}\n      hover={hover}\n      borderless={borderless}\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n    />\n  ) : (\n    \"Нет данных\"\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nimport \"tinymce/tinymce.min.js\";\nimport \"tinymce/icons/default\";\nimport \"tinymce/themes/silver\";\nimport \"tinymce/plugins/insertdatetime\";\nimport \"tinymce/plugins/table\";\nimport \"tinymce/plugins/autolink\";\nimport \"tinymce/plugins/code\";\n\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/skins/ui/oxide/content.inline.min.css\";\n\nconst WysiwygInlineControl = ({ value, onChange }) => {\n  const [text, setText] = useState(value);\n  const [editable, setEditable] = useState(false);\n\n  return (\n    <div\n      draggable\n      onDoubleClick={() => setEditable(true)}\n      onDragStart={(e) => {\n        if (editable) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }}\n    >\n      <Editor\n        value={text}\n        onEditorChange={(content) => setText(content)}\n        onBlur={() => onChange(text)}\n        inline={true}\n        disabled={!editable}\n        init={{\n          menubar: false,\n          contextmenu: false,\n          plugins: [\"autolink insertdatetime table code\"],\n          toolbar: `styleselect table insertdatetime | bold italic underline | align | forecolor | bullist numlist | outdent indent |\n           undo redo | removeformat code`,\n          table_toolbar: \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default WysiwygInlineControl;\n","import React from \"react\";\nimport useWidgetSettings from \"../../hooks/useWidgetSettings\";\nimport WysiwygInlineControl from \"../../components/painter/controls/WysiwygInlineControl\";\n\nconst Text = (props) => {\n  const [, setText] = useWidgetSettings(\"text\");\n\n  return <WysiwygInlineControl value={props.text} onChange={(text) => setText(text)} />;\n};\n\nexport default Text;\n","export { default as Button } from \"./Button/index\";\nexport { default as Divider } from \"./Divider/index\";\nexport { default as Image } from \"./Image/index\";\nexport { default as Link } from \"./Link/index\";\nexport { default as News } from \"./News/index\";\nexport { default as Table } from \"./Table/index\";\nexport { default as Text } from \"./Text/index\";\nexport { default as DText } from \"./DText/index\";\n","import mutate from \"dot-prop-immutable\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeWidget } from \"../store/sections/actions\";\nimport { isNumber } from \"../helpers/number\";\n\nconst useWidgetSettings = (property, defaultValue) => {\n  const dispatch = useDispatch();\n  // Получаем секции\n  const sections = useSelector(({ sections }) => sections.present.sections);\n\n  // Получаем позицию выбранного виджета в массиве\n  const { sectionIndex, columnIndex, rowIndex } = useSelector(\n    ({ sections }) => sections.present.selectedWidget\n  );\n\n  // Если виджет не выбран то выводим undefined\n  if (!isNumber(sectionIndex)) return [{}, () => {}];\n\n  // Получаем данные виджета\n  const widget = sections[sectionIndex].columns[columnIndex][rowIndex];\n\n  let settings = {};\n\n  // Если указано конкретное свойство, возвращаем только его\n  if (widget && property) {\n    //console.log(\"widget.params\", widget.params);\n    settings = mutate.get(widget.params, property) || defaultValue;\n  } else if (widget) {\n    settings = widget.params;\n  }\n\n  // Записываем новые настройки\n  const setSettings = (params) => {\n    if (property) {\n      const newSettings = mutate.set(widget.params, property, params);\n      dispatch(changeWidget(newSettings));\n    } else {\n      dispatch(changeWidget(params));\n    }\n  };\n\n  return [settings, setSettings];\n};\n\nexport default useWidgetSettings;\n","// Exports the \"code\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/code')\n//   ES2015:\n//     import 'tinymce/plugins/code'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.4.1 (2020-07-08)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var setContent = function (editor, html) {\n      editor.focus();\n      editor.undoManager.transact(function () {\n        editor.setContent(html);\n      });\n      editor.selection.setCursorLocation();\n      editor.nodeChanged();\n    };\n    var getContent = function (editor) {\n      return editor.getContent({ source_view: true });\n    };\n\n    var open = function (editor) {\n      var editorContent = getContent(editor);\n      editor.windowManager.open({\n        title: 'Source Code',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'textarea',\n              name: 'code'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { code: editorContent },\n        onSubmit: function (api) {\n          setContent(editor, api.getData().code);\n          api.close();\n        }\n      });\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceCodeEditor', function () {\n        open(editor);\n      });\n    };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('code', {\n        icon: 'sourcecode',\n        tooltip: 'Source code',\n        onAction: function () {\n          return open(editor);\n        }\n      });\n      editor.ui.registry.addMenuItem('code', {\n        icon: 'sourcecode',\n        text: 'Source code',\n        onAction: function () {\n          return open(editor);\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('code', function (editor) {\n        register(editor);\n        register$1(editor);\n        return {};\n      });\n    }\n\n    Plugin();\n\n}());\n"],"sourceRoot":""}