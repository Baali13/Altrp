{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/AltrpAction.js","webpack:///./resources/modules/front-app/src/js/classes/modules/ActionsManager.js","webpack:///./resources/modules/front-app/src/js/helpers/sendEmail.js"],"names":["window","altrpHelpers","altrpLogin","altrpLogout","dataFromTable","dataToCSV","dataToXML","elementsToPdf","getAppContext","getComponentByElementId","getHTMLElementById","parseParamsFromString","getDataByPath","printElements","replaceContentWithData","scrollToElement","setDataByPath","dataToXLS","delay","altrpCompare","Resource","getWrapperHTMLElementByElement","AltrpAction","data","widgetId","element","setProperty","init","getProperty","getId","formId","indexOf","getCurrentModel","getData","formURL","getElementId","getElement","name","defaultValue","value","_","isString","getType","getFormURL","form","formsManager","registerForm","getFormId","type","result","success","confirmText","confirm","message","doActionForm","doActionDelay","doActionEmail","doActionRedirect","doActionToggleElements","doActionTogglePopup","doActionPrintPage","doActionPrintElements","doActionScrollToElement","doActionScrollToTop","doActionScrollToBottom","doActionTrigger","doActionPageToPDF","doActionElementsToPDF","doActionDataToCSV","doActionTableToCSV","doActionTableToXML","doActionTableToXLS","doActionLogin","doActionLogout","doActionSetData","doActionUpdateCurrentDatasources","doActionUpdateCurrentModel","doActionFormsManipulate","doActionCustomCode","doActionPlaySound","doActionCondition","doActionVIToggle","doActionOAuth","alertText","alert","default","customHeaders","isArray","get","bulk","customRoute","assign","bulkRequests","map","item","idx","url","submit","Promise","all","res","console","error","forEach","deleteFormById","_data","isEmpty","formOptions","dynamicURL","response","URL","frontAppRouter","history","goBack","innerRedirect","push","location","back","href","IDs","split","id","component","toggleElementDisplay","loadPopups","appStore","dispatch","togglePopup","print","elementsToPrint","elementId","trim","getStylesHTMLElement","stylesElement","document","head","scroller","mainScrollbars","querySelector","scrollTop","scrollTo","top","left","behavior","routeContent","getElementById","offsetHeight","filename","elements","all_sources_path","table","formattedData","each","row","Object","values","rawTemplateData","parsedTemplateData","reduce","keyValuePair","templateName","blob","link","createElement","setAttribute","createObjectURL","body","appendChild","click","removeChild","fields","field","fieldValidate","paths","path","setType","count","length","replace","currentValue","v","nextIndex","isNaN","Number","isObject","items","i","listPath","list","filter","_item","change","elementRef","current","selectAll","clearValue","code","eval","modelName","currentPage","model_name","modelId","model_data","route","model","oldModel","getState","currentModel","altrpModelUpdated","isEqual","changeCurrentModel","aliases","alias","allDataSources","dataStorageUpdater","dataSourcesToUpdate","dataSource","updateCurrent","action","isFunction","fireAction","templateGUID","sendEmail","getReplacedProperty","duration","loop","playSound","compare","conditionLeft","conditionRight","loadVIPlugin","HTMLWrapper","OIDC","WebStorageStateStore","UserManager","authority","OidcClient","altrpLibs","method","settings","client_id","redirect_uri","post_logout_redirect_uri","response_type","scope","automaticSilentRenew","userStore","store","localStorage","filterProtocolClaims","loadUserInfo","monitorSession","checkSessionInterval","_manager","log","manager","AltrpModel","isEditor","ActionsManager","actions","eventName","context","a","unsetProperty","preventedActions","errors","doAction","actionsManager","emailTemplateGUID","subject","from","to","attachments","templateLoader","loadTemplate","template","changeCurrentEmailTemplate","html","emailTemplatesRenderer","emailTemplate","cloneNode","style","display","outerHTML","resource","post"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,2BAqBIA,MAAM,CAACC,YArBX;AAAA,IACEC,UADF,wBACEA,UADF;AAAA,IAEEC,WAFF,wBAEEA,WAFF;AAAA,IAGEC,aAHF,wBAGEA,aAHF;AAAA,IAIEC,SAJF,wBAIEA,SAJF;AAAA,IAKEC,SALF,wBAKEA,SALF;AAAA,IAMEC,aANF,wBAMEA,aANF;AAAA,IAOEC,aAPF,wBAOEA,aAPF;AAAA,IAQEC,uBARF,wBAQEA,uBARF;AAAA,IASEC,kBATF,wBASEA,kBATF;AAAA,IAUEC,qBAVF,wBAUEA,qBAVF;AAAA,IAWEC,aAXF,wBAWEA,aAXF;AAAA,IAYEC,aAZF,wBAYEA,aAZF;AAAA,IAaEC,sBAbF,wBAaEA,sBAbF;AAAA,IAcEC,eAdF,wBAcEA,eAdF;AAAA,IAeEC,aAfF,wBAeEA,aAfF;AAAA,IAgBEC,SAhBF,wBAgBEA,SAhBF;AAAA,IAiBEC,KAjBF,wBAiBEA,KAjBF;AAAA,IAkBEC,YAlBF,wBAkBEA,YAlBF;AAAA,IAmBEC,QAnBF,wBAmBEA,QAnBF;AAAA,IAoBEC,8BApBF,wBAoBEA,8BApBF,C,CAuBA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;IACMC,W;;;;;AACJ,uBAAYC,IAAZ,EAAkBC,QAAlB,EAA4BC,OAA5B,EAAqC;AAAA;;AAAA;;AACnC,8BAAMF,IAAN;;AACA,UAAKG,WAAL,CAAiB,WAAjB,EAA8BF,QAA9B;;AACA,UAAKE,WAAL,CAAiB,UAAjB,EAA6BD,OAA7B;;AACA,UAAKE,IAAL;;AAJmC;AAKpC;AAED;AACF;AACA;AACA;;;;;WACE,wBAAe;AACb,aAAO,KAAKC,WAAL,CAAiB,UAAjB,EAA6BC,KAA7B,EAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,qBAAY;AACV,UAAIC,MAAM,GAAG,KAAKF,WAAL,CAAiB,SAAjB,CAAb;;AACA,UAAI,CAACE,MAAL,EAAa;AACX,eAAOA,MAAP;AACD;;AACD,UAAIA,MAAM,CAACC,OAAP,CAAe,IAAf,MAAyB,CAAC,CAA9B,EAAiC;AAC/BD,cAAM,GAAGhB,sBAAsB,CAACgB,MAAD,EAAS,KAAKE,eAAL,GAAuBC,OAAvB,EAAT,CAA/B;AACD;;AACD,aAAOH,MAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,sBAAa;AACX,UAAII,OAAO,GAAG,KAAKN,WAAL,CAAiB,UAAjB,CAAd;;AACA,UAAI,CAACM,OAAL,EAAc;AACZ,eAAOA,OAAP;AACD;;AACD,UAAIA,OAAO,CAACH,OAAR,CAAgB,IAAhB,MAA0B,CAAC,CAA/B,EAAkC;AAChCG,eAAO,GAAGpB,sBAAsB,CAC9BoB,OAD8B,EAE9B,KAAKF,eAAL,GAAuBC,OAAvB,EAF8B,CAAhC;AAID;;AACD,aAAOC,OAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,+BAAsB;AACpB,aAAOzB,uBAAuB,CAAC,KAAK0B,YAAL,EAAD,CAA9B;AACD;AAED;AACF;AACA;AACA;;;;WACE,sBAAa;AACX,aAAO,KAAKP,WAAL,CAAiB,UAAjB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,2BAAkB;AAChB,UAAMH,OAAO,GAAG,KAAKW,UAAL,EAAhB;AACA,aAAOX,OAAO,CAACO,eAAR,EAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,6BAAoBK,IAApB,EAA6C;AAAA,UAAnBC,YAAmB,uEAAJ,EAAI;AAC3C,UAAIC,KAAK,GAAG,KAAKX,WAAL,CAAiBS,IAAjB,EAAuBC,YAAvB,CAAZ;;AACA,UAAIE,CAAC,CAACC,QAAF,CAAWF,KAAX,CAAJ,EAAuB;AACrBA,aAAK,GAAGzB,sBAAsB,CAACyB,KAAD,EAAQ,KAAKP,eAAL,GAAuBC,OAAvB,EAAR,CAA9B;AACD;;AACD,aAAOM,KAAP;AACD;AAED;AACF;AACA;;;;;sLACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACU,KAAKG,OAAL,EADV;AAAA,gDAES,MAFT,uBA0BS,OA1BT;AAAA;;AAAA;AAAA,oBAGW,KAAKC,UAAL,EAHX;AAAA;AAAA;AAAA;;AAIQ,qBAAKjB,WAAL,CAAiB,OAAjB,EAA0B,IAA1B;AAJR;;AAAA;AAAA;;AAAA;AA2BYkB,oBA3BZ,GA2BmBC,YAAY,CAACC,YAAb,CACX,KAAKC,SAAL,EADW,EAEX,OAFW,EAGX,MAHW,CA3BnB;AAgCM,qBAAKrB,WAAL,CAAiB,OAAjB,EAA0BkB,IAA1B;;AAhCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAqCA;AACF;AACA;AACA;;;;WACE,mBAAU;AACR,aAAO,KAAKhB,WAAL,CAAiB,MAAjB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,iBAAQoB,IAAR,EAAc;AACZ,aAAO,KAAKtB,WAAL,CAAiB,MAAjB,EAAyBsB,IAAzB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;;0LACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,sBADN,GACe;AACXC,yBAAO,EAAE;AADE,iBADf;AAIMC,2BAJN,GAIoB,KAAKvB,WAAL,CAAiB,SAAjB,CAJpB;AAKEuB,2BAAW,GAAGrC,sBAAsB,CAACqC,WAAD,EAAc,KAAKnB,eAAL,GAAuBC,OAAvB,EAAd,CAApC;;AALF,sBAOMkB,WAAW,IAAI,CAACC,OAAO,CAACD,WAAD,CAP7B;AAAA;AAAA;AAAA;;AAAA,kDAQW;AACLD,yBAAO,EAAE,KADJ;AAELG,yBAAO,EAAE;AAFJ,iBARX;;AAAA;AAAA,+BAaU,KAAKX,OAAL,EAbV;AAAA,kDAcS,MAdT,wBAkBS,OAlBT,yBAsBS,OAtBT,yBA0BS,UA1BT,yBA8BS,gBA9BT,yBAkCS,cAlCT,yBAsCS,YAtCT,yBA0CS,gBA1CT,yBA8CS,mBA9CT,yBAkDS,eAlDT,yBAsDS,kBAtDT,yBA0DS,SA1DT,yBA8DS,aA9DT,yBAkES,iBAlET,yBAsES,aAtET,yBA0ES,cA1ET,yBA8ES,cA9ET,yBAkFS,cAlFT,yBAqFS,OArFT,yBAyFS,QAzFT,yBA6FS,UA7FT,yBAiGS,4BAjGT,yBAqGS,sBArGT,yBAyGS,kBAzGT,0BA6GS,aA7GT,0BAiHS,YAjHT,0BAqHS,WArHT,0BAyHS,WAzHT,0BA6HS,OA7HT;AAAA;;AAAA;AAAA;AAAA,uBAeqB,KAAKY,YAAL,EAfrB;;AAAA;AAeML,sBAfN;AAAA;;AAAA;AAAA;AAAA,uBAmBqB,KAAKM,aAAL,EAnBrB;;AAAA;AAmBMN,sBAnBN;AAAA;;AAAA;AAAA;AAAA,uBAuBqB,KAAKO,aAAL,EAvBrB;;AAAA;AAuBMP,sBAvBN;AAAA;;AAAA;AAAA;AAAA,uBA2BqB,KAAKQ,gBAAL,EA3BrB;;AAAA;AA2BMR,sBA3BN;AAAA;;AAAA;AAAA;AAAA,uBA+BqB,KAAKS,sBAAL,EA/BrB;;AAAA;AA+BMT,sBA/BN;AAAA;;AAAA;AAAA;AAAA,uBAmCqB,KAAKU,mBAAL,EAnCrB;;AAAA;AAmCMV,sBAnCN;AAAA;;AAAA;AAAA;AAAA,uBAuCqB,KAAKW,iBAAL,EAvCrB;;AAAA;AAuCMX,sBAvCN;AAAA;;AAAA;AAAA;AAAA,uBA2CqB,KAAKY,qBAAL,EA3CrB;;AAAA;AA2CMZ,sBA3CN;AAAA;;AAAA;AAAA;AAAA,uBA+CqB,KAAKa,uBAAL,EA/CrB;;AAAA;AA+CMb,sBA/CN;AAAA;;AAAA;AAAA;AAAA,uBAmDqB,KAAKc,mBAAL,EAnDrB;;AAAA;AAmDMd,sBAnDN;AAAA;;AAAA;AAAA;AAAA,uBAuDqB,KAAKe,sBAAL,EAvDrB;;AAAA;AAuDMf,sBAvDN;AAAA;;AAAA;AAAA;AAAA,uBA2DqB,KAAKgB,eAAL,EA3DrB;;AAAA;AA2DMhB,sBA3DN;AAAA;;AAAA;AAAA;AAAA,uBA+DqB,KAAKiB,iBAAL,EA/DrB;;AAAA;AA+DMjB,sBA/DN;AAAA;;AAAA;AAAA;AAAA,uBAmEqB,KAAKkB,qBAAL,EAnErB;;AAAA;AAmEMlB,sBAnEN;AAAA;;AAAA;AAAA;AAAA,uBAuEqB,KAAKmB,iBAAL,EAvErB;;AAAA;AAuEMnB,sBAvEN;AAAA;;AAAA;AAAA;AAAA,uBA2EqB,KAAKoB,kBAAL,EA3ErB;;AAAA;AA2EMpB,sBA3EN;AAAA;;AAAA;AAAA;AAAA,uBA+EqB,KAAKqB,kBAAL,EA/ErB;;AAAA;AA+EMrB,sBA/EN;AAAA;;AAAA;AAAA;AAAA,uBAmFqB,KAAKsB,kBAAL,EAnFrB;;AAAA;AAmFMtB,sBAnFN;AAAA;;AAAA;AAAA;AAAA,uBAsFqB,KAAKuB,aAAL,EAtFrB;;AAAA;AAsFMvB,sBAtFN;AAAA;;AAAA;AAAA;AAAA,uBA0FqB,KAAKwB,cAAL,EA1FrB;;AAAA;AA0FMxB,sBA1FN;AAAA;;AAAA;AAAA;AAAA,uBA8FqB,KAAKyB,eAAL,EA9FrB;;AAAA;AA8FMzB,sBA9FN;AAAA;;AAAA;AAAA;AAAA,uBAkGqB,KAAK0B,gCAAL,EAlGrB;;AAAA;AAkGM1B,sBAlGN;AAAA;;AAAA;AAAA;AAAA,uBAsGqB,KAAK2B,0BAAL,EAtGrB;;AAAA;AAsGM3B,sBAtGN;AAAA;;AAAA;AAAA;AAAA,uBA0GqB,KAAK4B,uBAAL,EA1GrB;;AAAA;AA0GM5B,sBA1GN;AAAA;;AAAA;AAAA;AAAA,uBA8GqB,KAAK6B,kBAAL,EA9GrB;;AAAA;AA8GM7B,sBA9GN;AAAA;;AAAA;AAAA;AAAA,uBAkHqB,KAAK8B,iBAAL,EAlHrB;;AAAA;AAkHM9B,sBAlHN;AAAA;;AAAA;AAAA;AAAA,uBAsHqB,KAAK+B,iBAAL,EAtHrB;;AAAA;AAsHM/B,sBAtHN;AAAA;;AAAA;AAAA;AAAA,uBA0HqB,KAAKgC,gBAAL,EA1HrB;;AAAA;AA0HMhC,sBA1HN;AAAA;;AAAA;AAAA;AAAA,uBA8HqB,KAAKiC,aAAL,EA9HrB;;AAAA;AA8HMjC,sBA9HN;AAAA;;AAAA;AAmIMkC,yBAnIN,GAmIkB,EAnIlB;;AAoIE,oBAAIlC,MAAM,CAACC,OAAX,EAAoB;AAClBiC,2BAAS,GAAG,KAAKvD,WAAL,CAAiB,OAAjB,CAAZ;AACD,iBAFD,MAEO;AACLuD,2BAAS,GAAG,KAAKvD,WAAL,CAAiB,QAAjB,CAAZ;AACD;;AACD,oBAAIuD,SAAJ,EAAe;AACbA,2BAAS,GAAGrE,sBAAsB,CAACqE,SAAD,EAAY,KAAKnD,eAAL,GAAuBC,OAAvB,EAAZ,CAAlC;AACAmD,uBAAK,CAACD,SAAD,CAAL;AACD;;AA5IH,kDA6ISlC,MA7IT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAgJA;AACF;AACA;AACA;;;;;8LACE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQU,wJARV;;AAAA;AAOQJ,4BAPR,kBASIwC,OATJ;AAWM9D,oBAXN,GAWa,IAXb;AAYM+D,6BAZN,GAYsB,IAZtB;;AAaE,oBAAI,KAAK1D,WAAL,CAAiB,gBAAjB,CAAJ,EAAwC;AACtC0D,+BAAa,GAAG3E,qBAAqB,CACnC,KAAKiB,WAAL,CAAiB,gBAAjB,CADmC,EAEnC,KAAKI,eAAL,EAFmC,CAArC;AAID;;AACD,oBAAI,KAAKJ,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BL,sBAAI,GAAGZ,qBAAqB,CAC1B,KAAKiB,WAAL,CAAiB,MAAjB,CAD0B,EAE1BpB,aAAa,CAAC,KAAKwB,eAAL,EAAD,CAFa,EAG1B,IAH0B,CAA5B,CAD4B,CAM5B;AACA;AACA;AACA;AACD;;AA7BH,qBA8BM,KAAKJ,WAAL,CAAiB,YAAjB,CA9BN;AAAA;AAAA;AAAA;;AAAA,sBAgCMY,CAAC,CAAC+C,OAAF,CAAU3E,aAAa,CAAC,KAAKgB,WAAL,CAAiB,WAAjB,CAAD,CAAvB,KACAY,CAAC,CAACgD,GAAF,CAAM5E,aAAa,CAAC,KAAKgB,WAAL,CAAiB,WAAjB,CAAD,CAAnB,EAAoD,QAApD,CAjCN;AAAA;AAAA;AAAA;;AAmCU6D,oBAnCV,GAmCiB7E,aAAa,CAAC,KAAKgB,WAAL,CAAiB,WAAjB,CAAD,CAnC9B;AAoCM;AACR;AACA;AACA;;AACcgB,qBAxCZ,GAwCmBC,YAAY,CAACC,YAAb,CACX,KAAKC,SAAL,EADW,EAEX,EAFW,EAGX,KAAKnB,WAAL,CAAiB,aAAjB,CAHW,EAIX;AACE8D,6BAAW,EAAE;AADf,iBAJW,CAxCnB;AAgDMnE,oBAAI,GAAGiB,CAAC,CAACmD,MAAF,CAAS/C,KAAI,CAACX,OAAL,EAAT,EAAyBV,IAAzB,CAAP;AACIqE,4BAjDV,GAiDyBH,IAAI,CAACI,GAAL;AAAA,iMAAS,kBAAOC,IAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B,gCAAI,MAAI,CAACnE,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BL,kCAAI,GAAGZ,qBAAqB,CAC1B,MAAI,CAACiB,WAAL,CAAiB,MAAjB,CAD0B,EAE1BpB,aAAa,CAACsF,IAAD,CAFa,EAG1B,IAH0B,CAA5B;AAKD;;AACGE,+BARsB,GAQhB,MAAI,CAACpE,WAAL,CAAiB,UAAjB,CARgB;AAS1BoE,+BAAG,GAAGlF,sBAAsB,CAACkF,GAAD,EAAMF,IAAN,CAA5B;AACMlD,gCAVoB,GAUbC,YAAY,CAACC,YAAb,CACX,MAAI,CAACC,SAAL,KAAmBgD,GADR,EAEX,EAFW,EAGX,MAAI,CAACnE,WAAL,CAAiB,aAAjB,CAHW,EAIX;AACE8D,yCAAW,EAAEM;AADf,6BAJW,CAVa;AAAA;AAAA,mCAkBbpD,IAAI,CAACqD,MAAL,CAAY,EAAZ,EAAgB,EAAhB,EAAoB1E,IAApB,EAA0B+D,aAA1B,CAlBa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAT;;AAAA;AAAA;AAAA;AAAA,oBAjDzB;AAAA;AAAA;AAAA,uBAsEwBY,OAAO,CAACC,GAAR,CAAYP,YAAZ,CAtExB;;AAAA;AAsEYQ,mBAtEZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwEQC,uBAAO,CAACC,KAAR;AACAb,oBAAI,CAACc,OAAL,CAAa,UAACT,IAAD,EAAOC,GAAP,EAAe;AAC1BlD,8BAAY,CAAC2D,cAAb,CAA4B,MAAI,CAACzD,SAAL,KAAmBgD,GAA/C;AACD,iBAFD;AAzER,kDA4Ee;AAAC7C,yBAAO,EAAE;AAAV,iBA5Ef;;AAAA;AA8EMuC,oBAAI,CAACc,OAAL,CAAa,UAACT,IAAD,EAAOC,GAAP,EAAe;AAC1BlD,8BAAY,CAAC2D,cAAb,CAA4B,MAAI,CAACzD,SAAL,KAAmBgD,GAA/C;AACD,iBAFD;;AA9EN;AAAA,kDAmFW;AAAC7C,yBAAO,EAAE;AAAV,iBAnFX;;AAAA;AAqFE,oBAAI,KAAKtB,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AACxB6E,uBADwB,GAChB7F,aAAa,CAAC,KAAKgB,WAAL,CAAiB,MAAjB,CAAD,EAA2B,EAA3B,CADG;;AAE5B,sBAAI,CAACY,CAAC,CAACkE,OAAF,CAAUD,KAAV,CAAL,EAAuB;AACrBlF,wBAAI,GAAGiB,CAAC,CAACmD,MAAF,CAASc,KAAT,EAAgBlF,IAAhB,CAAP;AACD;AACF;AACD;AACJ;AACA;AACA;AACI;;;AA/FF,oBAgGO,KAAKoB,UAAL,EAhGP;AAAA;AAAA;AAAA;;AAiGI,qBAAKjB,WAAL,CAAiB,OAAjB,EAA0B,IAA1B;AAjGJ,kDAkGW;AACLwB,yBAAO,EAAE;AADJ,iBAlGX;;AAAA;AAsGQyD,2BAtGR,GAsGsB;AAClBC,4BAAU,EAAE,IADM;AAElBlB,6BAAW,EAAE,KAAK/C,UAAL;AAFK,iBAtGtB;AA0GQC,oBA1GR,GA0GeC,YAAY,CAACC,YAAb,CACX,KAAKC,SAAL,EADW,EAEX,EAFW,EAGX,KAAKnB,WAAL,CAAiB,aAAjB,CAHW,EAIX+E,WAJW,CA1Gf;AAgHM1D,sBAhHN,GAgHe;AACXC,yBAAO,EAAE;AADE,iBAhHf;AAAA;AAAA;AAAA,uBAoH2BN,IAAI,CAACqD,MAAL,CAAY,EAAZ,EAAgB,EAAhB,EAAoB1E,IAApB,EAA0B+D,aAA1B,CApH3B;;AAAA;AAoHUuB,wBApHV;AAqHI5D,sBAAM,GAAGT,CAAC,CAACmD,MAAF,CAAS1C,MAAT,EAAiB4D,QAAjB,CAAT;AArHJ;AAAA;;AAAA;AAAA;AAAA;AAuHIR,uBAAO,CAACC,KAAR;AACArD,sBAAM,CAACqD,KAAP;AACArD,sBAAM,CAACC,OAAP,GAAiB,KAAjB;;AAzHJ;AAAA,kDA4HSD,MA5HT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA+HA;AACF;AACA;AACA;;;;;kMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACM6D,mBADN,GACY,KAAKnE,UAAL,EADZ;;AAAA,oBAEOmE,GAFP;AAAA;AAAA;AAAA;;AAAA,kDAGW;AACL5D,yBAAO,EAAE;AADJ,iBAHX;;AAAA;AAOE,oBAAIlD,MAAM,CAAC+G,cAAX,EAA2B;AACzB,sBAAI,KAAKnF,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BmF,kCAAc,CAACC,OAAf,CAAuBC,MAAvB;AACD,mBAFD,MAEO;AACDC,iCADC,GACe,CAAC,KAAKtF,WAAL,CAAiB,OAAjB,CADhB;;AAEL,wBAAIsF,aAAJ,EAAmB;AACjBH,oCAAc,CAACC,OAAf,CAAuBG,IAAvB,CAA4BL,GAA5B;AACD,qBAFD,MAEO;AACL9G,4BAAM,CAACoH,QAAP,CAAgBzB,MAAhB,CAAuBmB,GAAvB;AACD;AACF;AACF,iBAXD,MAWO;AACL,sBAAI,KAAKlF,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BoF,2BAAO,CAACK,IAAR;AACD,mBAFD,MAEO;AACLrH,0BAAM,CAACoH,QAAP,CAAgBE,IAAhB,GAAuBR,GAAvB;AACD;AACF;;AAxBH,kDAyBS;AACL5D,yBAAO,EAAE;AADJ,iBAzBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA8BA;AACF;AACA;AACA;;;;;wMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMqE,mBADN,GACY,KAAK3F,WAAL,CAAiB,cAAjB,CADZ;;AAAA,oBAGO2F,GAHP;AAAA;AAAA;AAAA;;AAAA,kDAIW;AAACrE,yBAAO,EAAE;AAAV,iBAJX;;AAAA;AAMEqE,mBAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AAEAD,mBAAG,CAAChB,OAAJ,CAAY,UAAAkB,EAAE,EAAI;AAChB,sBAAIC,SAAS,GAAGjH,uBAAuB,CAACgH,EAAD,CAAvC;;AACA,sBAAI,CAACC,SAAD,IAAc,CAACA,SAAS,CAACC,oBAA7B,EAAmD;AACjD;AACD;;AACDD,2BAAS,CAACC,oBAAV;AACD,iBAND;AARF,kDAeS;AACLzE,yBAAO,EAAE;AADJ,iBAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAoBA;AACF;AACA;AACA;;;;;qMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMuE,kBADN,GACW,KAAK7F,WAAL,CAAiB,UAAjB,CADX;;AAAA,oBAEO6F,EAFP;AAAA;AAAA;AAAA;;AAAA,kDAGW;AACLvE,yBAAO,EAAE;AADJ,iBAHX;;AAAA;AAAA,qBAOMlD,MAAM,CAAC,SAAD,CAPZ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQ8B,4KAR9B;;AAAA;AAQU4H,0BARV,kBAQuGvC,OARvG;AAAA;AAAA,uBASUuC,UAAU,EATpB;;AAAA;AAWEC,wBAAQ,CAACC,QAAT,CAAkBC,mFAAW,CAACN,EAAD,CAA7B;AAXF,kDAaS;AACLvE,yBAAO,EAAE;AADJ,iBAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAkBA;AACF;AACA;AACA;;;;;mMACE;AAAA;AAAA;AAAA;AAAA;AACElD,sBAAM,CAACgI,KAAP;AADF,kDAES;AACL9E,yBAAO,EAAE;AADJ,iBAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAOA;AACF;AACA;AACA;;;;;uMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMqE,mBADN,GACY,KAAK3F,WAAL,CAAiB,cAAjB,CADZ;;AAAA,oBAEO2F,GAFP;AAAA;AAAA;AAAA;;AAAA,kDAGW;AAACrE,yBAAO,EAAE;AAAV,iBAHX;;AAAA;AAKEqE,mBAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AACIS,+BANN,GAMwB,EANxB;AAOEV,mBAAG,CAAChB,OAAJ,CAAY,UAAA2B,SAAS,EAAI;AAAA;;AACvB,sBAAI,CAACA,SAAD,IAAc,CAACA,SAAS,CAACC,IAAV,EAAnB,EAAqC;AACnC;AACD;;AACDzH,oCAAkB,CAACwH,SAAS,CAACC,IAAV,EAAD,CAAlB,IACAF,eAAe,CAACd,IAAhB,CAAqBzG,kBAAkB,CAACwH,SAAD,CAAvC,CADA;;AAEA,+CAAIzH,uBAAuB,CAACyH,SAAS,CAACC,IAAV,EAAD,CAA3B,kDAAI,sBAA2CC,oBAA/C,EAAqE;AACnE,wBAAIC,aAAa,GAAG5H,uBAAuB,CACzCyH,SAAS,CAACC,IAAV,EADyC,CAAvB,CAElBC,oBAFkB,EAApB;;AAGA,wBAAIC,aAAJ,EAAmB;AACjBJ,qCAAe,CAACd,IAAhB,CAAqBkB,aAArB;AACD;AACF;AACF,iBAdD;;AAeA,oBAAI7F,CAAC,CAACgD,GAAF,CAAMxF,MAAN,EAAc,sCAAd,CAAJ,EAA2D;AACzDiI,iCAAe,CAACd,IAAhB,CACE3E,CAAC,CAACgD,GAAF,CAAMxF,MAAN,EAAc,sCAAd,CADF;AAGD;;AACDiI,+BAAe,CAACd,IAAhB,CAAqBmB,QAAQ,CAACC,IAA9B;AACA1H,6BAAa,CAACoH,eAAD,CAAb;AA5BF,kDA6BS;AACL/E,yBAAO,EAAE;AADJ,iBA7BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAkCA;AACF;AACA;AACA;;;;;yMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMgF,yBADN,GACkB,KAAKtG,WAAL,CAAiB,YAAjB,CADlB;;AAAA,oBAEOsG,SAFP;AAAA;AAAA;AAAA;;AAAA,mDAGW;AAAChF,yBAAO,EAAE;AAAV,iBAHX;;AAAA;AAKEgF,yBAAS,GAAGA,SAAS,CAACC,IAAV,EAAZ;AACM1G,uBANR,GAMkBf,kBAAkB,CAACwH,SAAD,CANpC;AAOMM,wBAPN,GAOiBxI,MAAM,CAACyI,cAPxB;;AAQE,oBAAI,CAACD,QAAL,EAAe;AACbA,0BAAQ,GAAGF,QAAQ,CAACI,aAAT,CAAuB,oBAAvB,CAAX;AACD;;AACD,oBAAI,CAACF,QAAL,EAAe;AACbA,0BAAQ,GAAGxI,MAAX;AACD;;AACD,oBAAIyB,OAAJ,EAAa;AACXV,iCAAe,CAACyH,QAAD,EAAW/G,OAAX,CAAf;AACD;;AAhBH,mDAiBS;AACLyB,yBAAO,EAAE;AADJ,iBAjBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAsBA;AACF;AACA;AACA;;;;;qMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMlD,MAAM,CAACyI,cADb;AAAA;AAAA;AAAA;;AAEIzI,sBAAM,CAACyI,cAAP,CAAsBE,SAAtB,CAAgC,CAAhC;AAFJ,mDAGW;AACLzF,yBAAO,EAAE;AADJ,iBAHX;;AAAA;AAOMsF,wBAPN,GAOiBF,QAAQ,CAACI,aAAT,CAAuB,oBAAvB,CAPjB;;AASE,oBAAI,CAACF,QAAL,EAAe;AACbA,0BAAQ,GAAGxI,MAAX;AACD;;AACDwI,wBAAQ,CAACI,QAAT,CAAkB;AAACC,qBAAG,EAAE,CAAN;AAASC,sBAAI,EAAE,CAAf;AAAkBC,0BAAQ,EAAE;AAA5B,iBAAlB;AAZF,mDAcS;AACL7F,yBAAO,EAAE;AADJ,iBAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAmBA;AACF;AACA;AACA;;;;;wMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ8F,4BADR,GACuBV,QAAQ,CAACW,cAAT,CAAwB,eAAxB,CADvB;;AAAA,oBAEOD,YAFP;AAAA;AAAA;AAAA;;AAAA,mDAGW;AACL9F,yBAAO,EAAE;AADJ,iBAHX;;AAAA;AAAA,qBAOMlD,MAAM,CAACyI,cAPb;AAAA;AAAA;AAAA;;AAQIzI,sBAAM,CAACyI,cAAP,CAAsBE,SAAtB,CAAgCK,YAAY,CAACE,YAA7C;AARJ,mDASW;AACLhG,yBAAO,EAAE;AADJ,iBATX;;AAAA;AAcMsF,wBAdN,GAciBF,QAAQ,CAACI,aAAT,CAAuB,oBAAvB,CAdjB;;AAgBE,oBAAI,CAACF,QAAL,EAAe;AACbA,0BAAQ,GAAGxI,MAAX;AACD;;AACDwI,wBAAQ,CAACI,QAAT,CAAkB;AAACE,sBAAI,EAAE,CAAP;AAAUD,qBAAG,EAAEP,QAAQ,CAACI,aAAT,CAAuB,gBAAvB,EAAyCQ,YAAxD;AAAsEH,0BAAQ,EAAE;AAAhF,iBAAlB;AAnBF,mDAoBS;AACL7F,yBAAO,EAAE;AADJ,iBApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAyBA;AACF;AACA;AACA;;;;;mMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMiG,wBADN,GACiBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CADvC;AAEQmH,wBAFR,GAEmB,EAFnB;AAIEA,wBAAQ,CAACjC,IAAT,CAAcmB,QAAQ,CAACW,cAAT,CAAwB,eAAxB,CAAd;AAJF;AAAA,uBAKe1I,aAAa,CAAC6I,QAAD,EAAWD,QAAX,CAL5B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAQA;AACF;AACA;AACA;;;;;uMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMA,wBADN,GACiBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CADvC;AAEQmH,wBAFR,GAEmB,EAFnB;AAGM7B,mBAHN,GAGY,KAAK3F,WAAL,CAAiB,cAAjB,CAHZ;;AAAA,oBAIO2F,GAJP;AAAA;AAAA;AAAA;;AAAA,mDAKW;AAACrE,yBAAO,EAAE;AAAV,iBALX;;AAAA;AAOEqE,mBAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AACAD,mBAAG,CAAChB,OAAJ,CAAY,UAAA2B,SAAS,EAAI;AACvB,sBAAI,CAACA,SAAD,IAAc,CAACA,SAAS,CAACC,IAAV,EAAnB,EAAqC;AACnC;AACD;;AACDzH,oCAAkB,CAACwH,SAAS,CAACC,IAAV,EAAD,CAAlB,IACAiB,QAAQ,CAACjC,IAAT,CAAczG,kBAAkB,CAACwH,SAAD,CAAhC,CADA;AAED,iBAND;AARF;AAAA,uBAee3H,aAAa,CAAC6I,QAAD,EAAWD,QAAX,CAf5B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAkBA;AACF;AACA;AACA;;;;;mMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACM5H,oBADN,GACaX,aAAa,CAAC,KAAKgB,WAAL,CAAiB,MAAjB,CAAD,CAD1B;AAEMuH,wBAFN,GAEiBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CAFvC;AAAA;AAAA;AAAA,uBAIiB5B,SAAS,CAACkB,IAAD,EAAO4H,QAAP,CAJ1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMI9C,uBAAO,CAACC,KAAR;AANJ,mDAOW;AAACpD,yBAAO,EAAE;AAAV,iBAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAWA;AACF;AACA;AACA;;;;;oMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMgF,yBADN,GACkB,KAAKtG,WAAL,CAAiB,YAAjB,CADlB;;AAAA,oBAEOsG,SAFP;AAAA;AAAA;AAAA;;AAAA,mDAGW;AAAChF,yBAAO,EAAE;AAAV,iBAHX;;AAAA;AAKEgF,yBAAS,GAAGA,SAAS,CAACC,IAAV,EAAZ;AACM1G,uBANR,GAMkBf,kBAAkB,CAACwH,SAAD,CANpC;;AAAA,oBAOOzG,OAPP;AAAA;AAAA;AAAA;;AAAA,mDAQW;AAACyB,yBAAO,EAAE;AAAV,iBARX;;AAAA;AAAA;AAYI3B,oBAAI,GAAGnB,aAAa,CAACqB,OAAD,CAApB;AAZJ;AAAA;;AAAA;AAAA;AAAA;AAcI4E,uBAAO,CAACC,KAAR;AAdJ,mDAeW;AAACpD,yBAAO,EAAE;AAAV,iBAfX;;AAAA;AAAA,qBAiBMV,CAAC,CAACkE,OAAF,CAAUnF,IAAV,CAjBN;AAAA;AAAA;AAAA;;AAAA,mDAkBW;AAAC2B,yBAAO,EAAE;AAAV,iBAlBX;;AAAA;AAoBMiG,wBApBN,GAoBiBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CApBvC;AAAA;AAAA;AAAA,uBAsBiB5B,SAAS,CAACkB,IAAD,EAAO4H,QAAP,CAtB1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBI9C,uBAAO,CAACC,KAAR;AAxBJ,mDAyBW;AAACpD,yBAAO,EAAE;AAAV,iBAzBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA6BA;AACF;AACA;AACA;;;;;oMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMgF,yBADN,GACkB,KAAKtG,WAAL,CAAiB,YAAjB,CADlB;;AAAA,oBAEOsG,SAFP;AAAA;AAAA;AAAA;;AAAA,mDAGW;AAAChF,yBAAO,EAAE;AAAV,iBAHX;;AAAA;AAKEgF,yBAAS,GAAGA,SAAS,CAACC,IAAV,EAAZ;AACM1G,uBANR,GAMkBf,kBAAkB,CAACwH,SAAD,CANpC;;AAAA,oBAOOzG,OAPP;AAAA;AAAA;AAAA;;AAAA,mDAQW;AAACyB,yBAAO,EAAE;AAAV,iBARX;;AAAA;AAAA;AAYI3B,oBAAI,GAAGnB,aAAa,CAACqB,OAAD,CAApB;AAZJ;AAAA;;AAAA;AAAA;AAAA;AAcI4E,uBAAO,CAACC,KAAR;AAdJ,mDAeW;AAACpD,yBAAO,EAAE;AAAV,iBAfX;;AAAA;AAAA,qBAiBMV,CAAC,CAACkE,OAAF,CAAUnF,IAAV,CAjBN;AAAA;AAAA;AAAA;;AAAA,mDAkBW;AAAC2B,yBAAO,EAAE;AAAV,iBAlBX;;AAAA;AAoBMiG,wBApBN,GAoBiBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CApBvC;AAAA;AAAA;AAAA,uBAsBiB3B,SAAS,CAACiB,IAAD,EAAO4H,QAAP,CAtB1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBI9C,uBAAO,CAACC,KAAR;AAxBJ,mDAyBW;AAACpD,yBAAO,EAAE;AAAV,iBAzBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA6BA;AACF;AACA;AACA;;;;;oMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAEM3B,oBAFN,GAEa,EAFb;;AAAA,qBAIM,KAAKK,WAAL,CAAiB,aAAjB,CAJN;AAAA;AAAA;AAAA;;AAKUyH,gCALV,GAK6B,KAAKzH,WAAL,CAAiB,kBAAjB,CAL7B;AAMI,oBAAIyH,gBAAJ,EAAsB9H,IAAI,GAAGX,aAAa,CAACyI,gBAAD,EAAmB,EAAnB,CAApB;AACtB9H,oBAAI,GAAG;AAACA,sBAAI,EAAJA;AAAD,iBAAP;AAPJ;AAAA;;AAAA;AAUU2G,yBAVV,GAUsB,KAAKtG,WAAL,CAAiB,YAAjB,EAA+BuG,IAA/B,EAVtB;;AAAA,oBAYSD,SAZT;AAAA;AAAA;AAAA;;AAaM7B,uBAAO,CAACC,KAAR,CAAc,uBAAd;AAbN,mDAca;AAACpD,yBAAO,EAAE;AAAV,iBAdb;;AAAA;AAiBUoG,qBAjBV,GAiBkB5I,kBAAkB,CAACwH,SAAD,CAjBpC;;AAAA,oBAkBSoB,KAlBT;AAAA;AAAA;AAAA;;AAmBMjD,uBAAO,CAACC,KAAR,CAAc,qCAAd;AAnBN,mDAoBa;AAACpD,yBAAO,EAAE;AAAV,iBApBb;;AAAA;AAuBI3B,oBAAI,GAAGnB,aAAa,CAACkJ,KAAD,CAApB;AAEMC,6BAzBV,GAyB0B,EAzB1B;;AA2BI/G,iBAAC,CAACgH,IAAF,CAAOjI,IAAP,EAAa,UAAAkI,GAAG;AAAA,yBAAIF,aAAa,CAACpC,IAAd,CAAmBuC,MAAM,CAACC,MAAP,CAAcF,GAAd,CAAnB,CAAJ;AAAA,iBAAhB;;AACIG,+BA5BR,GA4B0B,KAAKhI,WAAL,CAAiB,eAAjB,CA5B1B;;AA6BI,oBAAIgI,eAAJ,EAAqB;AACbC,oCADa,GACQD,eAAe,CACvCpC,KADwB,CAClB,IADkB,EAExBsC,MAFwB,CAEjB,UAACvI,IAAD,EAAOkI,GAAP,EAAe;AACrB,wBAAMM,YAAY,GAAGN,GAAG,CAACjC,KAAJ,CAAU,GAAV,CAArB;AACAjG,wBAAI,CAACwI,YAAY,CAAC,CAAD,CAAb,CAAJ,GAAwBA,YAAY,CAAC,CAAD,CAApC;AACA,2BAAOxI,IAAP;AACD,mBANwB,EAMtB,EANsB,CADR;AAQnBA,sBAAI,mCAAOsI,kBAAP;AAA2BtI,wBAAI,EAAEgI;AAAjC,oBAAJ;AACD,iBATD,MASO;AACLhI,sBAAI,GAAG;AAACA,wBAAI,EAAJA;AAAD,mBAAP;AACD;;AAxCL;AA2CQ4H,wBA3CR,GA2CmBrI,sBAAsB,CAAC,KAAKc,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAAD,EAAmC,KAAKI,eAAL,GAAuBC,OAAvB,EAAnC,CA3CzC;AA4CQ+H,4BA5CR,GA4CuB,KAAKpI,WAAL,CAAiB,eAAjB,CA5CvB;AAAA;AAAA;AAAA,uBA+CuBX,SAAS,CAACM,IAAD,EAAO4H,QAAP,EAAiBa,YAAjB,CA/ChC;;AAAA;AA+CUC,oBA/CV;AAgDQC,oBAhDR,GAgDe5B,QAAQ,CAAC6B,aAAT,CAAuB,GAAvB,CAhDf;AAiDID,oBAAI,CAACE,YAAL,CAAkB,MAAlB,EAA0BpK,MAAM,CAAC8G,GAAP,CAAWuD,eAAX,CAA2BJ,IAA3B,CAA1B;AACAC,oBAAI,CAACE,YAAL,CAAkB,UAAlB,EAA8BjB,QAAQ,GAAG,OAAzC;AACAb,wBAAQ,CAACgC,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;AACAA,oBAAI,CAACM,KAAL;AACAlC,wBAAQ,CAACgC,IAAT,CAAcG,WAAd,CAA0BP,IAA1B;AArDJ,mDAsDW;AAAChH,yBAAO,EAAE;AAAV,iBAtDX;;AAAA;AAAA;AAAA;AAwDImD,uBAAO,CAACC,KAAR;AAxDJ,mDAyDW;AAACpD,yBAAO,EAAE;AAAV,iBAzDX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA6DA;AACF;AACA;AACA;;;;;+LACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACJ;AACA;AACA;AACQN,oBALN,GAKa,KAAKhB,WAAL,CAAiB,OAAjB,CALb;AAMMsB,uBANN,GAMgB,IANhB;AAOEN,oBAAI,CAAC8H,MAAL,CAAYnE,OAAZ,CAAoB,UAAAoE,KAAK,EAAI;AAC3B,sBAAI,CAACA,KAAK,CAACC,aAAN,EAAL,EAA4B;AAC1B1H,2BAAO,GAAG,KAAV;AACD;AACF,iBAJD;;AAPF,oBAYOA,OAZP;AAAA;AAAA;AAAA;;AAAA,mDAaW;AAACA,yBAAO,EAAE;AAAV,iBAbX;;AAAA;AAAA;AAAA,uBAgBehD,UAAU,CAAC0C,IAAI,CAACX,OAAL,EAAD,EAAiB,KAAKc,SAAL,EAAjB,CAhBzB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAmBA;AACF;AACA;AACA;;;;;gMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe5C,WAAW,EAD1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAIA;AACF;AACA;AACA;;;;;iMACE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACM0K,qBADN,GACc,KAAKjJ,WAAL,CAAiB,MAAjB,CADd;AAEQqB,sBAFR,GAEiB;AACbC,yBAAO,EAAE;AADI,iBAFjB;;AAAA,oBAKO2H,KALP;AAAA;AAAA;AAAA;;AAAA,mDAMW5H,MANX;;AAAA;AAQE,oBAAI4H,KAAK,CAAC9I,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7B8I,uBAAK,GAAGA,KAAK,CAACrD,KAAN,CAAY,GAAZ,EAAiB3B,GAAjB,CAAqB,UAAAiF,IAAI;AAAA,2BAAIA,IAAI,CAAC3C,IAAL,EAAJ;AAAA,mBAAzB,CAAR;AACD,iBAFD,MAEO;AACL0C,uBAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AAZH,uDAamBA,KAbnB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaWC,oBAbX;AAcIA,oBAAI,GAAGhK,sBAAsB,CAACgK,IAAD,EAAO,KAAK9I,eAAL,GAAuBC,OAAvB,EAAP,CAA7B;AACIM,qBAfR,GAegB,KAAKX,WAAL,CAAiB,OAAjB,KAA6B,EAf7C;AAgBIW,qBAAK,GAAGA,KAAK,CAAC4F,IAAN,EAAR;AACM4C,uBAjBV,GAiBoB,KAAKnJ,WAAL,CAAiB,UAAjB,CAjBpB;AAkBQoJ,qBAlBR,GAkBgB,KAAKpJ,WAAL,CAAiB,OAAjB,CAlBhB;AAAA,gCAmBYmJ,OAnBZ;AAAA,oDAoBW,QApBX,0BAyBW,KAzBX,0BA8CW,YA9CX,0BA4DW,WA5DX,0BAwEW,WAxEX,0BAoFW,YApFX,0BA2GW,cA3GX;AAAA;;AAAA;AAqBQxI,qBAAK,GAAG,CAAC3B,aAAa,CAACkK,IAAD,CAAtB;AACA7H,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOvI,KAAP,CAA9B;AAtBR;;AAAA;AA0BQ,oBACEA,KAAK,CAACiF,KAAN,CAAY,OAAZ,EAAqByD,MAArB,KAAgC,CAAhC,IACA1I,KAAK,CAACR,OAAN,CAAc,IAAd,MAAwB,CADxB,IAEAQ,KAAK,CAACR,OAAN,CAAc,IAAd,MAAwBQ,KAAK,CAAC0I,MAAN,GAAe,CAHzC,EAIE;AACA1I,uBAAK,GAAG3B,aAAa,CACnB2B,KAAK,CAAC2I,OAAN,CAAc,IAAd,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CADmB,EAEnB,IAFmB,EAGnB,KAAKlJ,eAAL,EAHmB,CAArB;AAKD,iBAVD,MAUO,IAAIO,KAAK,CAACR,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AACpCQ,uBAAK,GAAG5B,qBAAqB,CAC3B4B,KAD2B,EAE3B,KAAKP,eAAL,EAF2B,EAG3B,IAH2B,CAA7B;AAKD;;AACDiB,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOvI,KAAP,CAA9B;AA3CR;;AAAA;AA+CY4I,4BA/CZ,GA+C2BvK,aAAa,CAACkK,IAAD,CA/CxC;AAgDQvI,qBAAK,GAAGA,KAAK,CAACiF,KAAN,CAAY,IAAZ,EAAkB3B,GAAlB,CAAsB,UAAAuF,CAAC;AAAA,yBAAIA,CAAC,CAACjD,IAAF,EAAJ;AAAA,iBAAvB,CAAR;;AACA,oBAAI5F,KAAK,CAAC0I,MAAN,KAAiB,CAArB,EAAwB;AACtB1I,uBAAK,CAAC4E,IAAN,CAAW,EAAX;AACD;;AACGkE,yBApDZ,GAoDwB9I,KAAK,CAACR,OAAN,CAAcoJ,YAAd,IAA8B,CApDtD;;AAqDQ,oBAAIE,SAAS,IAAI9I,KAAK,CAAC0I,MAAvB,EAA+B;AAC7BI,2BAAS,GAAG,CAAZ;AACD;;AACD9I,qBAAK,GAAGA,KAAK,CAAC8I,SAAD,CAAL,IAAoB,EAA5B;AACApI,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOvI,KAAP,CAA9B;AAzDR;;AAAA;AA6DY4I,6BA7DZ,GA6D2BvK,aAAa,CAACkK,IAAD,CA7DxC;AA8DQK,6BAAY,GAAGA,aAAY,GACvB3I,CAAC,CAAC8I,KAAF,CAAQC,MAAM,CAACJ,aAAD,CAAd,IACE,CADF,GAEEI,MAAM,CAACJ,aAAD,CAHe,GAIvBI,MAAM,CAAC,CAAC,CAACJ,aAAH,CAJV;AAKAH,qBAAK,GAAGO,MAAM,CAACP,KAAD,CAAN,IAAiB,CAAzB;AACAG,6BAAY,IAAIH,KAAhB;AACA/H,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOK,aAAP,CAA9B;AArER;;AAAA;AAyEYA,8BAzEZ,GAyE2BvK,aAAa,CAACkK,IAAD,CAzExC;AA0EQK,8BAAY,GAAGA,cAAY,GACvB3I,CAAC,CAAC8I,KAAF,CAAQC,MAAM,CAACJ,cAAD,CAAd,IACE,CADF,GAEEI,MAAM,CAACJ,cAAD,CAHe,GAIvBI,MAAM,CAAC,CAAC,CAACJ,cAAH,CAJV;AAKAH,qBAAK,GAAGO,MAAM,CAACP,KAAD,CAAN,IAAiB,CAAzB;AACAG,8BAAY,IAAIH,KAAhB;AACA/H,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOK,cAAP,CAA9B;AAjFR;;AAAA;AAqFYA,8BArFZ,GAqF2BvK,aAAa,CAACkK,IAAD,CArFxC;AAsFYhF,oBAtFZ,GAsFmB,EAtFnB;;AAuFQ,oBAAI,CAACtD,CAAC,CAAC+C,OAAF,CAAU4F,cAAV,CAAL,EAA8B;AAC5BA,gCAAY,GAAG,EAAf;AACD;;AACDA,8BAAY,GAAG,gFAAIA,cAAP,CAAZ;;AACA,oBAAI3I,CAAC,CAACgJ,QAAF,CAAW5K,aAAa,CAAC2B,KAAD,CAAxB,CAAJ,EAAsC;AACpCuD,sBAAI,GAAGlF,aAAa,CAAC2B,KAAD,CAApB;AACD;;AACDyI,qBAAK,GAAGO,MAAM,CAACP,KAAD,CAAN,IAAiB,CAAzB;;AACA,oBAAIA,KAAK,GAAG,CAAZ,EAAe;AACbA,uBAAK,GAAG,CAAR;AACD;;AACD,uBAAOA,KAAP,EAAc;AACZxI,mBAAC,CAAC+C,OAAF,CAAUO,IAAV,IACIqF,cAAY,CAAChE,IAAb,iFAAsBrB,IAAtB,EADJ,GAEIqF,cAAY,CAAChE,IAAb,mBAAsBrB,IAAtB,EAFJ;AAGA,oBAAEkF,KAAF;AACD;;AACD/H,sBAAM,CAACC,OAAP,GAAiBlC,aAAa,CAAC8J,IAAD,EAAOK,cAAP,CAA9B;AAxGR;;AAAA;AA4GYM,qBA5GZ,GA4GoBX,IAAI,CAACtD,KAAL,CAAW,OAAX,CA5GpB;AA6GQiE,qBAAK,CAAClF,OAAN,CAAc,UAAAmF,CAAC,EAAI;AACjB,sBAAI,CAACA,CAAL,EAAQ;AACN;AACD;;AACDA,mBAAC,GAAGA,CAAC,CAACvD,IAAF,EAAJ;;AACA,sBAAI,CAACuD,CAAL,EAAQ;AACN;AACD;;AACD,sBAAIA,CAAC,CAAC3J,OAAF,CAAU,IAAV,MAAoB,CAAC,CAAzB,EAA4B;AAC1B2J,qBAAC,GAAG5K,sBAAsB,CAAC4K,CAAD,EAAI,MAAI,CAAC1J,eAAL,GAAuBC,OAAvB,EAAJ,CAA1B;AACD;;AACD,sBAAI6D,IAAI,GAAGlF,aAAa,CAAC8K,CAAD,CAAxB;;AACA,sBAAI,CAAC5F,IAAL,EAAW;AACT;AACD;;AACD,sBAAI6F,QAAQ,GAAGD,CAAC,CAACR,OAAF,CAAU,OAAV,EAAmB,EAAnB,EAAuB/C,IAAvB,EAAf;;AACA,sBAAI,CAACwD,QAAL,EAAe;AACb;AACD;;AACD,sBAAIC,IAAI,GAAGhL,aAAa,CAAC+K,QAAD,CAAxB;;AACA,sBAAI,CAACnJ,CAAC,CAAC+C,OAAF,CAAUqG,IAAV,CAAL,EAAsB;AACpB;AACD;;AACDA,sBAAI,GAAG,gFAAIA,IAAP,CAAJ;AAEAA,sBAAI,GAAGA,IAAI,CAACC,MAAL,CAAY,UAAAC,KAAK;AAAA,2BAAIA,KAAK,KAAKhG,IAAd;AAAA,mBAAjB,CAAP;AACA9E,+BAAa,CAAC2K,QAAD,EAAWC,IAAX,CAAb;AACD,iBA3BD;AA4BA3I,sBAAM,CAACC,OAAP,GAAiB,IAAjB;AAzIR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,mDA8ISD,MA9IT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAiJA;AACF;AACA;AACA;;;;WACE,mCAA0B;AACxB,UAAIsE,GAAG,GAAG,KAAK3F,WAAL,CAAiB,cAAjB,CAAV;;AACA,UAAI,CAAC2F,GAAL,EAAU;AACR,eAAO;AAACrE,iBAAO,EAAE;AAAV,SAAP;AACD;;AACDqE,SAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AACA,UAAMuE,MAAM,GAAG,KAAKnK,WAAL,CAAiB,cAAjB,CAAf;AACA2F,SAAG,CAAChB,OAAJ,CAAY,UAAAkB,EAAE,EAAI;AAChB,YAAIC,SAAS,GAAGjH,uBAAuB,CAACgH,EAAD,CAAvC;;AACA,gBAAQsE,MAAR;AACE,eAAK,YAAL;AAAmB;AACjB,kBAAIvJ,CAAC,CAACgD,GAAF,CAAMkC,SAAN,EAAiB,8BAAjB,CAAJ,EAAsD;AACpDA,yBAAS,CAACsE,UAAV,CAAqBC,OAArB,CAA6BC,SAA7B;AACD;AACF;AACC;;AACF,eAAK,OAAL;AAAc;AACZ,kBAAI1J,CAAC,CAACgD,GAAF,CAAMkC,SAAN,EAAiB,+BAAjB,CAAJ,EAAuD;AACrDA,yBAAS,CAACsE,UAAV,CAAqBC,OAArB,CAA6BE,UAA7B;AACD;AACF;AACC;AAZJ;AAcD,OAhBD;AAiBA,aAAO;AAACjJ,eAAO,EAAE;AAAV,OAAP;AACD;AAED;AACF;AACA;AACA;;;;;oMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMkJ,oBADN,GACa,KAAKxK,WAAL,CAAiB,MAAjB,CADb;AAAA;AAGIwK,oBAAI,GAAGtL,sBAAsB,CAACsL,IAAD,EAAO,KAAKpK,eAAL,GAAuBC,OAAvB,EAAP,CAA7B;AACAoK,oBAAI,CAACD,IAAD,CAAJ;AAJJ,mDAKW;AAAClJ,yBAAO,EAAE;AAAV,iBALX;;AAAA;AAAA;AAAA;AAOImD,uBAAO,CAACC,KAAR,CAAc,4CAA4C,cAAMjD,OAAlD,GAA4D,GAA1E;AAPJ,mDAQW;AAACH,yBAAO,EAAE;AAAV,iBARX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAYA;AACF;AACA;AACA;AACA;;;;;4MACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMoJ,yBAFN,cAEkBtM,MAFlB,mEAEkB,QAAQuM,WAF1B,wDAEkB,oBAAqBC,UAFvC;;AAAA,oBAGOF,SAHP;AAAA;AAAA;AAAA;;AAAA,mDAIW;AAACpJ,yBAAO,EAAE;AAAV,iBAJX;;AAAA;AAMMuJ,uBANN,eAMgBzM,MANhB,oEAMgB,SAAQ0M,UANxB,wDAMgB,oBAAoBjF,EANpC;;AAAA,oBAOOgF,OAPP;AAAA;AAAA;AAAA;;AAAA,mDAQW;AAACvJ,yBAAO,EAAE;AAAV,iBARX;;AAAA;AAAA;AAAA;AAAA,uBAWsB,IAAI9B,QAAJ,CAAa;AAC7BuL,uBAAK,yBAAkBL,SAAlB;AADwB,iBAAb,EAEf9G,GAFe,CAEXiH,OAFW,CAXtB;;AAAA;AAWQG,qBAXR;;AAcI,oBAAIpK,CAAC,CAACgJ,QAAF,CAAWoB,KAAK,CAACrL,IAAjB,CAAJ,EAA4B;AAC1BqL,uBAAK,GAAGA,KAAK,CAACrL,IAAd;AACD;;AACKsL,wBAjBV,GAiBqB7M,MAAM,CAAC6H,QAAP,CAAgBiF,QAAhB,GAA2BC,YAA3B,CAAwC9K,OAAxC,EAjBrB;AAkBI2K,qBAAK,CAACI,iBAAN,GAA0B,IAA1B;;AAEA,oBAAI,CAACxK,CAAC,CAACyK,OAAF,CAAUL,KAAV,EAAiBC,QAAjB,CAAL,EAAiC;AAC/BhF,0BAAQ,CAACC,QAAT,CAAkBoF,0FAAkB,CAAC;AAACF,qCAAiB,EAAE;AAApB,mBAAD,CAApC;AACAnF,0BAAQ,CAACC,QAAT,CAAkBoF,0FAAkB,CAACN,KAAD,CAApC;AACD;;AAvBL,mDAwBW;AAAC1J,yBAAO,EAAE;AAAV,iBAxBX;;AAAA;AAAA;AAAA;AA2BImD,uBAAO,CAACC,KAAR;;AA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA+BA;AACF;AACA;AACA;;;;;kNACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACM6G,uBADN,GACgB,KAAKvL,WAAL,CAAiB,SAAjB,KAA+B,EAD/C;AAEEuL,uBAAO,GAAGA,OAAO,CACd3F,KADO,CACD,GADC,EAEP3B,GAFO,CAEH,UAAAuH,KAAK;AAAA,yBAAIA,KAAK,CAACjF,IAAN,EAAJ;AAAA,iBAFF,EAGP0D,MAHO,CAGA,UAAAuB,KAAK;AAAA,yBAAIA,KAAJ;AAAA,iBAHL,CAAV;AAIMC,8BANR,GAMyBrN,MAAM,CAACsN,kBAAP,CAA0B1L,WAA1B,CACrB,oBADqB,CANzB;AASQ2L,mCATR,GAS8BF,cAAc,CAACxB,MAAf,CAAsB,UAAA2B,UAAU,EAAI;AAC9D,yBAAOL,OAAO,CAACpL,OAAR,CAAgByL,UAAU,CAAC5L,WAAX,CAAuB,OAAvB,CAAhB,MAAqD,CAAC,CAA7D;AACD,iBAF2B,CAT9B;AAYE;AACJ;AACA;;AAdE;AAAA,uBAeQ5B,MAAM,CAACsN,kBAAP,CAA0BG,aAA1B,CAAwCF,mBAAxC,EAA6D,KAA7D,CAfR;;AAAA;AAAA,mDAgBS;AAACrK,yBAAO,EAAE;AAAV,iBAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAmBA;AACF;AACA;AACA;;;;;iMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACMgF,yBADN,GACkB,KAAKtG,WAAL,CAAiB,YAAjB,CADlB;AAEMH,uBAFN,GAEgBhB,uBAAuB,CAACyH,SAAD,CAFvC;AAGMwF,sBAHN,GAGe,KAAK9L,WAAL,CAAiB,QAAjB,CAHf;;AAAA,qBAIMY,CAAC,CAACmL,UAAF,CAAalM,OAAO,CAACiM,MAAD,CAApB,CAJN;AAAA;AAAA;AAAA;;AAKIjM,uBAAO,CAACiM,MAAD,CAAP;AALJ,mDAMW;AACLxK,yBAAO,EAAE;AADJ,iBANX;;AAAA;AAAA;;AAAA,qBAWOV,CAAC,CAACmL,UAAF,CAAalM,OAAO,CAACuK,UAAR,CAAmBC,OAAnB,CAA2ByB,MAA3B,CAAb,CAXP;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYyBjM,OAAO,CAACuK,UAAR,CAAmBC,OAAnB,CAA2ByB,MAA3B,GAZzB;;AAAA;AAYUzK,sBAZV;;AAAA,qBAaST,CAAC,CAACgJ,QAAF,CAAWvI,MAAX,CAbT;AAAA;AAAA;AAAA;;AAAA,mDAceA,MAdf;;AAAA;AAAA,mDAgBa;AAACC,yBAAO,EAAC;AAAT,iBAhBb;;AAAA;AAkBIzB,uBAAO,CAACuK,UAAR,CAAmBC,OAAnB,CAA2B2B,UAA3B,CAAsCF,MAAtC;AAlBJ,mDAmBW;AACLxK,yBAAO,EAAE;AADJ,iBAnBX;;AAAA;AAAA;AAAA;AAuBImD,uBAAO,CAACC,KAAR;AAvBJ,mDAwBW;AACLpD,yBAAO,EAAE;AADJ,iBAxBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA8BA;AACF;AACA;;;;;+LACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACM2K,4BADN,GACqB,KAAKjM,WAAL,CAAiB,gBAAjB,CADrB;;AAAA,oBAEOiM,YAFP;AAAA;AAAA;AAAA;;AAAA,mDAGW;AAAC3K,yBAAO,EAAE;AAAV,iBAHX;;AAAA;AAKMkD,mBALN,GAKY;AAAClD,yBAAO,EAAE;AAAV,iBALZ;AAAA;AAAA;AAAA,uBAOgB4K,uEAAS,CACnBD,YADmB,EAEnB,KAAKE,mBAAL,CAAyB,SAAzB,CAFmB,EAGnB,KAAKA,mBAAL,CAAyB,MAAzB,CAHmB,EAInB,KAAKA,mBAAL,CAAyB,IAAzB,CAJmB,EAKnB,KAAKA,mBAAL,CAAyB,aAAzB,CALmB,CAPzB;;AAAA;AAOI3H,mBAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeIC,uBAAO,CAACC,KAAR;AAfJ,mDAgBW;AACLpD,yBAAO,EAAE;AADJ,iBAhBX;;AAAA;AAAA,mDAoBSkD,GApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAuBA;AACF;AACA;;;;;+LACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQlF,KAAK,CAAC,KAAKU,WAAL,CAAiB,cAAjB,KAAoC,CAArC,CADb;;AAAA;AAAA,mDAES;AAACsB,yBAAO,EAAE;AAAV,iBAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAKA;AACF;AACA;AACA;;;;;mMACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQ8K,wBADR,GACmB,KAAKpM,WAAL,CAAiB,cAAjB,KAAoC,CADvD;AAEQoE,mBAFR,GAEc,KAAKpE,WAAL,CAAiB,WAAjB,CAFd;AAGQqM,oBAHR,GAGe,KAAKrM,WAAL,CAAiB,MAAjB,CAHf;;AAAA,qBAIMoE,GAJN;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAK8B,wKAL9B;;AAAA;AAAA;AAKWkI,yBALX,iBAKWA,SALX;AAMIA,yBAAS,CAAClI,GAAD,EAAMiI,IAAN,EAAYD,QAAZ,CAAT;AANJ;AAAA,uBAOU9M,KAAK,CAAC,EAAD,CAPf;;AAAA;AAAA,mDASS;AAACgC,yBAAO,EAAE;AAAV,iBATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAYA;AACF;AACA;AACA;;;;;mMACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACQiL,uBADR,GACkB,KAAKvM,WAAL,CAAiB,SAAjB,CADlB;AAEMwM,6BAFN,GAEsB,KAAKxM,WAAL,CAAiB,gBAAjB,CAFtB;AAGMyM,8BAHN,GAGuB,KAAKzM,WAAL,CAAiB,iBAAjB,CAHvB;AAIEwM,6BAAa,GAAGxN,aAAa,CAACwN,aAAD,EAAgB,IAAhB,EAAuB,KAAKpM,eAAL,GAAuBC,OAAvB,EAAvB,CAA7B;AACAoM,8BAAc,GAAGvN,sBAAsB,CAACuN,cAAD,EAAiB,KAAKrM,eAAL,GAAuBC,OAAvB,EAAjB,CAAvC;AACMmE,mBANR,GAMcjF,YAAY,CAACiN,aAAD,EAAgBC,cAAhB,EAAgCF,OAAhC,CAN1B;AAAA,mDAOS;AAACjL,yBAAO,EAAEkD;AAAV,iBAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAUA;AACF;AACA;AACA;;;;;kMACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEkC,wJAFlC;;AAAA;AAAA;AAEWkI,4BAFX,kBAEWA,YAFX;AAAA;AAAA,uBAGUA,YAAY,EAHtB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,mDAKW;AACLpL,yBAAO,EAAE;AADJ,iBALX;;AAAA;AASE;AACIqL,2BAVN,GAUoBlN,8BAA8B,CAAC,KAAKe,UAAL,EAAD,CAVlD,EAWE;AACA;AACA;AAEA;AACA;AACA;AACA;;AAlBF,mDAoBS;AACLc,yBAAO,EAAE;AADJ,iBApBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAyBA;AACF;AACA;AACA;;;;;+LACE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsB,8JADtB;;AAAA;AACQsL,oBADR;AAESC,oCAFT,GAEqED,IAFrE,CAESC,oBAFT,EAE+BC,WAF/B,GAEqEF,IAFrE,CAE+BE,WAF/B,EAE4CC,SAF5C,GAEqEH,IAFrE,CAE4CG,SAF5C,EAEuDC,UAFvD,GAEqEJ,IAFrE,CAEuDI,UAFvD;AAGE,iBAAC5O,MAAM,CAAC6O,SAAP,GAAmB7O,MAAM,CAAC6O,SAAP,IAAoB,EAAxC,EAA4CL,IAA5C,GAAmDA,IAAnD;AAEMM,sBALR,GAKiB,KAAKlN,WAAL,CAAiB,QAAjB,CALjB;;AAAA,oBAMQkN,MANR;AAAA;AAAA;AAAA;;AAAA,mDAOW;AACL5L,yBAAO,EAAE;AADJ,iBAPX;;AAAA;AAWM6L,wBAXN,GAWiB;AACbC,2BAAS,EAAE,UADE;AAEbC,8BAAY,+DAFC;AAGbC,0CAAwB,+DAHX;AAIbC,+BAAa,EAAE,gBAJF;AAKbC,uBAAK,EAAE,gBALM;AAMbT,2BAAS,EAAC,8BANG;AAObU,sCAAoB,EAAE,KAPT;AAQbC,2BAAS,EAAE,IAAIb,oBAAJ,CAAyB;AAAEc,yBAAK,EAAEvP,MAAM,CAACwP;AAAhB,mBAAzB,CARE;AASbC,sCAAoB,EAAE,IATT;AAUbC,8BAAY,EAAE,IAVD;AAWbC,gCAAc,EAAE,KAXH;AAYbC,sCAAoB,EAAE;AAZT,iBAXjB;AAyBQC,wBAzBR,GAyBmB,IAAInB,WAAJ,CAAgBK,QAAhB,CAzBnB;AA0BE1I,uBAAO,CAACyJ,GAAR,CAAYD,QAAZ;AACAd,wBAAQ,GAAG;AACTC,2BAAS,EAAE,KAAKpN,WAAL,CAAiB,WAAjB,CADF;AAETqN,8BAAY,EAAE,KAAKrN,WAAL,CAAiB,cAAjB,CAFL;AAGTsN,0CAAwB,EAAE,KAAKtN,WAAL,CAAiB,0BAAjB,CAHjB;AAITuN,+BAAa,EAAE,KAAKvN,WAAL,CAAiB,eAAjB,CAJN;AAKTwN,uBAAK,EAAE,KAAKxN,WAAL,CAAiB,OAAjB,CALE;AAMT+M,2BAAS,EAAC,KAAK/M,WAAL,CAAiB,WAAjB,CAND;AAOTyN,sCAAoB,EAAE,KAAKzN,WAAL,CAAiB,sBAAjB,CAPb;AAQT0N,2BAAS,EAAE,IAAIb,oBAAJ,CAAyB;AAAEc,yBAAK,EAAEvP,MAAM,CAACwP;AAAhB,mBAAzB,CARF;AASTC,sCAAoB,EAAE,KAAK7N,WAAL,CAAiB,sBAAjB,CATb;AAUT8N,8BAAY,EAAE,KAAK9N,WAAL,CAAiB,cAAjB,CAVL;AAWT+N,gCAAc,EAAE,KAAK/N,WAAL,CAAiB,gBAAjB,CAXP;AAYTgO,sCAAoB,EAAE,KAAKhO,WAAL,CAAiB,sBAAjB;AAZb,iBAAX;AAcMmO,uBAzCR,GAyCkB,IAAIrB,WAAJ,CAAgBK,QAAhB,CAzClB,EA0CE;AACA;;AAEA1I,uBAAO,CAACyJ,GAAR,CAAYhB,MAAZ;;AA7CF,qBA+CKtM,CAAC,CAACmL,UAAF,CAAaoC,OAAO,CAACjB,MAAD,CAApB,CA/CL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAiDoBiB,OAAO,CAACjB,MAAD,CAAP,EAjDpB;;AAAA;AAiDM7L,sBAjDN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,mDAmDa;AAACC,yBAAO,EAAC;AAAT,iBAnDb;;AAAA;AAsDEmD,uBAAO,CAACyJ,GAAR,CAAY7M,MAAZ,EAtDF,CAuDE;;AAvDF,mDAwDS;AAACC,yBAAO,EAAC;AAAT,iBAxDT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EA3sCwB8M,+E;;AAuwC1B,iEAAe1O,WAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1yCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAO2O,QAAP,GAAqBjQ,MAAM,CAACC,YAA5B,CAAOgQ,QAAP;;IAEMC,c;;;;;;;;;;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,mCAAsB1O,QAAtB,EAAmG;AAAA,UAAnE2O,OAAmE,uEAAzD,EAAyD;AAAA,UAArDC,SAAqD,uEAAzC,OAAyC;AAAA,UAAhC3O,OAAgC,uEAAtB,IAAsB;AAAA,UAAhB4O,OAAgB,uEAAN,IAAM;;AACjG,UAAI,CAAEF,OAAH,IAAe,CAAEA,OAAO,CAAClF,MAA5B,EAAmC;AACjC,eAAO,IAAP;AACD;;AACDkF,aAAO,GAAGA,OAAO,CAACtE,MAAR,CAAe,UAAAyE,CAAC;AAAA,eAAEA,CAAC,CAACtN,IAAJ;AAAA,OAAhB,EAA0B6C,GAA1B,CAA8B,UAAAyK,CAAC,EAAE;AACzC,eAAO,IAAIhP,0DAAJ,CAAgBgP,CAAhB,EAAmB9O,QAAnB,EAA6BC,OAA7B,CAAP;AACD,OAFS,CAAV;AAGA,aAAO,KAAKC,WAAL,mBAA4BF,QAA5B,cAAwC4O,SAAxC,GAAqDD,OAArD,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,iCAAwB3O,QAAxB,EAAiC;AAC/B,aAAO,KAAK+O,aAAL,mBAA8B/O,QAA9B,EAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;sMACE,iBAA2BA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAqC4O,yBAArC,2DAAiD,OAAjD;AAA0DI,gCAA1D;AAA4E/O,uBAA5E;;AAAA,qBACKwO,QAAQ,EADb;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,sBAIK,KAAKrO,WAAL,2BAAoCJ,QAApC,cAAgD4O,SAAhD,OAAiE,UAJtE;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOE,qBAAK1O,WAAL,2BAAoCF,QAApC,cAAgD4O,SAAhD,GAA6D,UAA7D;AACAI,gCAAgB,GAAGA,gBAAgB,IAAI,EAAvC;AACIL,uBATN,GASgBK,gBAThB;AAUQC,sBAVR,GAUiB,EAVjB;AAWEN,uBAAO,GAAGA,OAAO,CAACtK,GAAR,CAAY,UAAAyK,CAAC;AAAA,yBAAG,IAAIhP,0DAAJ,CAAgBgP,CAAhB,EAAmB9O,QAAnB,EAA6BC,OAA7B,CAAH;AAAA,iBAAb,CAAV,CAXF,CAYE;AACA;AACA;AACA;;AAfF,uDAgBqB0O,OAhBrB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBWzC,sBAhBX;AAAA;AAAA;AAAA,uBAkByBA,MAAM,CAACgD,QAAP,EAlBzB;;AAAA;AAkBUzN,sBAlBV;;AAAA,oBAmBWA,MAAM,CAACC,OAnBlB;AAAA;AAAA;AAAA;;AAoBQ,oBAAGD,MAAM,CAACqD,KAAV,EAAgB;AACdD,yBAAO,CAACC,KAAR,CAAcrD,MAAM,CAACqD,KAArB;AACAmK,wBAAM,CAACtJ,IAAP,CAAYlE,MAAM,CAACqD,KAAnB;AACD;;AAvBT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BMmK,sBAAM,CAACtJ,IAAP;AACAd,uBAAO,CAACC,KAAR;;AA5BN;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AA+BE,qBAAK5E,WAAL,2BAAoCF,QAApC,cAAgD4O,SAAhD,GAA6D,UAA7D;;AA/BF,qBAgCMK,MAAM,CAACxF,MAhCb;AAAA;AAAA;AAAA;;AAAA,iDAiCW;AACL/H,yBAAO,EAAE,KADJ;AAELuN,wBAAM,EAANA;AAFK,iBAjCX;;AAAA;AAAA,iDAsCS;AAACvN,yBAAO,EAAE;AAAV,iBAtCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAnC2B8M,+E;AA6E7B;AACA;AACA;AACA;;;AACAhQ,MAAM,CAAC2Q,cAAP,GAAwB,IAAIT,cAAJ,EAAxB;AACA,iEAAelQ,MAAM,CAAC2Q,cAAtB,E;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAe7C,SAAtB;AAAA;AAAA;;;mLAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB8C,6BAAzB,2DAA6C,IAA7C;AAAmDC,mBAAnD,2DAA6D,SAA7D;AAAwEC,gBAAxE,2DAA+E,EAA/E;AAAmFC,cAAnF,2DAAwF,EAAxF;AAA4FC,uBAA5F,2DAA0G,EAA1G;;AAAA,gBACAJ,iBADA;AAAA;AAAA;AAAA;;AAAA,6CAEI;AAAC1N,qBAAO,EAAE;AAAV,aAFJ;;AAAA;AAAA;AAAA,mBAIuB,0JAJvB;;AAAA;AAID+N,0BAJC,iBAImI5L,OAJnI;AAAA;AAAA,mBAKgB4L,cAAc,CAACC,YAAf,CAA4BN,iBAA5B,CALhB;;AAAA;AAKDO,oBALC;AAMLtJ,oBAAQ,CAACC,QAAT,CAAkBsJ,0GAA0B,CAACD,QAAD,CAA5C;AACIE,gBAPC,GAOM,EAPN;;AAAA;AAAA;AAAA,mBASGnQ,+CAAK,CAAC,IAAD,CATR;;AAAA;AAUH,gBAAGsB,CAAC,CAACgD,GAAF,CAAMxF,MAAN,EAAc,8CAAd,CAAH,EAAiE;AAC/D;AACN;AACA;AACMqR,kBAAI,GAAGrR,MAAM,CAACsR,sBAAP,CAA8BC,aAA9B,CAA4CtF,OAA5C,CAAoDuF,SAApD,CAA8D,IAA9D,CAAP;AACAH,kBAAI,CAACI,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACAL,kBAAI,GAAGA,IAAI,CAACM,SAAZ;AACD;;AAjBE;AAAA,gBAkBE,CAAEN,IAlBJ;AAAA;AAAA;AAAA;;AAAA;AAmBL;AACMO,oBApBD,GAoBY,IAAIxQ,6EAAJ,CAAa;AAACuL,mBAAK,EAAE;AAAR,aAAb,CApBZ;AAAA;AAAA,mBAqBWiF,QAAQ,CAACC,IAAT,CACd;AACEhB,qBAAO,EAAPA,OADF;AAEEE,gBAAE,EAAFA,EAFF;AAGED,kBAAI,EAAJA,IAHF;AAIEO,kBAAI,EAAJA,IAJF;AAKEL,yBAAW,EAAXA;AALF,aADc,CArBX;;AAAA;AAqBD5K,eArBC;AAAA,6CA8BE;AAAClD,qBAAO,EAAE;AAAV,aA9BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"737.index.js","sourcesContent":["import AltrpModel from '../../../../editor/src/js/classes/AltrpModel';\r\nimport {togglePopup} from '../store/popup-trigger/actions';\r\nimport {sendEmail} from '../helpers/sendEmail';\r\nimport {changeCurrentModel} from \"../store/current-model/actions\";\r\nconst {\r\n  altrpLogin,\r\n  altrpLogout,\r\n  dataFromTable,\r\n  dataToCSV,\r\n  dataToXML,\r\n  elementsToPdf,\r\n  getAppContext,\r\n  getComponentByElementId,\r\n  getHTMLElementById,\r\n  parseParamsFromString,\r\n  getDataByPath,\r\n  printElements,\r\n  replaceContentWithData,\r\n  scrollToElement,\r\n  setDataByPath,\r\n  dataToXLS,\r\n  delay,\r\n  altrpCompare,\r\n  Resource,\r\n  getWrapperHTMLElementByElement\r\n} = window.altrpHelpers;\r\n\r\n// let  history = require('history');\r\n// // import {history} from 'history';\r\n// console.log(history.history);\r\n/**\r\n * Класс представляющий действия на странице\r\n * @link https://docs.google.com/document/d/1v8Hm1DLkqqwzBeISd8-UvgTqscVxQPtBUtKqBrH1HaU/edit#\r\n * @class AltrpAction\r\n */\r\nclass AltrpAction extends AltrpModel {\r\n  constructor(data, widgetId, element) {\r\n    super(data);\r\n    this.setProperty('_widgetId', widgetId);\r\n    this.setProperty('_element', element);\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Получить id элемента\r\n   * @return {string}\r\n   */\r\n  getElementId() {\r\n    return this.getProperty('_element').getId();\r\n  }\r\n\r\n  /**\r\n   * Получить id для регистрации формы\r\n   * @return {string}\r\n   */\r\n  getFormId() {\r\n    let formId = this.getProperty('form_id');\r\n    if (!formId) {\r\n      return formId;\r\n    }\r\n    if (formId.indexOf('{{') !== -1) {\r\n      formId = replaceContentWithData(formId, this.getCurrentModel().getData());\r\n    }\r\n    return formId;\r\n  }\r\n\r\n  /**\r\n   * Получить URL формы\r\n   * @return {string}\r\n   */\r\n  getFormURL() {\r\n    let formURL = this.getProperty('form_url');\r\n    if (!formURL) {\r\n      return formURL;\r\n    }\r\n    if (formURL.indexOf('{{') !== -1) {\r\n      formURL = replaceContentWithData(\r\n        formURL,\r\n        this.getCurrentModel().getData()\r\n      );\r\n    }\r\n    return formURL;\r\n  }\r\n\r\n  /**\r\n   * Получить компонент обертки для элемента\r\n   * @return {{}}\r\n   */\r\n  getWrapperComponent() {\r\n    return getComponentByElementId(this.getElementId());\r\n  }\r\n\r\n  /**\r\n   * Получить экземпляр элемента\r\n   * @return {FrontElement | null}\r\n   */\r\n  getElement() {\r\n    return this.getProperty('_element');\r\n  }\r\n\r\n  /**\r\n   * Получить экземпляр текущей модели страницы или карточки\r\n   * @return {AltrpModel | null}\r\n   */\r\n  getCurrentModel() {\r\n    const element = this.getElement();\r\n    return element.getCurrentModel();\r\n  }\r\n\r\n  /**\r\n   * Возврашает значение свойства name, если свойство строка, то производит подстановку значений из данных\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getReplacedProperty(name, defaultValue = '') {\r\n    let value = this.getProperty(name, defaultValue);\r\n    if (_.isString(value)) {\r\n      value = replaceContentWithData(value, this.getCurrentModel().getData());\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Инициируем действие\r\n   */\r\n  async init() {\r\n    switch (this.getType()) {\r\n      case 'form': {\r\n        if (!this.getFormURL()) {\r\n          this.setProperty('_form', null);\r\n          return;\r\n        }\r\n        // const formsManager = (\r\n        //   await import(\r\n        //     '../../../../editor/src/js/classes/modules/FormsManager.js'\r\n        //   )\r\n        // ).default;\r\n        // const formOptions = {\r\n        //   dynamicURL: true,\r\n        //   customRoute: this.getFormURL()\r\n        // };\r\n\r\n        // const form = formsManager.registerForm(\r\n        //   this.getFormId(),\r\n        //   '',\r\n        //   this.getProperty('form_method'),\r\n        //   formOptions\r\n        // );\r\n        // this.setProperty('_form', form);\r\n        return;\r\n      }\r\n      case 'login': {\r\n        const form = formsManager.registerForm(\r\n          this.getFormId(),\r\n          'login',\r\n          'POST'\r\n        );\r\n        this.setProperty('_form', form);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить тип действия\r\n   * @return {string}\r\n   */\r\n  getType() {\r\n    return this.getProperty('type');\r\n  }\r\n\r\n  /**\r\n   * Получить тип действия\r\n   * @return {*}\r\n   */\r\n  setType(type) {\r\n    return this.setProperty('type', type);\r\n  }\r\n\r\n  /**\r\n   * Оссинхронно выполняет действие\r\n   * @return {Promise<void>}\r\n   */\r\n  async doAction() {\r\n    let result = {\r\n      success: false\r\n    };\r\n    let confirmText = this.getProperty('confirm');\r\n    confirmText = replaceContentWithData(confirmText, this.getCurrentModel().getData());\r\n\r\n    if (confirmText && !confirm(confirmText)) {\r\n      return {\r\n        success: false,\r\n        message: 'User not Confirm'\r\n      };\r\n    }\r\n    switch (this.getType()) {\r\n      case 'form': {\r\n        result = await this.doActionForm();\r\n      }\r\n        break;\r\n      case 'delay': {\r\n        result = await this.doActionDelay();\r\n      }\r\n        break;\r\n      case 'email': {\r\n        result = await this.doActionEmail();\r\n      }\r\n        break;\r\n      case 'redirect': {\r\n        result = await this.doActionRedirect();\r\n      }\r\n        break;\r\n      case 'toggle_element': {\r\n        result = await this.doActionToggleElements();\r\n      }\r\n        break;\r\n      case 'toggle_popup': {\r\n        result = await this.doActionTogglePopup();\r\n      }\r\n        break;\r\n      case 'print_page': {\r\n        result = await this.doActionPrintPage();\r\n      }\r\n        break;\r\n      case 'print_elements': {\r\n        result = await this.doActionPrintElements();\r\n      }\r\n        break;\r\n      case 'scroll_to_element': {\r\n        result = await this.doActionScrollToElement();\r\n      }\r\n        break;\r\n      case 'scroll_to_top': {\r\n        result = await this.doActionScrollToTop();\r\n      }\r\n        break;\r\n      case 'scroll_to_bottom': {\r\n        result = await this.doActionScrollToBottom();\r\n      }\r\n        break;\r\n      case 'trigger': {\r\n        result = await this.doActionTrigger();\r\n      }\r\n        break;\r\n      case 'page_to_pdf': {\r\n        result = await this.doActionPageToPDF();\r\n      }\r\n        break;\r\n      case 'elements_to_pdf': {\r\n        result = await this.doActionElementsToPDF();\r\n      }\r\n        break;\r\n      case 'data_to_csv': {\r\n        result = await this.doActionDataToCSV();\r\n      }\r\n        break;\r\n      case 'table_to_csv': {\r\n        result = await this.doActionTableToCSV();\r\n      }\r\n        break;\r\n      case 'table_to_xml': {\r\n        result = await this.doActionTableToXML();\r\n      }\r\n        break;\r\n      case 'table_to_xls':\r\n        result = await this.doActionTableToXLS();\r\n        break;\r\n      case 'login': {\r\n        result = await this.doActionLogin();\r\n      }\r\n        break;\r\n      case 'logout': {\r\n        result = await this.doActionLogout();\r\n      }\r\n        break;\r\n      case 'set_data': {\r\n        result = await this.doActionSetData();\r\n      }\r\n        break;\r\n      case 'update_current_datasources': {\r\n        result = await this.doActionUpdateCurrentDatasources();\r\n      }\r\n        break;\r\n      case 'update_current_model': {\r\n        result = await this.doActionUpdateCurrentModel();\r\n      }\r\n        break;\r\n      case 'forms_manipulate': {\r\n        result = await this.doActionFormsManipulate();\r\n      }\r\n        break;\r\n      case 'custom_code': {\r\n        result = await this.doActionCustomCode();\r\n      }\r\n        break;\r\n      case 'play_sound': {\r\n        result = await this.doActionPlaySound();\r\n      }\r\n        break;\r\n      case 'condition': {\r\n        result = await this.doActionCondition();\r\n      }\r\n        break;\r\n      case 'vi_toggle': {\r\n        result = await this.doActionVIToggle();\r\n      }\r\n        break;\r\n      case 'oauth': {\r\n        result = await this.doActionOAuth();\r\n\r\n      }\r\n        break;\r\n    }\r\n    let alertText = '';\r\n    if (result.success) {\r\n      alertText = this.getProperty('alert');\r\n    } else {\r\n      alertText = this.getProperty('reject');\r\n    }\r\n    if (alertText) {\r\n      alertText = replaceContentWithData(alertText, this.getCurrentModel().getData());\r\n      alert(alertText);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Ассинхронно выполняет действие-формы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionForm() {\r\n    // if (! this.getProperty('_form')) {\r\n    //   return {\r\n    //     success: false,\r\n    //     message: 'Нет Формы'\r\n    //   };\r\n    // }\r\n    const formsManager = (\r\n      await import(/* webpackChunkName: 'formsManager' */'../../../../editor/src/js/classes/modules/FormsManager.js')\r\n    ).default;\r\n\r\n    let data = null;\r\n    let customHeaders = null;\r\n    if (this.getProperty('custom_headers')) {\r\n      customHeaders = parseParamsFromString(\r\n        this.getProperty('custom_headers'),\r\n        this.getCurrentModel()\r\n      );\r\n    }\r\n    if (this.getProperty('data')) {\r\n      data = parseParamsFromString(\r\n        this.getProperty('data'),\r\n        getAppContext(this.getCurrentModel()),\r\n        true\r\n      );\r\n      // if (!_.isEmpty(data)) {\r\n      //   return form.submit('', '', data);\r\n      // }\r\n      // return { success: true };\r\n    }\r\n    if (this.getProperty('forms_bulk')) {\r\n      if (\r\n        _.isArray(getDataByPath(this.getProperty('bulk_path'))) &&\r\n        _.get(getDataByPath(this.getProperty('bulk_path')), 'length')\r\n      ) {\r\n        let bulk = getDataByPath(this.getProperty('bulk_path'));\r\n        /**\r\n         * Для получение данных с полей формы, нужно создать форму и вызвать метод getData\r\n         * @type {AltrpForm}\r\n         */\r\n        const form = formsManager.registerForm(\r\n          this.getFormId(),\r\n          '',\r\n          this.getProperty('form_method'),\r\n          {\r\n            customRoute: ''\r\n          }\r\n        );\r\n        data = _.assign(form.getData(), data);\r\n        let bulkRequests = bulk.map(async (item, idx) => {\r\n          if (this.getProperty('data')) {\r\n            data = parseParamsFromString(\r\n              this.getProperty('data'),\r\n              getAppContext(item),\r\n              true\r\n            );\r\n          }\r\n          let url = this.getProperty('form_url');\r\n          url = replaceContentWithData(url, item);\r\n          const form = formsManager.registerForm(\r\n            this.getFormId() + idx,\r\n            '',\r\n            this.getProperty('form_method'),\r\n            {\r\n              customRoute: url\r\n            }\r\n          );\r\n          return await form.submit('', '', data, customHeaders);\r\n        });\r\n        try {\r\n          let res = await Promise.all(bulkRequests);\r\n        } catch (error) {\r\n          console.error(error);\r\n          bulk.forEach((item, idx) => {\r\n            formsManager.deleteFormById(this.getFormId() + idx);\r\n          });\r\n          return {success: false};\r\n        }\r\n        bulk.forEach((item, idx) => {\r\n          formsManager.deleteFormById(this.getFormId() + idx);\r\n        });\r\n      }\r\n\r\n      return {success: true};\r\n    }\r\n    if (this.getProperty('path')) {\r\n      let _data = getDataByPath(this.getProperty('path'), {});\r\n      if (!_.isEmpty(_data)) {\r\n        data = _.assign(_data, data);\r\n      }\r\n    }\r\n    /**\r\n     *\r\n     * @type {AltrpForm}\r\n     */\r\n    // let form = this.getProperty('_form');\r\n    if (!this.getFormURL()) {\r\n      this.setProperty('_form', null);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    const formOptions = {\r\n      dynamicURL: true,\r\n      customRoute: this.getFormURL()\r\n    };\r\n    const form = formsManager.registerForm(\r\n      this.getFormId(),\r\n      '',\r\n      this.getProperty('form_method'),\r\n      formOptions\r\n    );\r\n    let result = {\r\n      success: true\r\n    };\r\n    try {\r\n      const response = await form.submit('', '', data, customHeaders);\r\n      result = _.assign(result, response);\r\n    } catch (error) {\r\n      console.error(error);\r\n      result.error = error;\r\n      result.success = false;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Делает редирект на страницу form_url\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionRedirect() {\r\n    let URL = this.getFormURL();\r\n    if(! URL){\r\n      return {\r\n        success: true\r\n      }\r\n    }\r\n    if (window.frontAppRouter) {\r\n      if (this.getProperty('back')) {\r\n        frontAppRouter.history.goBack();\r\n      } else {\r\n        let innerRedirect = !this.getProperty('outer');\r\n        if (innerRedirect) {\r\n          frontAppRouter.history.push(URL);\r\n        } else {\r\n          window.location.assign(URL);\r\n        }\r\n      }\r\n    } else {\r\n      if (this.getProperty('back')) {\r\n        history.back()\r\n      } else {\r\n        window.location.href = URL;\r\n      }\r\n    }\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Показывает/скрывает элементы по пользовательским ИД\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionToggleElements() {\r\n    let IDs = this.getProperty('elements_ids');\r\n\r\n    if (!IDs) {\r\n      return {success: true};\r\n    }\r\n    IDs = IDs.split(',');\r\n\r\n    IDs.forEach(id => {\r\n      let component = getComponentByElementId(id);\r\n      if (!component && !component.toggleElementDisplay) {\r\n        return;\r\n      }\r\n      component.toggleElementDisplay();\r\n    });\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Показывает/скрывает попап\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTogglePopup() {\r\n    let id = this.getProperty('popup_id');\r\n    if (!id) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    if (window['h-altrp']) {\r\n      const loadPopups = (await import(/* webpackChunkName: 'load-popups' */\"../functions/load-popups\")).default;\r\n      await loadPopups();\r\n    }\r\n    appStore.dispatch(togglePopup(id));\r\n\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Печать страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPrintPage() {\r\n    window.print();\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Печать элементов\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPrintElements() {\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return {success: true};\r\n    }\r\n    IDs = IDs.split(',');\r\n    let elementsToPrint = [];\r\n    IDs.forEach(elementId => {\r\n      if (!elementId || !elementId.trim()) {\r\n        return;\r\n      }\r\n      getHTMLElementById(elementId.trim()) &&\r\n      elementsToPrint.push(getHTMLElementById(elementId));\r\n      if (getComponentByElementId(elementId.trim())?.getStylesHTMLElement) {\r\n        let stylesElement = getComponentByElementId(\r\n          elementId.trim()\r\n        ).getStylesHTMLElement();\r\n        if (stylesElement) {\r\n          elementsToPrint.push(stylesElement);\r\n        }\r\n      }\r\n    });\r\n    if (_.get(window, 'stylesModule.stylesContainer.current')) {\r\n      elementsToPrint.push(\r\n        _.get(window, 'stylesModule.stylesContainer.current')\r\n      );\r\n    }\r\n    elementsToPrint.push(document.head);\r\n    printElements(elementsToPrint);\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Скролл к элементу\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToElement() {\r\n    let elementId = this.getProperty('element_id');\r\n    if (!elementId) {\r\n      return {success: true};\r\n    }\r\n    elementId = elementId.trim();\r\n    const element = getHTMLElementById(elementId);\r\n    let scroller = window.mainScrollbars;\r\n    if (!scroller) {\r\n      scroller = document.querySelector('.front-app-content');\r\n    }\r\n    if (!scroller) {\r\n      scroller = window;\r\n    }\r\n    if (element) {\r\n      scrollToElement(scroller, element);\r\n    }\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Скролл на верх страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToTop() {\r\n    if (window.mainScrollbars) {\r\n      window.mainScrollbars.scrollTop(0);\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    let scroller = document.querySelector('.front-app-content');\r\n\r\n    if (!scroller) {\r\n      scroller = window;\r\n    }\r\n    scroller.scrollTo({top: 0, left: 0, behavior: 'smooth'})\r\n\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Скролл на верх страницы\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionScrollToBottom() {\r\n    const routeContent = document.getElementById('route-content');\r\n    if (!routeContent) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    if (window.mainScrollbars) {\r\n      window.mainScrollbars.scrollTop(routeContent.offsetHeight);\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n\r\n    let scroller = document.querySelector('.front-app-content');\r\n\r\n    if (!scroller) {\r\n      scroller = window;\r\n    }\r\n    scroller.scrollTo({left: 0, top: document.querySelector('.route-content').offsetHeight, behavior: 'smooth'})\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Страницу в PDF\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionPageToPDF() {\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    const elements = [];\r\n\r\n    elements.push(document.getElementById('route-content'));\r\n    return await elementsToPdf(elements, filename);\r\n  }\r\n\r\n  /**\r\n   * Элементы в PDF\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionElementsToPDF() {\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    const elements = [];\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return {success: true};\r\n    }\r\n    IDs = IDs.split(',');\r\n    IDs.forEach(elementId => {\r\n      if (!elementId || !elementId.trim()) {\r\n        return;\r\n      }\r\n      getHTMLElementById(elementId.trim()) &&\r\n      elements.push(getHTMLElementById(elementId));\r\n    });\r\n    return await elementsToPdf(elements, filename);\r\n  }\r\n\r\n  /**\r\n   * Данные в CSV-файл\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionDataToCSV() {\r\n    let data = getDataByPath(this.getProperty('path'));\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    try {\r\n      return await dataToCSV(data, filename);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * HTML-Таблицу в CSV-файл\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTableToCSV() {\r\n    let elementId = this.getProperty('element_id');\r\n    if (!elementId) {\r\n      return {success: true};\r\n    }\r\n    elementId = elementId.trim();\r\n    const element = getHTMLElementById(elementId);\r\n    if (!element) {\r\n      return {success: true};\r\n    }\r\n    let data;\r\n    try {\r\n      data = dataFromTable(element);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n    if (_.isEmpty(data)) {\r\n      return {success: true};\r\n    }\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    try {\r\n      return await dataToCSV(data, filename);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * HTML-Таблицу в XML-файл\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTableToXML() {\r\n    let elementId = this.getProperty('element_id');\r\n    if (!elementId) {\r\n      return {success: true};\r\n    }\r\n    elementId = elementId.trim();\r\n    const element = getHTMLElementById(elementId);\r\n    if (!element) {\r\n      return {success: true};\r\n    }\r\n    let data;\r\n    try {\r\n      data = dataFromTable(element);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n    if (_.isEmpty(data)) {\r\n      return {success: true};\r\n    }\r\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    try {\r\n      return await dataToXML(data, filename);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * HTML-таблицу в XLS-файл\r\n   * @return {Promise}\r\n   */\r\n  async doActionTableToXLS() {\r\n\r\n    let data = [];\r\n\r\n    if (this.getProperty('all_sources')) {\r\n      const all_sources_path = this.getProperty('all_sources_path');\r\n      if (all_sources_path) data = getDataByPath(all_sources_path, {});\r\n      data = {data};\r\n\r\n    } else {\r\n      const elementId = this.getProperty('element_id').trim();\r\n\r\n      if (!elementId) {\r\n        console.error('Element ID is not set');\r\n        return {success: true};\r\n      }\r\n\r\n      const table = getHTMLElementById(elementId);\r\n      if (!table) {\r\n        console.error('Table with provided ID is not found');\r\n        return {success: true};\r\n      }\r\n\r\n      data = dataFromTable(table);\r\n\r\n      const formattedData = [];\r\n\r\n      _.each(data, row => formattedData.push(Object.values(row)));\r\n      let rawTemplateData = this.getProperty('template_data');\r\n      if (rawTemplateData) {\r\n        const parsedTemplateData = rawTemplateData\r\n          .split('\\n')\r\n          .reduce((data, row) => {\r\n            const keyValuePair = row.split('=');\r\n            data[keyValuePair[0]] = keyValuePair[1];\r\n            return data;\r\n          }, {});\r\n        data = {...parsedTemplateData, data: formattedData};\r\n      } else {\r\n        data = {data};\r\n      }\r\n    }\r\n\r\n    const filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\r\n    const templateName = this.getProperty('template_name');\r\n\r\n    try {\r\n      const blob = await dataToXLS(data, filename, templateName);\r\n      let link = document.createElement('a');\r\n      link.setAttribute('href', window.URL.createObjectURL(blob));\r\n      link.setAttribute('download', filename + '.xlsx');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      return {success: true};\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {success: false};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * действие-логин\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionLogin() {\r\n    /**\r\n     *\r\n     * @member {AltrpForm} form\r\n     */\r\n    let form = this.getProperty('_form');\r\n    let success = true;\r\n    form.fields.forEach(field => {\r\n      if (!field.fieldValidate()) {\r\n        success = false;\r\n      }\r\n    });\r\n    if (!success) {\r\n      return {success: false};\r\n    }\r\n\r\n    return await altrpLogin(form.getData(), this.getFormId());\r\n  }\r\n\r\n  /**\r\n   * действие-выход из приложения\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionLogout() {\r\n    return await altrpLogout();\r\n  }\r\n\r\n  /**\r\n   * действие-установка значения по для пути `path`\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionSetData() {\r\n    let paths = this.getProperty('path');\r\n    const result = {\r\n      success: true\r\n    };\r\n    if (!paths) {\r\n      return result;\r\n    }\r\n    if (paths.indexOf(',') !== -1) {\r\n      paths = paths.split(',').map(path => path.trim());\r\n    } else {\r\n      paths = [paths];\r\n    }\r\n    for (let path of paths) {\r\n      path = replaceContentWithData(path, this.getCurrentModel().getData());\r\n      let value = this.getProperty('value') || '';\r\n      value = value.trim();\r\n      const setType = this.getProperty('set_type');\r\n      let count = this.getProperty('count');\r\n      switch (setType) {\r\n        case 'toggle': {\r\n          value = !getDataByPath(path);\r\n          result.success = setDataByPath(path, value);\r\n        }\r\n          break;\r\n        case 'set': {\r\n          if (\r\n            value.split(/\\r?\\n/).length === 1 &&\r\n            value.indexOf('{{') === 0 &&\r\n            value.indexOf('}}') === value.length - 2\r\n          ) {\r\n            value = getDataByPath(\r\n              value.replace('{{', '').replace('}}', ''),\r\n              null,\r\n              this.getCurrentModel()\r\n            );\r\n          } else if (value.indexOf('|') !== -1) {\r\n            value = parseParamsFromString(\r\n              value,\r\n              this.getCurrentModel(),\r\n              true\r\n            );\r\n          }\r\n          result.success = setDataByPath(path, value);\r\n        }\r\n          break;\r\n        case 'toggle_set': {\r\n          let currentValue = getDataByPath(path);\r\n          value = value.split('\\n').map(v => v.trim());\r\n          if (value.length === 1) {\r\n            value.push('');\r\n          }\r\n          let nextIndex = value.indexOf(currentValue) + 1;\r\n          if (nextIndex >= value.length) {\r\n            nextIndex = 0;\r\n          }\r\n          value = value[nextIndex] || '';\r\n          result.success = setDataByPath(path, value);\r\n        }\r\n          break;\r\n        case 'increment': {\r\n          let currentValue = getDataByPath(path);\r\n          currentValue = currentValue\r\n            ? _.isNaN(Number(currentValue))\r\n              ? 1\r\n              : Number(currentValue)\r\n            : Number(!!currentValue);\r\n          count = Number(count) || 1;\r\n          currentValue += count;\r\n          result.success = setDataByPath(path, currentValue);\r\n        }\r\n          break;\r\n        case 'decrement': {\r\n          let currentValue = getDataByPath(path);\r\n          currentValue = currentValue\r\n            ? _.isNaN(Number(currentValue))\r\n              ? 1\r\n              : Number(currentValue)\r\n            : Number(!!currentValue);\r\n          count = Number(count) || 1;\r\n          currentValue -= count;\r\n          result.success = setDataByPath(path, currentValue);\r\n        }\r\n          break;\r\n        case 'push_items': {\r\n          let currentValue = getDataByPath(path);\r\n          let item = {};\r\n          if (!_.isArray(currentValue)) {\r\n            currentValue = [];\r\n          }\r\n          currentValue = [...currentValue];\r\n          if (_.isObject(getDataByPath(value))) {\r\n            item = getDataByPath(value);\r\n          }\r\n          count = Number(count) || 1;\r\n          if (count < 0) {\r\n            count = 1;\r\n          }\r\n          while (count) {\r\n            _.isArray(item)\r\n              ? currentValue.push([...item])\r\n              : currentValue.push({...item});\r\n            --count;\r\n          }\r\n          result.success = setDataByPath(path, currentValue);\r\n        }\r\n          break;\r\n        case 'remove_items': {\r\n          let items = path.split(/\\r?\\n/);\r\n          items.forEach(i => {\r\n            if (!i) {\r\n              return;\r\n            }\r\n            i = i.trim();\r\n            if (!i) {\r\n              return;\r\n            }\r\n            if (i.indexOf('{{') !== -1) {\r\n              i = replaceContentWithData(i, this.getCurrentModel().getData());\r\n            }\r\n            let item = getDataByPath(i);\r\n            if (!item) {\r\n              return;\r\n            }\r\n            let listPath = i.replace(/.\\d+$/, '').trim();\r\n            if (!listPath) {\r\n              return;\r\n            }\r\n            let list = getDataByPath(listPath);\r\n            if (!_.isArray(list)) {\r\n              return;\r\n            }\r\n            list = [...list];\r\n\r\n            list = list.filter(_item => _item !== item);\r\n            setDataByPath(listPath, list);\r\n          });\r\n          result.success = true;\r\n        }\r\n          break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * действие - манипуляция с элементами форм\r\n   * @return {Promise<{}>}\r\n   */\r\n  doActionFormsManipulate() {\r\n    let IDs = this.getProperty('elements_ids');\r\n    if (!IDs) {\r\n      return {success: true};\r\n    }\r\n    IDs = IDs.split(',');\r\n    const change = this.getProperty('forms_change');\r\n    IDs.forEach(id => {\r\n      let component = getComponentByElementId(id);\r\n      switch (change) {\r\n        case 'select_all': {\r\n          if (_.get(component, 'elementRef.current.selectAll')) {\r\n            component.elementRef.current.selectAll();\r\n          }\r\n        }\r\n          break;\r\n        case 'clear': {\r\n          if (_.get(component, 'elementRef.current.clearValue')) {\r\n            component.elementRef.current.clearValue();\r\n          }\r\n        }\r\n          break;\r\n      }\r\n    });\r\n    return {success: true};\r\n  }\r\n\r\n  /**\r\n   * действие - выполнение пользовательского кода\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionCustomCode() {\r\n    let code = this.getProperty('code');\r\n    try {\r\n      code = replaceContentWithData(code, this.getCurrentModel().getData())\r\n      eval(code);\r\n      return {success: true};\r\n    } catch (error) {\r\n      console.error('Evaluate error in doActionCustomCode: \"' + error.message + '\"');\r\n      return {success: false};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Действие - обновление текущей модели по AJAX\r\n   * Action - updating the current model via AJAX\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionUpdateCurrentModel() {\r\n\r\n    let modelName = window?.currentPage?.model_name\r\n    if (!modelName) {\r\n      return {success: true}\r\n    }\r\n    let modelId = window?.model_data?.id;\r\n    if (!modelId) {\r\n      return {success: true}\r\n    }\r\n    try {\r\n      let model = await new Resource({\r\n        route: `/ajax/models/${modelName}`\r\n      }).get(modelId);\r\n      if (_.isObject(model.data)) {\r\n        model = model.data\r\n      }\r\n      const oldModel = window.appStore.getState().currentModel.getData();\r\n      model.altrpModelUpdated = true;\r\n\r\n      if (!_.isEqual(model, oldModel)) {\r\n        appStore.dispatch(changeCurrentModel({altrpModelUpdated: false}));\r\n        appStore.dispatch(changeCurrentModel(model));\r\n      }\r\n      return {success: true}\r\n\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * действие - обновление текущего хранилища\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionUpdateCurrentDatasources() {\r\n    let aliases = this.getProperty('aliases') || '';\r\n    aliases = aliases\r\n      .split(',')\r\n      .map(alias => alias.trim())\r\n      .filter(alias => alias);\r\n    const allDataSources = window.dataStorageUpdater.getProperty(\r\n      'currentDataSources'\r\n    );\r\n    const dataSourcesToUpdate = allDataSources.filter(dataSource => {\r\n      return aliases.indexOf(dataSource.getProperty('alias')) !== -1;\r\n    });\r\n    /**\r\n     * @type {DataStorageUpdater}\r\n     */\r\n    await window.dataStorageUpdater.updateCurrent(dataSourcesToUpdate, false);\r\n    return {success: true};\r\n  }\r\n\r\n  /**\r\n   * Триггер события на другом компоненте\r\n   * @return {Promise<{}>}\r\n   */\r\n  async doActionTrigger() {\r\n    let elementId = this.getProperty('element_id');\r\n    let element = getComponentByElementId(elementId);\r\n    let action = this.getProperty('action');\r\n    if (_.isFunction(element[action])) {\r\n      element[action]();\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    try {\r\n      if(_.isFunction(element.elementRef.current[action])){\r\n        let result = await element.elementRef.current[action]();\r\n        if(_.isObject(result)){\r\n          return result\r\n        }\r\n        return {success:true}\r\n      }\r\n      element.elementRef.current.fireAction(action);\r\n      return {\r\n        success: true\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Отправка почты\r\n   */\r\n  async doActionEmail() {\r\n    let templateGUID = this.getProperty('email_template');\r\n    if (!templateGUID) {\r\n      return {success: true};\r\n    }\r\n    let res = {success: false};\r\n    try {\r\n      res = await sendEmail(\r\n        templateGUID,\r\n        this.getReplacedProperty('subject'),\r\n        this.getReplacedProperty('from'),\r\n        this.getReplacedProperty('to'),\r\n        this.getReplacedProperty('attachments')\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Добавляем временную задержку в милисекундах\r\n   */\r\n  async doActionDelay() {\r\n    await delay(this.getProperty('milliseconds') || 0);\r\n    return {success: true};\r\n  }\r\n\r\n  /**\r\n   * Воспроизводим звук\r\n   * @return {Promise<{success: boolean}>}\r\n   */\r\n  async doActionPlaySound() {\r\n    const duration = this.getProperty('milliseconds') || 0;\r\n    const url = this.getProperty('media_url');\r\n    const loop = this.getProperty('loop');\r\n    if (url) {\r\n      const {playSound} = await import(/* webpackChunkName: 'helpers-sounds' */'../helpers/sounds');\r\n      playSound(url, loop, duration);\r\n      await delay(20);\r\n    }\r\n    return {success: true};\r\n  }\r\n\r\n  /**\r\n   * Проверка условий\r\n   * @return {Promise<{success: boolean}>}\r\n   */\r\n  async doActionCondition() {\r\n    const compare = this.getProperty('compare');\r\n    let conditionLeft = this.getProperty('condition_left');\r\n    let conditionRight = this.getProperty('condition_right');\r\n    conditionLeft = getDataByPath(conditionLeft, null , this.getCurrentModel().getData());\r\n    conditionRight = replaceContentWithData(conditionRight, this.getCurrentModel().getData());\r\n    const res = altrpCompare(conditionLeft, conditionRight, compare);\r\n    return {success: res};\r\n  }\r\n\r\n  /**\r\n   * Версия сайта для слабовидящих\r\n   * @return {Promise<void>}\r\n   */\r\n  async doActionVIToggle() {\r\n    try {\r\n      const {loadVIPlugin} = (await import(/* webpackChunkName 'loadVIPlugin' */'../helpers/plugins'))\r\n      await loadVIPlugin();\r\n    } catch (error) {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n    // console.log($);\r\n    let HTMLWrapper = getWrapperHTMLElementByElement(this.getElement());\r\n    // if(HTMLWrapper){\r\n    //   HTMLWrapper.classList.add('bvi-hide');\r\n    // }\r\n\r\n    // $.bvi({\r\n    //   bvi_target: '.altrp-btn',\r\n    //\r\n    // });\r\n\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Promise<void>}\r\n   */\r\n  async doActionOAuth() {\r\n    const OIDC  = await import (/* webpackChunkName: 'OIDC' */\"oidc-client\");\r\n    const {WebStorageStateStore, UserManager, authority, OidcClient} = OIDC;\r\n    (window.altrpLibs = window.altrpLibs || {}).OIDC = OIDC\r\n\r\n    const method = this.getProperty('method')\r\n    if( ! method){\r\n      return {\r\n        success: true,\r\n      }\r\n    }\r\n    let settings = {\r\n      client_id: 'AisOrder',\r\n      redirect_uri: `http://zayavka.geobuilder.ru/login/laravelpassport/callback`,\r\n      post_logout_redirect_uri: `http://zayavka.geobuilder.ru/login/laravelpassport/callback`,\r\n      response_type: 'token id_token',\r\n      scope: 'openid profile',\r\n      authority:'https://fs.geobuilder.ru/idp',\r\n      automaticSilentRenew: false,\r\n      userStore: new WebStorageStateStore({ store: window.localStorage }),\r\n      filterProtocolClaims: true,\r\n      loadUserInfo: true,\r\n      monitorSession: false,\r\n      checkSessionInterval: 3600000\r\n    };\r\n    const _manager = new UserManager(settings);\r\n    console.log(_manager);\r\n    settings = {\r\n      client_id: this.getProperty('client_id'),\r\n      redirect_uri: this.getProperty('redirect_uri'),\r\n      post_logout_redirect_uri: this.getProperty('post_logout_redirect_uri'),\r\n      response_type: this.getProperty('response_type'),\r\n      scope: this.getProperty('scope'),\r\n      authority:this.getProperty('authority'),\r\n      automaticSilentRenew: this.getProperty('automaticSilentRenew'),\r\n      userStore: new WebStorageStateStore({ store: window.localStorage }),\r\n      filterProtocolClaims: this.getProperty('filterProtocolClaims'),\r\n      loadUserInfo: this.getProperty('loadUserInfo'),\r\n      monitorSession: this.getProperty('monitorSession'),\r\n      checkSessionInterval: this.getProperty('checkSessionInterval')\r\n    };\r\n    const manager = new UserManager(settings);\r\n    // console.log( manager);\r\n    // console.log(await manager.getUser());\r\n    let result;\r\n    console.log(method);\r\n\r\n    if(_.isFunction(manager[method])){\r\n      try {\r\n        result =await manager[method]();\r\n      } catch (e) {\r\n        return {success:false}\r\n      }\r\n    }\r\n    console.log(result);\r\n    // await manager.signoutRedirect();\r\n    return {success:true}\r\n  }\r\n}\r\n\r\nexport default AltrpAction;\r\n","/**\r\n * @class ActionsManager\r\n * Класс хранит действия для виджетов и вызывает их последовательно в порядке полученного списка\r\n * @member {} data - где хранятся действия виджета сгруппированные по типу события {\r\n *  widgetId:{\r\n *    eventName: []\r\n *  }\r\n * }\r\n */\r\nimport AltrpAction from \"../AltrpAction\";\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nconst {isEditor, } = window.altrpHelpers;\r\n\r\nclass ActionsManager extends AltrpModel{\r\n  /**\r\n   * Регистрирует действия для определенного виджета\r\n   * @param {string} widgetId\r\n   * @param {array} actions\r\n   * @param {string} eventName\r\n   * @param {FrontElement | null} element\r\n   * @param {*} context\r\n   */\r\n  registerWidgetActions(widgetId, actions = [], eventName = 'click', element = null, context = null ){\r\n    if((! actions) || ! actions.length){\r\n      return null;\r\n    }\r\n    actions = actions.filter(a=>a.type).map(a=>{\r\n      return new AltrpAction(a, widgetId, element);\r\n    });\r\n    return this.setProperty(`actions.${widgetId}.${eventName}`, actions);\r\n  }\r\n\r\n  /**\r\n   * удаляет все действия виджета\r\n   * @param {string} widgetId\r\n   */\r\n  unregisterWidgetActions(widgetId){\r\n    return this.unsetProperty(`actions.${widgetId}`)\r\n  }\r\n\r\n  /**\r\n   * Вызывает все зарегистрированные действия определенного типа для виджета\r\n   * @param {string} widgetId\r\n   * @param {string} eventName\r\n   * @param {[]} preventedActions\r\n   * @param {FrontElement} element\r\n   * @return {Promise<void>}\r\n   */\r\n  async callAllWidgetActions(widgetId, eventName = 'click', preventedActions, element){\r\n    if(isEditor()){\r\n      return\r\n    }\r\n    if(this.getProperty(`widget.statuses.${widgetId}.${eventName}`) === 'inAction'){\r\n      return\r\n    }\r\n    this.setProperty(`widget.statuses.${widgetId}.${eventName}`, 'inAction')\r\n    preventedActions = preventedActions || [];\r\n    let actions = preventedActions;\r\n    const errors = [];\r\n    actions = actions.map(a=> new AltrpAction(a, widgetId, element))\r\n    // if(! actions.length && preventedActions.length && element){\r\n    //   this.registerWidgetActions(widgetId, preventedActions, eventName, element);\r\n    //   actions = this.getProperty(`actions.${widgetId}.${eventName}`, []);\r\n    // }\r\n    for (let action of actions){\r\n      try {\r\n        let result = await action.doAction();\r\n        if(! result.success){\r\n          if(result.error){\r\n            console.error(result.error);\r\n            errors.push(result.error);\r\n          }\r\n          break;\r\n        }\r\n      } catch(error){\r\n        errors.push(error);\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.setProperty(`widget.statuses.${widgetId}.${eventName}`, 'noAction')\r\n    if (errors.length){\r\n      return {\r\n        success: false,\r\n        errors\r\n      }\r\n    }\r\n    return {success: true};\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @type {ActionsManager}\r\n */\r\nwindow.actionsManager = new ActionsManager;\r\nexport default window.actionsManager\r\n","import {changeCurrentEmailTemplate} from \"../store/current-email-template/actions\";\r\nimport {delay} from '../helpers';\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\n/**\r\n * Отправляет шаблон письма на бэкенд\r\n * @param {string | null}emailTemplateGUID\r\n * @param {string} subject\r\n * @param {string} from\r\n * @param {string} to\r\n * @param {string} attachments\r\n * @return {Promise<void>}\r\n */\r\nexport async function sendEmail(emailTemplateGUID = null, subject = 'Message', from = '', to = '', attachments = ''){\r\n  if(! emailTemplateGUID){\r\n    return {success: true};\r\n  }\r\n  let templateLoader = (await import(/* webpackChunkName: 'TemplateLoader' */'../../../../editor/src/js/classes/modules/TemplateLoader')).default;\r\n  let template = await templateLoader.loadTemplate(emailTemplateGUID);\r\n  appStore.dispatch(changeCurrentEmailTemplate(template));\r\n  let html = '';\r\n  do{\r\n    await delay(1500);\r\n    if(_.get(window, 'emailTemplatesRenderer.emailTemplate.current')){\r\n      /**\r\n       * @var  {HTMLElement} html\r\n       */\r\n      html = window.emailTemplatesRenderer.emailTemplate.current.cloneNode(true);\r\n      html.style.display = 'table';\r\n      html = html.outerHTML;\r\n    }\r\n  }while(! html);\r\n  // appStore.dispatch(changeCurrentEmailTemplate(null));\r\n  const resource = new Resource({route: '/ajax/feedback-html'});\r\n  let res = await resource.post(\r\n    {\r\n      subject,\r\n      to,\r\n      from,\r\n      html,\r\n      attachments,\r\n    }\r\n  );\r\n  return {success: true}\r\n}\r\n"],"sourceRoot":""}