{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/classes/AltrpAction.js","webpack:///./resources/modules/front-app/src/js/classes/modules/ActionsManager.js","webpack:///./resources/modules/front-app/src/js/helpers/sendEmail.js"],"names":["window","altrpHelpers","altrpLogin","altrpLogout","dataFromTable","dataToCSV","dataToXML","elementsToPdf","getAppContext","getComponentByElementId","getHTMLElementById","parseParamsFromString","getDataByPath","printElements","replaceContentWithData","scrollToElement","setDataByPath","dataToXLS","delay","altrpCompare","Resource","getWrapperHTMLElementByElement","AltrpAction","data","widgetId","element","metaMaskConnect","path","getProperty","currentValue","ethereum","success","request","method","accounts","length","requestAccounts","setProperty","init","getId","formId","indexOf","getCurrentModel","getData","formURL","getElementId","getElement","name","defaultValue","value","_","isString","getType","getFormURL","form","formsManager","registerForm","getFormId","type","result","confirmText","confirm","message","doActionForm","doActionDelay","doActionEmail","doActionRedirect","doActionToggleElements","doActionTogglePopup","doActionPrintPage","doActionPrintElements","doActionScrollToElement","doActionScrollToTop","doActionScrollToBottom","doActionTrigger","doActionPageToPDF","doActionElementsToPDF","doActionDataToCSV","doActionTableToCSV","doActionTableToXML","doActionTableToXLS","doActionLogin","doActionLogout","doActionSetData","doActionUpdateCurrentDatasources","doActionUpdateCurrentModel","doActionFormsManipulate","doActionCustomCode","doActionPlaySound","doActionCondition","doActionVIToggle","doActionOAuth","alertText","alert","default","customHeaders","isArray","get","bulk","customRoute","assign","bulkRequests","map","item","idx","url","submit","Promise","all","res","console","error","forEach","deleteFormById","_data","isEmpty","formOptions","dynamicURL","response","URL","frontAppRouter","history","goBack","innerRedirect","push","location","back","href","IDs","split","id","component","toggleElementDisplay","loadPopups","appStore","dispatch","togglePopup","print","elementsToPrint","elementId","trim","getStylesHTMLElement","stylesElement","document","head","scroller","mainScrollbars","querySelector","scrollTop","scrollTo","top","left","behavior","routeContent","getElementById","offsetHeight","filename","elements","all_sources_path","table","formattedData","each","row","Object","values","rawTemplateData","parsedTemplateData","reduce","keyValuePair","templateName","blob","link","createElement","setAttribute","createObjectURL","body","appendChild","click","removeChild","fields","field","fieldValidate","paths","setType","count","replace","v","nextIndex","isNaN","Number","isObject","items","i","listPath","list","filter","_item","change","elementRef","current","selectAll","clearValue","code","eval","modelName","currentPage","model_name","modelId","model_data","route","model","oldModel","getState","currentModel","altrpModelUpdated","isEqual","changeCurrentModel","aliases","alias","allDataSources","dataStorageUpdater","dataSourcesToUpdate","dataSource","updateCurrent","action","isFunction","fireAction","templateGUID","sendEmail","getReplacedProperty","duration","loop","playSound","compare","conditionLeft","conditionRight","loadVIPlugin","HTMLWrapper","OIDC","WebStorageStateStore","UserManager","authority","OidcClient","altrpLibs","settings","client_id","redirect_uri","post_logout_redirect_uri","response_type","scope","automaticSilentRenew","userStore","store","localStorage","filterProtocolClaims","loadUserInfo","monitorSession","checkSessionInterval","_manager","log","manager","AltrpModel","isEditor","ActionsManager","actions","eventName","context","a","unsetProperty","preventedActions","errors","doAction","actionsManager","emailTemplateGUID","subject","from","to","attachments","templateLoader","loadTemplate","template","changeCurrentEmailTemplate","html","emailTemplatesRenderer","emailTemplate","cloneNode","style","display","outerHTML","resource","post"],"mappings":"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","file":"737.index.js","sourcesContent":["import AltrpModel from '../../../../editor/src/js/classes/AltrpModel';\nimport {togglePopup} from '../store/popup-trigger/actions';\nimport {sendEmail} from '../helpers/sendEmail';\nimport {changeCurrentModel} from \"../store/current-model/actions\";\nconst {\n  altrpLogin,\n  altrpLogout,\n  dataFromTable,\n  dataToCSV,\n  dataToXML,\n  elementsToPdf,\n  getAppContext,\n  getComponentByElementId,\n  getHTMLElementById,\n  parseParamsFromString,\n  getDataByPath,\n  printElements,\n  replaceContentWithData,\n  scrollToElement,\n  setDataByPath,\n  dataToXLS,\n  delay,\n  altrpCompare,\n  Resource,\n  getWrapperHTMLElementByElement\n} = window.altrpHelpers;\n\n// let  history = require('history');\n// // import {history} from 'history';\n// console.log(history.history);\n/**\n * Класс представляющий действия на странице\n * @link https://docs.google.com/document/d/1v8Hm1DLkqqwzBeISd8-UvgTqscVxQPtBUtKqBrH1HaU/edit#\n * @class AltrpAction\n */\nclass AltrpAction extends AltrpModel {\n  constructor(data, widgetId, element) {\n    super(data);\n    this.setProperty('_widgetId', widgetId);\n    this.setProperty('_element', element);\n    this.init();\n  }\n\n  /**\n   * Получить id элемента\n   * @return {string}\n   */\n  getElementId() {\n    return this.getProperty('_element').getId();\n  }\n\n  /**\n   * Получить id для регистрации формы\n   * @return {string}\n   */\n  getFormId() {\n    let formId = this.getProperty('form_id');\n    if (!formId) {\n      return formId;\n    }\n    if (formId.indexOf('{{') !== -1) {\n      formId = replaceContentWithData(formId, this.getCurrentModel().getData());\n    }\n    return formId;\n  }\n\n  /**\n   * Получить URL формы\n   * @return {string}\n   */\n  getFormURL() {\n    let formURL = this.getProperty('form_url');\n    if (!formURL) {\n      return formURL;\n    }\n    if (formURL.indexOf('{{') !== -1) {\n      formURL = replaceContentWithData(\n        formURL,\n        this.getCurrentModel().getData()\n      );\n    }\n    return formURL;\n  }\n\n  /**\n   * Получить компонент обертки для элемента\n   * @return {{}}\n   */\n  getWrapperComponent() {\n    return getComponentByElementId(this.getElementId());\n  }\n\n  /**\n   * Получить экземпляр элемента\n   * @return {FrontElement | null}\n   */\n  getElement() {\n    return this.getProperty('_element');\n  }\n\n  /**\n   * Получить экземпляр текущей модели страницы или карточки\n   * @return {AltrpModel | null}\n   */\n  getCurrentModel() {\n    const element = this.getElement();\n    return element.getCurrentModel();\n  }\n\n  /**\n   * Возврашает значение свойства name, если свойство строка, то производит подстановку значений из данных\n   * @params {string} name\n   * @params {*} defaultValue\n   * @return {*}\n   */\n  getReplacedProperty(name, defaultValue = '') {\n    let value = this.getProperty(name, defaultValue);\n    if (_.isString(value)) {\n      value = replaceContentWithData(value, this.getCurrentModel().getData());\n    }\n    return value;\n  }\n\n  /**\n   * Инициируем действие\n   */\n  async init() {\n    switch (this.getType()) {\n      case 'form': {\n        if (!this.getFormURL()) {\n          this.setProperty('_form', null);\n          return;\n        }\n        // const formsManager = (\n        //   await import(\n        //     '../../../../editor/src/js/classes/modules/FormsManager.js'\n        //   )\n        // ).default;\n        // const formOptions = {\n        //   dynamicURL: true,\n        //   customRoute: this.getFormURL()\n        // };\n\n        // const form = formsManager.registerForm(\n        //   this.getFormId(),\n        //   '',\n        //   this.getProperty('form_method'),\n        //   formOptions\n        // );\n        // this.setProperty('_form', form);\n        return;\n      }\n      case 'login': {\n        const form = formsManager.registerForm(\n          this.getFormId(),\n          'login',\n          'POST'\n        );\n        this.setProperty('_form', form);\n      }\n    }\n  }\n\n  /**\n   * Получить тип действия\n   * @return {string}\n   */\n  getType() {\n    return this.getProperty('type');\n  }\n\n  /**\n   * Получить тип действия\n   * @return {*}\n   */\n  setType(type) {\n    return this.setProperty('type', type);\n  }\n\n  /**\n   * Оссинхронно выполняет действие\n   * @return {Promise<void>}\n   */\n  async doAction() {\n    let result = {\n      success: false\n    };\n    let confirmText = this.getProperty('confirm');\n    confirmText = replaceContentWithData(confirmText, this.getCurrentModel().getData());\n\n    if (confirmText && !confirm(confirmText)) {\n      return {\n        success: false,\n        message: 'User not Confirm'\n      };\n    }\n    switch (this.getType()) {\n      case 'form': {\n        result = await this.doActionForm();\n      }\n        break;\n      case 'delay': {\n        result = await this.doActionDelay();\n      }\n        break;\n      case 'email': {\n        result = await this.doActionEmail();\n      }\n        break;\n      case 'redirect': {\n        result = await this.doActionRedirect();\n      }\n        break;\n      case 'toggle_element': {\n        result = await this.doActionToggleElements();\n      }\n        break;\n      case 'toggle_popup': {\n        result = await this.doActionTogglePopup();\n      }\n        break;\n      case 'print_page': {\n        result = await this.doActionPrintPage();\n      }\n        break;\n      case 'print_elements': {\n        result = await this.doActionPrintElements();\n      }\n        break;\n      case 'scroll_to_element': {\n        result = await this.doActionScrollToElement();\n      }\n        break;\n      case 'scroll_to_top': {\n        result = await this.doActionScrollToTop();\n      }\n        break;\n      case 'scroll_to_bottom': {\n        result = await this.doActionScrollToBottom();\n      }\n        break;\n      case 'trigger': {\n        result = await this.doActionTrigger();\n      }\n        break;\n      case 'page_to_pdf': {\n        result = await this.doActionPageToPDF();\n      }\n        break;\n      case 'elements_to_pdf': {\n        result = await this.doActionElementsToPDF();\n      }\n        break;\n      case 'data_to_csv': {\n        result = await this.doActionDataToCSV();\n      }\n        break;\n      case 'table_to_csv': {\n        result = await this.doActionTableToCSV();\n      }\n        break;\n      case 'table_to_xml': {\n        result = await this.doActionTableToXML();\n      }\n        break;\n      case 'table_to_xls':\n        result = await this.doActionTableToXLS();\n        break;\n      case 'login': {\n        result = await this.doActionLogin();\n      }\n        break;\n      case 'logout': {\n        result = await this.doActionLogout();\n      }\n        break;\n      case 'set_data': {\n        result = await this.doActionSetData();\n      }\n        break;\n      case 'update_current_datasources': {\n        result = await this.doActionUpdateCurrentDatasources();\n      }\n        break;\n      case 'update_current_model': {\n        result = await this.doActionUpdateCurrentModel();\n      }\n        break;\n      case 'forms_manipulate': {\n        result = await this.doActionFormsManipulate();\n      }\n        break;\n      case 'custom_code': {\n        result = await this.doActionCustomCode();\n      }\n        break;\n      case 'play_sound': {\n        result = await this.doActionPlaySound();\n      }\n        break;\n      case 'condition': {\n        result = await this.doActionCondition();\n      }\n        break;\n      case 'vi_toggle': {\n        result = await this.doActionVIToggle();\n      }\n        break;\n      case 'oauth': {\n        result = await this.doActionOAuth();\n      }\n        break;\n      case 'metamask_connect': {\n        result = await this.metaMaskConnect();\n      }\n        break;\n    }\n    let alertText = '';\n    if (result.success) {\n      alertText = this.getProperty('alert');\n    } else {\n      alertText = this.getProperty('reject');\n    }\n    if (alertText) {\n      alertText = replaceContentWithData(alertText, this.getCurrentModel().getData());\n      alert(alertText);\n    }\n    return result;\n  }\n\n  /**\n   * Ассинхронно выполняет действие-формы\n   * @return {Promise<{}>}\n   */\n  async doActionForm() {\n    // if (! this.getProperty('_form')) {\n    //   return {\n    //     success: false,\n    //     message: 'Нет Формы'\n    //   };\n    // }\n    const formsManager = (\n      await import(/* webpackChunkName: 'formsManager' */'../../../../editor/src/js/classes/modules/FormsManager.js')\n    ).default;\n\n    let data = null;\n    let customHeaders = null;\n    if (this.getProperty('custom_headers')) {\n      customHeaders = parseParamsFromString(\n        this.getProperty('custom_headers'),\n        this.getCurrentModel()\n      );\n    }\n    if (this.getProperty('data')) {\n      data = parseParamsFromString(\n        this.getProperty('data'),\n        getAppContext(this.getCurrentModel()),\n        true\n      );\n      // if (!_.isEmpty(data)) {\n      //   return form.submit('', '', data);\n      // }\n      // return { success: true };\n    }\n    if (this.getProperty('forms_bulk')) {\n      if (\n        _.isArray(getDataByPath(this.getProperty('bulk_path'))) &&\n        _.get(getDataByPath(this.getProperty('bulk_path')), 'length')\n      ) {\n        let bulk = getDataByPath(this.getProperty('bulk_path'));\n        /**\n         * Для получение данных с полей формы, нужно создать форму и вызвать метод getData\n         * @type {AltrpForm}\n         */\n        const form = formsManager.registerForm(\n          this.getFormId(),\n          '',\n          this.getProperty('form_method'),\n          {\n            customRoute: ''\n          }\n        );\n        data = _.assign(form.getData(), data);\n        let bulkRequests = bulk.map(async (item, idx) => {\n          if (this.getProperty('data')) {\n            data = parseParamsFromString(\n              this.getProperty('data'),\n              getAppContext(item),\n              true\n            );\n          }\n          let url = this.getProperty('form_url');\n          url = replaceContentWithData(url, item);\n          const form = formsManager.registerForm(\n            this.getFormId() + idx,\n            '',\n            this.getProperty('form_method'),\n            {\n              customRoute: url\n            }\n          );\n          return await form.submit('', '', data, customHeaders);\n        });\n        try {\n          let res = await Promise.all(bulkRequests);\n        } catch (error) {\n          console.error(error);\n          bulk.forEach((item, idx) => {\n            formsManager.deleteFormById(this.getFormId() + idx);\n          });\n          return {success: false};\n        }\n        bulk.forEach((item, idx) => {\n          formsManager.deleteFormById(this.getFormId() + idx);\n        });\n      }\n\n      return {success: true};\n    }\n    if (this.getProperty('path')) {\n      let _data = getDataByPath(this.getProperty('path'), {});\n      if (!_.isEmpty(_data)) {\n        data = _.assign(_data, data);\n      }\n    }\n    /**\n     *\n     * @type {AltrpForm}\n     */\n    // let form = this.getProperty('_form');\n    if (!this.getFormURL()) {\n      this.setProperty('_form', null);\n      return {\n        success: false\n      };\n    }\n    const formOptions = {\n      dynamicURL: true,\n      customRoute: this.getFormURL()\n    };\n    const form = formsManager.registerForm(\n      this.getFormId(),\n      '',\n      this.getProperty('form_method'),\n      formOptions\n    );\n    let result = {\n      success: true\n    };\n    try {\n      const response = await form.submit('', '', data, customHeaders);\n      result = _.assign(result, response);\n    } catch (error) {\n      console.error(error);\n      result.error = error;\n      result.success = false;\n    }\n\n    return result;\n  }\n\n  /**\n   * Делает редирект на страницу form_url\n   * @return {Promise<{}>}\n   */\n  async doActionRedirect() {\n    let URL = this.getFormURL();\n    if(! URL){\n      return {\n        success: true\n      }\n    }\n    if (window.frontAppRouter) {\n      if (this.getProperty('back')) {\n        frontAppRouter.history.goBack();\n      } else {\n        let innerRedirect = !this.getProperty('outer');\n        if (innerRedirect) {\n          frontAppRouter.history.push(URL);\n        } else {\n          window.location.assign(URL);\n        }\n      }\n    } else {\n      if (this.getProperty('back')) {\n        history.back()\n      } else {\n        window.location.href = URL;\n      }\n    }\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Показывает/скрывает элементы по пользовательским ИД\n   * @return {Promise<{}>}\n   */\n  async doActionToggleElements() {\n    let IDs = this.getProperty('elements_ids');\n\n    if (!IDs) {\n      return {success: true};\n    }\n    IDs = IDs.split(',');\n\n    IDs.forEach(id => {\n      let component = getComponentByElementId(id);\n      if (!component && !component.toggleElementDisplay) {\n        return;\n      }\n      component.toggleElementDisplay();\n    });\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Показывает/скрывает попап\n   * @return {Promise<{}>}\n   */\n  async doActionTogglePopup() {\n    let id = this.getProperty('popup_id');\n    if (!id) {\n      return {\n        success: true\n      };\n    }\n    if (window['h-altrp']) {\n      const loadPopups = (await import(/* webpackChunkName: 'load-popups' */\"../functions/load-popups\")).default;\n      await loadPopups();\n    }\n    appStore.dispatch(togglePopup(id));\n\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Печать страницы\n   * @return {Promise<{}>}\n   */\n  async doActionPrintPage() {\n    window.print();\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Печать элементов\n   * @return {Promise<{}>}\n   */\n  async doActionPrintElements() {\n    let IDs = this.getProperty('elements_ids');\n    if (!IDs) {\n      return {success: true};\n    }\n    IDs = IDs.split(',');\n    let elementsToPrint = [];\n    IDs.forEach(elementId => {\n      if (!elementId || !elementId.trim()) {\n        return;\n      }\n      getHTMLElementById(elementId.trim()) &&\n      elementsToPrint.push(getHTMLElementById(elementId));\n      if (getComponentByElementId(elementId.trim())?.getStylesHTMLElement) {\n        let stylesElement = getComponentByElementId(\n          elementId.trim()\n        ).getStylesHTMLElement();\n        if (stylesElement) {\n          elementsToPrint.push(stylesElement);\n        }\n      }\n    });\n    if (_.get(window, 'stylesModule.stylesContainer.current')) {\n      elementsToPrint.push(\n        _.get(window, 'stylesModule.stylesContainer.current')\n      );\n    }\n    elementsToPrint.push(document.head);\n    printElements(elementsToPrint);\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Скролл к элементу\n   * @return {Promise<{}>}\n   */\n  async doActionScrollToElement() {\n    let elementId = this.getProperty('element_id');\n    if (!elementId) {\n      return {success: true};\n    }\n    elementId = elementId.trim();\n    const element = getHTMLElementById(elementId);\n    let scroller = window.mainScrollbars;\n    if (!scroller) {\n      scroller = document.querySelector('.front-app-content');\n    }\n    if (!scroller) {\n      scroller = window;\n    }\n    if (element) {\n      scrollToElement(scroller, element);\n    }\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Скролл на верх страницы\n   * @return {Promise<{}>}\n   */\n  async doActionScrollToTop() {\n    if (window.mainScrollbars) {\n      window.mainScrollbars.scrollTop(0);\n      return {\n        success: true\n      };\n    }\n    let scroller = document.querySelector('.front-app-content');\n\n    if (!scroller) {\n      scroller = window;\n    }\n    scroller.scrollTo({top: 0, left: 0, behavior: 'smooth'})\n\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Скролл на верх страницы\n   * @return {Promise<{}>}\n   */\n  async doActionScrollToBottom() {\n    const routeContent = document.getElementById('route-content');\n    if (!routeContent) {\n      return {\n        success: true\n      };\n    }\n    if (window.mainScrollbars) {\n      window.mainScrollbars.scrollTop(routeContent.offsetHeight);\n      return {\n        success: true\n      };\n    }\n\n    let scroller = document.querySelector('.front-app-content');\n\n    if (!scroller) {\n      scroller = window;\n    }\n    scroller.scrollTo({left: 0, top: document.querySelector('.route-content').offsetHeight, behavior: 'smooth'})\n    return {\n      success: true\n    };\n  }\n\n  /**\n   * Страницу в PDF\n   * @return {Promise<{}>}\n   */\n  async doActionPageToPDF() {\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    const elements = [];\n\n    elements.push(document.getElementById('route-content'));\n    return await elementsToPdf(elements, filename);\n  }\n\n  /**\n   * Элементы в PDF\n   * @return {Promise<{}>}\n   */\n  async doActionElementsToPDF() {\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    const elements = [];\n    let IDs = this.getProperty('elements_ids');\n    if (!IDs) {\n      return {success: true};\n    }\n    IDs = IDs.split(',');\n    IDs.forEach(elementId => {\n      if (!elementId || !elementId.trim()) {\n        return;\n      }\n      getHTMLElementById(elementId.trim()) &&\n      elements.push(getHTMLElementById(elementId));\n    });\n    return await elementsToPdf(elements, filename);\n  }\n\n  /**\n   * Данные в CSV-файл\n   * @return {Promise<{}>}\n   */\n  async doActionDataToCSV() {\n    let data = getDataByPath(this.getProperty('path'));\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    try {\n      return await dataToCSV(data, filename);\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n  }\n\n  /**\n   * HTML-Таблицу в CSV-файл\n   * @return {Promise<{}>}\n   */\n  async doActionTableToCSV() {\n    let elementId = this.getProperty('element_id');\n    if (!elementId) {\n      return {success: true};\n    }\n    elementId = elementId.trim();\n    const element = getHTMLElementById(elementId);\n    if (!element) {\n      return {success: true};\n    }\n    let data;\n    try {\n      data = dataFromTable(element);\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n    if (_.isEmpty(data)) {\n      return {success: true};\n    }\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    try {\n      return await dataToCSV(data, filename);\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n  }\n\n  /**\n   * HTML-Таблицу в XML-файл\n   * @return {Promise<{}>}\n   */\n  async doActionTableToXML() {\n    let elementId = this.getProperty('element_id');\n    if (!elementId) {\n      return {success: true};\n    }\n    elementId = elementId.trim();\n    const element = getHTMLElementById(elementId);\n    if (!element) {\n      return {success: true};\n    }\n    let data;\n    try {\n      data = dataFromTable(element);\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n    if (_.isEmpty(data)) {\n      return {success: true};\n    }\n    let filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    try {\n      return await dataToXML(data, filename);\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n  }\n\n  /**\n   * HTML-таблицу в XLS-файл\n   * @return {Promise}\n   */\n  async doActionTableToXLS() {\n\n    let data = [];\n\n    if (this.getProperty('all_sources')) {\n      const all_sources_path = this.getProperty('all_sources_path');\n      if (all_sources_path) data = getDataByPath(all_sources_path, {});\n      data = {data};\n\n    } else {\n      const elementId = this.getProperty('element_id').trim();\n\n      if (!elementId) {\n        console.error('Element ID is not set');\n        return {success: true};\n      }\n\n      const table = getHTMLElementById(elementId);\n      if (!table) {\n        console.error('Table with provided ID is not found');\n        return {success: true};\n      }\n\n      data = dataFromTable(table);\n\n      const formattedData = [];\n\n      _.each(data, row => formattedData.push(Object.values(row)));\n      let rawTemplateData = this.getProperty('template_data');\n      if (rawTemplateData) {\n        const parsedTemplateData = rawTemplateData\n          .split('\\n')\n          .reduce((data, row) => {\n            const keyValuePair = row.split('=');\n            data[keyValuePair[0]] = keyValuePair[1];\n            return data;\n          }, {});\n        data = {...parsedTemplateData, data: formattedData};\n      } else {\n        data = {data};\n      }\n    }\n\n    const filename = replaceContentWithData(this.getProperty('name', 'file'), this.getCurrentModel().getData());\n    const templateName = this.getProperty('template_name');\n\n    try {\n      const blob = await dataToXLS(data, filename, templateName);\n      let link = document.createElement('a');\n      link.setAttribute('href', window.URL.createObjectURL(blob));\n      link.setAttribute('download', filename + '.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      return {success: true};\n    } catch (error) {\n      console.error(error);\n      return {success: false};\n    }\n  }\n\n  /**\n   * действие-логин\n   * @return {Promise<{}>}\n   */\n  async doActionLogin() {\n    /**\n     *\n     * @member {AltrpForm} form\n     */\n    let form = this.getProperty('_form');\n    let success = true;\n    form.fields.forEach(field => {\n      if (!field.fieldValidate()) {\n        success = false;\n      }\n    });\n    if (!success) {\n      return {success: false};\n    }\n\n    return await altrpLogin(form.getData(), this.getFormId());\n  }\n\n  /**\n   * действие-выход из приложения\n   * @return {Promise<{}>}\n   */\n  async doActionLogout() {\n    return await altrpLogout();\n  }\n\n  /**\n   * действие-установка значения по для пути `path`\n   * @return {Promise<{}>}\n   */\n  async doActionSetData() {\n    let paths = this.getProperty('path');\n    const result = {\n      success: true\n    };\n    if (!paths) {\n      return result;\n    }\n    if (paths.indexOf(',') !== -1) {\n      paths = paths.split(',').map(path => path.trim());\n    } else {\n      paths = [paths];\n    }\n    for (let path of paths) {\n      path = replaceContentWithData(path, this.getCurrentModel().getData());\n      let value = this.getProperty('value') || '';\n      value = value.trim();\n      const setType = this.getProperty('set_type');\n      let count = this.getProperty('count');\n      switch (setType) {\n        case 'toggle': {\n          value = !getDataByPath(path);\n          result.success = setDataByPath(path, value);\n        }\n          break;\n        case 'set': {\n          if (\n            value.split(/\\r?\\n/).length === 1 &&\n            value.indexOf('{{') === 0 &&\n            value.indexOf('}}') === value.length - 2\n          ) {\n            value = getDataByPath(\n              value.replace('{{', '').replace('}}', ''),\n              null,\n              this.getCurrentModel()\n            );\n          } else if (value.indexOf('|') !== -1) {\n            value = parseParamsFromString(\n              value,\n              this.getCurrentModel(),\n              true\n            );\n          }\n          result.success = setDataByPath(path, value);\n        }\n          break;\n        case 'toggle_set': {\n          let currentValue = getDataByPath(path);\n          value = value.split('\\n').map(v => v.trim());\n          if (value.length === 1) {\n            value.push('');\n          }\n          let nextIndex = value.indexOf(currentValue) + 1;\n          if (nextIndex >= value.length) {\n            nextIndex = 0;\n          }\n          value = value[nextIndex] || '';\n          result.success = setDataByPath(path, value);\n        }\n          break;\n        case 'increment': {\n          let currentValue = getDataByPath(path);\n          currentValue = currentValue\n            ? _.isNaN(Number(currentValue))\n              ? 1\n              : Number(currentValue)\n            : Number(!!currentValue);\n          count = Number(count) || 1;\n          currentValue += count;\n          result.success = setDataByPath(path, currentValue);\n        }\n          break;\n        case 'decrement': {\n          let currentValue = getDataByPath(path);\n          currentValue = currentValue\n            ? _.isNaN(Number(currentValue))\n              ? 1\n              : Number(currentValue)\n            : Number(!!currentValue);\n          count = Number(count) || 1;\n          currentValue -= count;\n          result.success = setDataByPath(path, currentValue);\n        }\n          break;\n        case 'push_items': {\n          let currentValue = getDataByPath(path);\n          let item = {};\n          if (!_.isArray(currentValue)) {\n            currentValue = [];\n          }\n          currentValue = [...currentValue];\n          if (_.isObject(getDataByPath(value))) {\n            item = getDataByPath(value);\n          }\n          count = Number(count) || 1;\n          if (count < 0) {\n            count = 1;\n          }\n          while (count) {\n            _.isArray(item)\n              ? currentValue.push([...item])\n              : currentValue.push({...item});\n            --count;\n          }\n          result.success = setDataByPath(path, currentValue);\n        }\n          break;\n        case 'remove_items': {\n          let items = path.split(/\\r?\\n/);\n          items.forEach(i => {\n            if (!i) {\n              return;\n            }\n            i = i.trim();\n            if (!i) {\n              return;\n            }\n            if (i.indexOf('{{') !== -1) {\n              i = replaceContentWithData(i, this.getCurrentModel().getData());\n            }\n            let item = getDataByPath(i);\n            if (!item) {\n              return;\n            }\n            let listPath = i.replace(/.\\d+$/, '').trim();\n            if (!listPath) {\n              return;\n            }\n            let list = getDataByPath(listPath);\n            if (!_.isArray(list)) {\n              return;\n            }\n            list = [...list];\n\n            list = list.filter(_item => _item !== item);\n            setDataByPath(listPath, list);\n          });\n          result.success = true;\n        }\n          break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * действие - манипуляция с элементами форм\n   * @return {Promise<{}>}\n   */\n  doActionFormsManipulate() {\n    let IDs = this.getProperty('elements_ids');\n    if (!IDs) {\n      return {success: true};\n    }\n    IDs = IDs.split(',');\n    const change = this.getProperty('forms_change');\n    IDs.forEach(id => {\n      let component = getComponentByElementId(id);\n      switch (change) {\n        case 'select_all': {\n          if (_.get(component, 'elementRef.current.selectAll')) {\n            component.elementRef.current.selectAll();\n          }\n        }\n          break;\n        case 'clear': {\n          if (_.get(component, 'elementRef.current.clearValue')) {\n            component.elementRef.current.clearValue();\n          }\n        }\n          break;\n      }\n    });\n    return {success: true};\n  }\n\n  /**\n   * действие - выполнение пользовательского кода\n   * @return {Promise<{}>}\n   */\n  async doActionCustomCode() {\n    let code = this.getProperty('code');\n    try {\n      code = replaceContentWithData(code, this.getCurrentModel().getData())\n      eval(code);\n      return {success: true};\n    } catch (error) {\n      console.error('Evaluate error in doActionCustomCode: \"' + error.message + '\"');\n      return {success: false};\n    }\n  }\n\n  /**\n   * Действие - обновление текущей модели по AJAX\n   * Action - updating the current model via AJAX\n   * @return {Promise<{}>}\n   */\n  async doActionUpdateCurrentModel() {\n\n    let modelName = window?.currentPage?.model_name\n    if (!modelName) {\n      return {success: true}\n    }\n    let modelId = window?.model_data?.id;\n    if (!modelId) {\n      return {success: true}\n    }\n    try {\n      let model = await new Resource({\n        route: `/ajax/models/${modelName}`\n      }).get(modelId);\n      if (_.isObject(model.data)) {\n        model = model.data\n      }\n      const oldModel = window.appStore.getState().currentModel.getData();\n      model.altrpModelUpdated = true;\n\n      if (!_.isEqual(model, oldModel)) {\n        appStore.dispatch(changeCurrentModel({altrpModelUpdated: false}));\n        appStore.dispatch(changeCurrentModel(model));\n      }\n      return {success: true}\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * действие - обновление текущего хранилища\n   * @return {Promise<{}>}\n   */\n  async doActionUpdateCurrentDatasources() {\n    let aliases = this.getProperty('aliases') || '';\n    aliases = aliases\n      .split(',')\n      .map(alias => alias.trim())\n      .filter(alias => alias);\n    const allDataSources = window.dataStorageUpdater.getProperty(\n      'currentDataSources'\n    );\n    const dataSourcesToUpdate = allDataSources.filter(dataSource => {\n      return aliases.indexOf(dataSource.getProperty('alias')) !== -1;\n    });\n    /**\n     * @type {DataStorageUpdater}\n     */\n    await window.dataStorageUpdater.updateCurrent(dataSourcesToUpdate, false);\n    return {success: true};\n  }\n\n  /**\n   * Триггер события на другом компоненте\n   * @return {Promise<{}>}\n   */\n  async doActionTrigger() {\n    let elementId = this.getProperty('element_id');\n    let element = getComponentByElementId(elementId);\n    let action = this.getProperty('action');\n    if (_.isFunction(element[action])) {\n      element[action]();\n      return {\n        success: true\n      };\n    }\n    try {\n      if(_.isFunction(element.elementRef.current[action])){\n        let result = await element.elementRef.current[action]();\n        if(_.isObject(result)){\n          return result\n        }\n        return {success:true}\n      }\n      element.elementRef.current.fireAction(action);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(error);\n      return {\n        success: false\n      };\n    }\n  }\n\n  /**\n   * Отправка почты\n   */\n  async doActionEmail() {\n    let templateGUID = this.getProperty('email_template');\n    if (!templateGUID) {\n      return {success: true};\n    }\n    let res = {success: false};\n    try {\n      res = await sendEmail(\n        templateGUID,\n        this.getReplacedProperty('subject'),\n        this.getReplacedProperty('from'),\n        this.getReplacedProperty('to'),\n        this.getReplacedProperty('attachments')\n      );\n    } catch (e) {\n      console.error(e);\n      return {\n        success: false\n      };\n    }\n    return res;\n  }\n\n  /**\n   * Добавляем временную задержку в милисекундах\n   */\n  async doActionDelay() {\n    await delay(this.getProperty('milliseconds') || 0);\n    return {success: true};\n  }\n\n  /**\n   * Воспроизводим звук\n   * @return {Promise<{success: boolean}>}\n   */\n  async doActionPlaySound() {\n    const duration = this.getProperty('milliseconds') || 0;\n    const url = this.getProperty('media_url');\n    const loop = this.getProperty('loop');\n    if (url) {\n      const {playSound} = await import(/* webpackChunkName: 'helpers-sounds' */'../helpers/sounds');\n      playSound(url, loop, duration);\n      await delay(20);\n    }\n    return {success: true};\n  }\n\n  /**\n   * Проверка условий\n   * @return {Promise<{success: boolean}>}\n   */\n  async doActionCondition() {\n    const compare = this.getProperty('compare');\n    let conditionLeft = this.getProperty('condition_left');\n    let conditionRight = this.getProperty('condition_right');\n    conditionLeft = getDataByPath(conditionLeft, null , this.getCurrentModel().getData());\n    conditionRight = replaceContentWithData(conditionRight, this.getCurrentModel().getData());\n    const res = altrpCompare(conditionLeft, conditionRight, compare);\n    return {success: res};\n  }\n\n  metaMaskConnect = async () => {\n    let path = this.getProperty('path');\n    let currentValue = getDataByPath(path); // не получаю значение, приходит всегда null\n\n    if (!window.ethereum) {\n      return {\n        success: false\n      };\n    }\n\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\",\n    });\n    if (accounts.length > 0) {\n      return {\n        success: false\n      };\n    } else {\n      const requestAccounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setDataByPath(path, requestAccounts[0])\n      return {\n        success: true\n      };\n    }\n  }\n\n  /**\n   * Версия сайта для слабовидящих\n   * @return {Promise<void>}\n   */\n  async doActionVIToggle() {\n    try {\n      const {loadVIPlugin} = (await import(/* webpackChunkName 'loadVIPlugin' */'../helpers/plugins'))\n      await loadVIPlugin();\n    } catch (error) {\n      return {\n        success: false\n      };\n    }\n    // console.log($);\n    let HTMLWrapper = getWrapperHTMLElementByElement(this.getElement());\n    // if(HTMLWrapper){\n    //   HTMLWrapper.classList.add('bvi-hide');\n    // }\n\n    // $.bvi({\n    //   bvi_target: '.altrp-btn',\n    //\n    // });\n\n    return {\n      success: true\n    };\n  }\n\n  /**\n   *\n   * @returns {Promise<void>}\n   */\n  async doActionOAuth() {\n    const OIDC  = await import (/* webpackChunkName: 'OIDC' */\"oidc-client\");\n    const {WebStorageStateStore, UserManager, authority, OidcClient} = OIDC;\n    (window.altrpLibs = window.altrpLibs || {}).OIDC = OIDC\n\n    const method = this.getProperty('method')\n    if( ! method){\n      return {\n        success: true,\n      }\n    }\n    let settings = {\n      client_id: 'AisOrder',\n      redirect_uri: `http://zayavka.geobuilder.ru/login/laravelpassport/callback`,\n      post_logout_redirect_uri: `http://zayavka.geobuilder.ru/login/laravelpassport/callback`,\n      response_type: 'token id_token',\n      scope: 'openid profile',\n      authority:'https://fs.geobuilder.ru/idp',\n      automaticSilentRenew: false,\n      userStore: new WebStorageStateStore({ store: window.localStorage }),\n      filterProtocolClaims: true,\n      loadUserInfo: true,\n      monitorSession: false,\n      checkSessionInterval: 3600000\n    };\n    const _manager = new UserManager(settings);\n    console.log(_manager);\n    settings = {\n      client_id: this.getProperty('client_id'),\n      redirect_uri: this.getProperty('redirect_uri'),\n      post_logout_redirect_uri: this.getProperty('post_logout_redirect_uri'),\n      response_type: this.getProperty('response_type'),\n      scope: this.getProperty('scope'),\n      authority:this.getProperty('authority'),\n      automaticSilentRenew: this.getProperty('automaticSilentRenew'),\n      userStore: new WebStorageStateStore({ store: window.localStorage }),\n      filterProtocolClaims: this.getProperty('filterProtocolClaims'),\n      loadUserInfo: this.getProperty('loadUserInfo'),\n      monitorSession: this.getProperty('monitorSession'),\n      checkSessionInterval: this.getProperty('checkSessionInterval')\n    };\n    const manager = new UserManager(settings);\n    // console.log( manager);\n    // console.log(await manager.getUser());\n    let result;\n    console.log(method);\n\n    if(_.isFunction(manager[method])){\n      try {\n        result =await manager[method]();\n      } catch (e) {\n        return {success:false}\n      }\n    }\n    console.log(result);\n    // await manager.signoutRedirect();\n    return {success:true}\n  }\n}\n\nexport default AltrpAction;\n","/**\r\n * @class ActionsManager\r\n * Класс хранит действия для виджетов и вызывает их последовательно в порядке полученного списка\r\n * @member {} data - где хранятся действия виджета сгруппированные по типу события {\r\n *  widgetId:{\r\n *    eventName: []\r\n *  }\r\n * }\r\n */\r\nimport AltrpAction from \"../AltrpAction\";\r\nimport AltrpModel from \"../../../../../editor/src/js/classes/AltrpModel\";\r\nconst {isEditor, } = window.altrpHelpers;\r\n\r\nclass ActionsManager extends AltrpModel{\r\n  /**\r\n   * Регистрирует действия для определенного виджета\r\n   * @param {string} widgetId\r\n   * @param {array} actions\r\n   * @param {string} eventName\r\n   * @param {FrontElement | null} element\r\n   * @param {*} context\r\n   */\r\n  registerWidgetActions(widgetId, actions = [], eventName = 'click', element = null, context = null ){\r\n    if((! actions) || ! actions.length){\r\n      return null;\r\n    }\r\n    actions = actions.filter(a=>a.type).map(a=>{\r\n      return new AltrpAction(a, widgetId, element);\r\n    });\r\n    return this.setProperty(`actions.${widgetId}.${eventName}`, actions);\r\n  }\r\n\r\n  /**\r\n   * удаляет все действия виджета\r\n   * @param {string} widgetId\r\n   */\r\n  unregisterWidgetActions(widgetId){\r\n    return this.unsetProperty(`actions.${widgetId}`)\r\n  }\r\n\r\n  /**\r\n   * Вызывает все зарегистрированные действия определенного типа для виджета\r\n   * @param {string} widgetId\r\n   * @param {string} eventName\r\n   * @param {[]} preventedActions\r\n   * @param {FrontElement} element\r\n   * @return {Promise<void>}\r\n   */\r\n  async callAllWidgetActions(widgetId, eventName = 'click', preventedActions, element){\r\n    if(isEditor()){\r\n      return\r\n    }\r\n    if(this.getProperty(`widget.statuses.${widgetId}.${eventName}`) === 'inAction'){\r\n      return\r\n    }\r\n    this.setProperty(`widget.statuses.${widgetId}.${eventName}`, 'inAction')\r\n    preventedActions = preventedActions || [];\r\n    let actions = preventedActions;\r\n    const errors = [];\r\n    actions = actions.map(a=> new AltrpAction(a, widgetId, element))\r\n    // if(! actions.length && preventedActions.length && element){\r\n    //   this.registerWidgetActions(widgetId, preventedActions, eventName, element);\r\n    //   actions = this.getProperty(`actions.${widgetId}.${eventName}`, []);\r\n    // }\r\n    for (let action of actions){\r\n      try {\r\n        let result = await action.doAction();\r\n        if(! result.success){\r\n          if(result.error){\r\n            console.error(result.error);\r\n            errors.push(result.error);\r\n          }\r\n          break;\r\n        }\r\n      } catch(error){\r\n        errors.push(error);\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.setProperty(`widget.statuses.${widgetId}.${eventName}`, 'noAction')\r\n    if (errors.length){\r\n      return {\r\n        success: false,\r\n        errors\r\n      }\r\n    }\r\n    return {success: true};\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @type {ActionsManager}\r\n */\r\nwindow.actionsManager = new ActionsManager;\r\nexport default window.actionsManager\r\n","import {changeCurrentEmailTemplate} from \"../store/current-email-template/actions\";\r\nimport {delay} from '../helpers';\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\n/**\r\n * Отправляет шаблон письма на бэкенд\r\n * @param {string | null}emailTemplateGUID\r\n * @param {string} subject\r\n * @param {string} from\r\n * @param {string} to\r\n * @param {string} attachments\r\n * @return {Promise<void>}\r\n */\r\nexport async function sendEmail(emailTemplateGUID = null, subject = 'Message', from = '', to = '', attachments = ''){\r\n  if(! emailTemplateGUID){\r\n    return {success: true};\r\n  }\r\n  let templateLoader = (await import(/* webpackChunkName: 'TemplateLoader' */'../../../../editor/src/js/classes/modules/TemplateLoader')).default;\r\n  let template = await templateLoader.loadTemplate(emailTemplateGUID);\r\n  appStore.dispatch(changeCurrentEmailTemplate(template));\r\n  let html = '';\r\n  do{\r\n    await delay(1500);\r\n    if(_.get(window, 'emailTemplatesRenderer.emailTemplate.current')){\r\n      /**\r\n       * @var  {HTMLElement} html\r\n       */\r\n      html = window.emailTemplatesRenderer.emailTemplate.current.cloneNode(true);\r\n      html.style.display = 'table';\r\n      html = html.outerHTML;\r\n    }\r\n  }while(! html);\r\n  // appStore.dispatch(changeCurrentEmailTemplate(null));\r\n  const resource = new Resource({route: '/ajax/feedback-html'});\r\n  let res = await resource.post(\r\n    {\r\n      subject,\r\n      to,\r\n      from,\r\n      html,\r\n      attachments,\r\n    }\r\n  );\r\n  return {success: true}\r\n}\r\n"],"sourceRoot":""}